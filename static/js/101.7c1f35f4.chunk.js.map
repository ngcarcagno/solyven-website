{"version":3,"file":"static/js/101.7c1f35f4.chunk.js","mappings":"0NAIaA,GAAOC,EAAAA,EAAAA,aAAW,CAAAC,EAA2BC,KAAG,IAAAC,EAAA,IAA7B,YAAEC,GAAsBH,EAANI,GAAIC,EAAAA,EAAAA,GAAAL,EAAAM,GAAA,OACpDC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKP,IAAKA,GAASG,GAAI,IAAEK,UAAW,QAAAC,OAAmB,OAAXP,QAAW,IAAXA,EAAAA,EAAe,GAAE,KAAAO,OAAkB,QAAlBR,EAAIE,EAAKK,iBAAS,IAAAP,EAAAA,EAAI,IAAKS,SAAU,IAEpGb,EAAKc,YAAc,OAEnB,MAAMC,EAAWA,CAACC,EAAGC,EAAOC,EAAOC,KAAK,CACtCC,EAAGJ,EAAIC,EACPI,GAAIL,EAAIE,EACRI,GAAIN,EAAIC,EAAQ,IAChBM,OAAQJ,EAAQH,IA4LlB,EA7KiBQ,IAYV,IAZW,MAChBC,EAAQ,IAAG,OACXC,EAAS,IAAG,aACZC,EAAe,GAAE,iBACjBC,EAAmB,GAAE,MACrBC,EAAQ,IAAI,aACZC,GAAe,EAAK,WACpBC,EAAa,KAAI,YACjBC,EAAW,WACXC,EAAa,EAAC,OACdC,EAAS,UAAS,SAClBC,GACDX,EACC,MAAMY,EACO,YAAXF,EACI,CACEG,KAAM,uBACNC,QAAS,EACTC,QAAS,EACTC,UAAW,EACXC,eAAgB,GAChBC,YAAa,KAEf,CACEL,KAAM,eACNC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,eAAgB,IAChBC,YAAa,IAGfC,GAAWC,EAAAA,EAAAA,UAAQ,IAAMC,EAAAA,SAASC,QAAQX,IAAW,CAACA,IACtDY,GAAOH,EAAAA,EAAAA,UACX,IAAMD,EAASK,KAAI,IAAMC,EAAAA,eAEzB,CAACN,EAASO,SAGNC,GAAQC,EAAAA,EAAAA,QAAOC,MAAMC,KAAK,CAAEJ,OAAQP,EAASO,SAAU,CAACK,EAAGvC,IAAMA,KAEjEwC,GAAQJ,EAAAA,EAAAA,QAAO,MACfK,GAAcL,EAAAA,EAAAA,UACdM,GAAUN,EAAAA,EAAAA,UACVO,GAAYP,EAAAA,EAAAA,QAAO,OAEzBQ,EAAAA,EAAAA,YAAU,KACR,MAAMzC,EAAQ4B,EAAKG,OACnBH,EAAKc,SAAQ,CAACC,EAAG9C,KAAM+C,OA7DTC,EA6DkBF,EAAEG,QA7DhBC,EA6DyBnD,EAASC,EAAGW,EAAcC,EAAkBT,GA7D/DgD,EA6DuElC,EA5DjGmC,EAAAA,GAAKC,IAAIL,EAAI,CACX5C,EAAG8C,EAAK9C,EACRC,EAAG6C,EAAK7C,EACRC,EAAG4C,EAAK5C,EACRgD,UAAW,GACXC,UAAW,GACXC,MAAOL,EACPM,gBAAiB,gBACjBlD,OAAQ2C,EAAK3C,OACbmD,SAAS,IAVIX,IAACC,EAAIE,EAAMC,CA6DkF,IAE1G,MAAMQ,EAAOA,KACX,GAAIxB,EAAMc,QAAQf,OAAS,EAAG,OAE9B,MAAO0B,KAAUtE,GAAQ6C,EAAMc,QACzBY,EAAU9B,EAAK6B,GAAOX,QACtBa,EAAKV,EAAAA,GAAKW,WAChBvB,EAAMS,QAAUa,EAEhBA,EAAGE,GAAGH,EAAS,CACbxD,EAAG,QACH4D,SAAU7C,EAAOE,QACjBD,KAAMD,EAAOC,OAGfyC,EAAGI,SAAS,UAAU,KAADtE,OAAOwB,EAAOE,QAAUF,EAAOK,iBACpDnC,EAAKuD,SAAQ,CAACsB,EAAKnE,KACjB,MAAMgD,EAAKjB,EAAKoC,GAAKlB,QACfC,EAAOnD,EAASC,EAAGW,EAAcC,EAAkBmB,EAAKG,QAC9D4B,EAAGT,IAAIL,EAAI,CAAEzC,OAAQ2C,EAAK3C,QAAU,WACpCuD,EAAGE,GACDhB,EACA,CACE5C,EAAG8C,EAAK9C,EACRC,EAAG6C,EAAK7C,EACRC,EAAG4C,EAAK5C,EACR2D,SAAU7C,EAAOG,QACjBF,KAAMD,EAAOC,MACb,YAADzB,OACe,IAAJI,GACb,IAGH,MAAMoE,EAAWrE,EAASgC,EAAKG,OAAS,EAAGvB,EAAcC,EAAkBmB,EAAKG,QAChF4B,EAAGI,SAAS,SAAS,YAADtE,OAAcwB,EAAOG,QAAUH,EAAOM,cAC1DoC,EAAGO,MACD,KACEjB,EAAAA,GAAKC,IAAIQ,EAAS,CAAEtD,OAAQ6D,EAAS7D,QAAS,QAEhD+D,EACA,UAEFR,EAAGE,GACDH,EACA,CACEzD,EAAGgE,EAAShE,EACZC,EAAG+D,EAAS/D,EACZC,EAAG8D,EAAS9D,EACZ2D,SAAU7C,EAAOI,UACjBH,KAAMD,EAAOC,MAEf,UAGFyC,EAAGO,MAAK,KACNlC,EAAMc,QAAU,IAAI3D,EAAMsE,EAAM,GAChC,EASJ,GALAlB,EAAQO,QAAUU,EAElBA,IACAlB,EAAYQ,QAAUsB,OAAOC,aAAY,SAAAC,EAAA,OAAqB,QAArBA,EAAM/B,EAAQO,eAAO,IAAAwB,OAAA,EAAfA,EAAAJ,KAAA3B,EAAmB,GAAE7B,GAEhEC,EAAc,CAChB,MAAM4D,EAAO/B,EAAUM,QACjB0B,EAAQA,KAAO,IAADC,EACL,QAAbA,EAAApC,EAAMS,eAAO,IAAA2B,GAAbA,EAAeD,QACfE,cAAcpC,EAAYQ,SAE1B,IAAK,IAAD6B,EACF,MAAMC,EAAW5C,EAAMc,QAAQ,GACzB+B,EAAwB,QAAjBF,EAAG/C,EAAKgD,UAAS,IAAAD,OAAA,EAAdA,EAAgB7B,QAC5B+B,GAAS5B,EAAAA,GAAKY,GAAGgB,EAAS,CAAEC,MAAOlE,EAAYkD,SAAU,IAAM5C,KAAM,cAC3E,CAAE,MAAO6D,GACK,GAGVC,EAASA,KAAO,IAADC,EACN,QAAbA,EAAA5C,EAAMS,eAAO,IAAAmC,GAAbA,EAAeC,OACf5C,EAAYQ,QAAUsB,OAAOC,aAAY,SAAAc,EAAA,OAAqB,QAArBA,EAAM5C,EAAQO,eAAO,IAAAqC,OAAA,EAAfA,EAAAjB,KAAA3B,EAAmB,GAAE7B,GAEpE,IAAK,IAAD0E,EACF,MAAMR,EAAW5C,EAAMc,QAAQ,GACzB+B,EAAwB,QAAjBO,EAAGxD,EAAKgD,UAAS,IAAAQ,OAAA,EAAdA,EAAgBtC,QAC5B+B,GAAS5B,EAAAA,GAAKY,GAAGgB,EAAS,CAAEC,MAAO,EAAGhB,SAAU,IAAM5C,KAAM,cAClE,CAAE,MAAO6D,GACK,GAKhB,OAFAR,EAAKc,iBAAiB,aAAcb,GACpCD,EAAKc,iBAAiB,aAAcL,GAC7B,KACLT,EAAKe,oBAAoB,aAAcd,GACvCD,EAAKe,oBAAoB,aAAcN,GACvCN,cAAcpC,EAAYQ,QAAQ,CAEtC,CACA,MAAO,IAAM4B,cAAcpC,EAAYQ,QAAQ,GAE9C,CAACtC,EAAcC,EAAkBC,EAAOC,EAAcG,EAAYC,IAErE,MAAMwE,EAAW/D,EAASK,KAAI,CAAC2D,EAAO3F,KAAC,IAAA4F,EAAA,OACrCC,EAAAA,EAAAA,gBAAeF,IACXG,EAAAA,EAAAA,cAAaH,EAAO,CAClBI,IAAK/F,EACLb,IAAK4C,EAAK/B,GACVgG,OAAKtG,EAAAA,EAAAA,GAAA,CAAIe,QAAOC,UAA6B,QAAvBkF,EAAMD,EAAMM,MAAMD,aAAK,IAAAJ,EAAAA,EAAI,CAAC,GAClDM,QAAUC,IAAO,IAADC,EAAAC,EACK,QAAnBD,GAAAC,EAAAV,EAAMM,OAAMC,eAAO,IAAAE,GAAnBA,EAAA/B,KAAAgC,EAAsBF,GACX,OAAXnF,QAAW,IAAXA,GAAAA,EAAchB,EAAE,IAGpB2F,CAAK,IAGX,OACElG,EAAAA,EAAAA,KAAA,OAAKN,IAAKwD,EAAWhD,UAAU,sBAAsBqG,MAAO,CAAEvF,QAAOC,UAASS,SAC3EuE,GACG,E,4lBC9LV,MAAMY,EAAyC,CAC7CC,YAAW,IACXC,MACF,KA8SA,EA5SsBC,KACpB,MAAMC,EAAQC,EAAAA,EAAAA,GACRC,EAAe5H,EACf6H,EAAeF,EAAAA,EAAAA,GACfG,EAAkBH,EAAAA,EAAAA,IAGjBI,EAAIC,IAASC,EAAAA,EAAAA,UAAiB,OAC9BC,EAAIC,IAASF,EAAAA,EAAAA,UAAiB,MAErCrE,EAAAA,EAAAA,YAAU,KACR,MAAMwE,EAAeA,KACnBJ,EAAMzC,OAAO8C,YACbF,EAAM5C,OAAO+C,YAAY,EAM3B,MAJsB,qBAAX/C,SACT6C,IACA7C,OAAOiB,iBAAiB,SAAU4B,IAE7B,KACiB,qBAAX7C,QAAwBA,OAAOkB,oBAAoB,SAAU2B,EAAa,CACtF,GACA,IAGH,MAkEMG,EAlEeC,EAAC/G,EAAeC,KACnC,MAAM+G,EAAgB/G,GAAU,IAEhC,GAAID,GAAS,IAAK,CAChB,MAAMiH,EAAIC,KAAKC,IAAI,IAAKD,KAAKE,MAAc,IAARpH,IAC7BqH,EAAIH,KAAKE,MAAU,IAAJH,GACrB,MAAO,CACLK,cAAeL,EACfM,eAAgBP,EAAgBE,KAAKE,MAAU,IAAJC,GAAYA,EACvDnH,aAAcgH,KAAKC,IAAI,EAAGD,KAAKE,MAAU,IAAJH,IACrC9G,iBAAkB+G,KAAKC,IAAI,GAAID,KAAKE,MAAU,IAAJH,IAC1CO,WAAYN,KAAKE,MAAMH,GAAKD,EAAgB,KAAQ,MAAS,KAC7DS,SAAU,GACVC,UAAW,UACXC,kBAAmBT,KAAKU,IAAI,IAAKX,EAAI,IACrCY,cAAe,UAEnB,CAEA,GAAI7H,GAAS,IAAK,CAChB,MAAMiH,EAAIC,KAAKC,IAAI,IAAKD,KAAKE,MAAc,GAARpH,IAC7BqH,EAAIH,KAAKE,MAAU,IAAJH,GACrB,MAAO,CACLK,cAAeL,EACfM,eAAgBP,EAAgBE,KAAKE,MAAU,GAAJC,GAAWA,EACtDnH,aAAcgH,KAAKC,IAAI,GAAID,KAAKE,MAAU,KAAJH,IACtC9G,iBAAkB+G,KAAKC,IAAI,GAAID,KAAKE,MAAU,IAAJH,IAC1CO,WAAYN,KAAKE,MAAMH,GAAKD,EAAgB,KAAQ,MAAS,KAC7DS,SAAU,GACVC,UAAW,OACXC,kBAAmBT,KAAKU,IAAI,IAAKX,EAAI,IACrCY,cAAe,UAEnB,CAEA,GAAI7H,GAAS,IAAK,CAChB,MAAMiH,EAAIC,KAAKC,IAAI,IAAKD,KAAKE,MAAc,GAARpH,IAC7BqH,EAAIH,KAAKE,MAAU,IAAJH,GACrB,MAAO,CACLK,cAAeL,EACfM,eAAgBP,EAAgBE,KAAKE,MAAU,GAAJC,GAAWA,EACtDnH,aAAcgH,KAAKC,IAAI,GAAID,KAAKE,MAAU,IAAJH,IACtC9G,iBAAkB+G,KAAKC,IAAI,GAAID,KAAKE,MAAU,IAAJH,IAC1CO,WAAYN,KAAKE,MAAMH,GAAKD,EAAgB,IAAO,MAAS,KAC5DS,SAAU,GACVC,UAAW,UACXC,kBAAmBT,KAAKU,IAAI,IAAKX,EAAI,IACrCY,cAAe,UAEnB,CAEA,MAAMC,EAAWZ,KAAKU,IAAI,IAAKV,KAAKE,MAAc,IAARpH,IACpC+H,EAAWb,KAAKE,MAAiB,GAAXU,GAC5B,MAAO,CACLR,cAAeQ,EACfP,eAAgBtH,GAAU,IAAMiH,KAAKE,MAAiB,IAAXW,GAAmBA,EAC9D7H,aAAcgH,KAAKE,MAAiB,IAAXU,GACzB3H,iBAAkB+G,KAAKE,MAAiB,IAAXU,GAC7BN,WAAYN,KAAKE,MAAMU,GAAY7H,GAAU,IAAM,KAAQ,MAAS,KACpEwH,SAAU,GACVC,UAAW,YACXC,kBAAmB,IACnBE,cAAe,OAChB,EAGWd,CAAaT,EAAIG,GACzBuB,EAAW1B,GAAM,IAUjB2B,EAAuBD,EAAWd,KAAKC,IAAI,GAAID,KAAKE,MAAW,IAALX,IAAcS,KAAKC,IAAI,IAAKD,KAAKE,MAAW,IAALX,IACjGyB,EAAuBhB,KAAKC,IAAI,IAAKV,EAFtB,GAE0CwB,EAAuB,IAEhFE,EAAuC,CAC3CC,QAAS,OACTpI,MAAO,OACPC,OAAO,GAADd,OAAK8I,EAAoB,MAC/BI,SAAU,WACVC,WAAYhC,GAAM,KAAO,WAAa,aACtCiC,eAAgB,SAChBC,UAAW,cAGPC,EAAuC,CAC3CC,UAAU,GAADvJ,OAAK+H,KAAKC,IAAI,IAAKD,KAAKE,MAAMc,GAAwBF,EAAW,GAAM,KAAI,MACpFI,QAAS,OACTpI,MAAO,OACPsI,WAAY,SACZC,eAAgB,SAChBC,UAAW,aACXhB,WAAYQ,EAAW,cAAWnE,GAK9B8E,GADkBzB,KAAKC,IAAI,IAAKD,KAAKE,MAAMc,GAAwBF,EAAW,GAAM,KACnEd,KAAKE,MAAW,IAALd,IAI5BsC,EAAkB1B,KAAKU,IADR,KAC0Be,GAGzCE,EAAoB3B,KAAKU,IAAIV,KAAKE,MAAMc,GAAuBhB,KAAKE,MAAwB,IAAlBwB,IAChF,IAAIrB,EAAiBL,KAAKC,IAAI,IAAKD,KAAKU,IAAIiB,EAAmB,MAG/D,GAAIb,EAAU,CACZ,MAAMc,EAAY5B,KAAKE,MAAuB,KAAjBG,GAC7BA,EAAiBL,KAAKU,IAAI,IAAKV,KAAKC,IAAII,EAAgBuB,GAC1D,CAGA,MAAMC,EAAW7B,KAAKE,MAAMG,GAAkBS,EAAW,KAAO,MAC1DV,EAAgBJ,KAAKC,IAAI,IAAKD,KAAKU,IAAIgB,EAAiBG,IAGxDC,EAAmB9B,KAAKC,IAAI,GAAID,KAAKE,MAAuB,IAAjBG,IAE3C0B,EAAoC,CACxCjJ,MAAO,OACPkJ,SAAUN,EACVR,QAAS,OACTG,eAAgB,SAChBD,WAAY,SAEZa,cAAenB,EAAW,GAAK,GAGjC,OACEoB,EAAAA,EAAAA,MAAA,WAASC,GAAG,UAAS3I,SAAA,EACnB1B,EAAAA,EAAAA,KAACsK,EAAAA,qBAAoB,KAErBF,EAAAA,EAAAA,MAACG,EAAAA,kBAAiB,CAAA7I,SAAA,EAChB1B,EAAAA,EAAAA,KAAA,OAAKuG,MAAO4C,EAAgBzH,UAC1B0I,EAAAA,EAAAA,MAAA,OACE7D,MAAO,CACLiE,UAAW,SACXxJ,MAAO,OACPkJ,SAAU,IACVd,QAAS,OACTqB,cAAe,SACflB,eAAgB,aAEhBF,SAAU,WACVqB,IAAgB,OAChBC,KAAM,EACNnB,UAAW,cACX9H,SAAA,EACF1B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,2BAA0BwB,UACvC1B,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAcqG,MAAO,CAAEqE,OAAQ,GAAIlJ,SAC9C0F,MAGJC,IACCrH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAAqBwB,UAClC1B,EAAAA,EAAAA,KAAA,KAAGE,UAAU,WAAUwB,SAAE2F,YAMjCrH,EAAAA,EAAAA,KAAA,OAAKuG,MAAOkD,EAAgB/H,UAC1B1B,EAAAA,EAAAA,KAAA,OAAKuG,MAAO0D,EAAavI,UACvB1B,EAAAA,EAAAA,KAAA,OACEE,UAAU,6BACVqG,MAAO,CACLvF,MAAOsH,EACPrH,OAAQsH,EACRa,QAAS,OACTE,WAAY,SACZC,eAAgB,UAChB7H,UACF1B,EAAAA,EAAAA,KAAC6K,EAAQ,CACP7J,MAAOsH,EACPrH,OAAQsH,EACRrH,aAAcgH,KAAKE,MAAsB,IAAhBE,GACzBnH,iBAAkB+G,KAAKE,MAAsB,IAAhBE,GAC7BlH,MAAO,IACPC,cAAc,EACdE,YAAaA,OAASG,SACrBuF,EAAM1E,KAAKuI,IAAO,IAADC,EAChB,MAAMC,EAAsB,QAAlBD,EAAGlE,EAAQiE,EAAEG,aAAK,IAAAF,EAAAA,EAAK,IAAM,KACvC,OACE/K,EAAAA,EAAAA,KAACmH,EAAO,CAAAzF,UACN0I,EAAAA,EAAAA,MAAA,OACElK,UAAU,qDACVqG,MAAO,CACLvF,MAAO,OACP0I,UAAW,OACXwB,WAAY,oEACZC,MAAO,4BACPC,OAAQ,mCACRC,UAAW,4DACXjC,QAAS,OACTqB,cAAe,SACflB,eAAgB,aAChBf,WAAYN,KAAKC,IAAI,GAAID,KAAKE,MAAuB,IAAjBG,IACpCc,SAAU,WACViC,SAAU,WACV5J,SAAA,EACF0I,EAAAA,EAAAA,MAAA,OACE7D,MAAO,CACL8C,SAAU,WACVqB,IAAK,EACLC,KAAM,EACNY,MAAO,EACPtK,OAAQ+I,EACRZ,QAAS,OACTE,WAAY,SACZkC,IAAK,GACLC,QAAS,SACTC,aAAc,mCACdR,WAAY,2EACZpK,OAAQ,EACRwK,SAAU,WACV5J,SAAA,EACF1B,EAAAA,EAAAA,KAAA,OAAKuG,MAAO,CAAE6C,QAAS,OAAQE,WAAY,SAAUC,eAAgB,SAAUzI,OAAQ,GAAIY,UACzF1B,EAAAA,EAAAA,KAACgL,EAAI,CACHW,KAAMzD,KAAKC,IAAI,GAAID,KAAKE,MAAuB,IAAjBG,IAC9B4C,MAAM,yBACNS,YAAa,SAGjB5L,EAAAA,EAAAA,KAAA,OAAKuG,MAAO,CAAEiE,UAAW,QAAS9I,UAChC1B,EAAAA,EAAAA,KAAA,MACEuG,MAAO,CACLsF,SAAU/D,EAAMY,UAChBoD,WAAY,IACZlB,OAAQ,EACRmB,cAAe,aACfrK,SACDoJ,EAAEkB,cAKThM,EAAAA,EAAAA,KAAA,OACEuG,MAAO,CACLkF,QAAQ,IAADtL,OAAM6J,EAAmB,GAAE,kBAClCZ,QAAS,OACTE,WAAY,aACZC,eAAgB,UAChB7H,UACF1B,EAAAA,EAAAA,KAAA,KACEuG,MAAO,CACL2D,SAAUhC,KAAKU,IAAId,EAAMa,kBAAmBL,EAAgB,IAC5DsC,OAAQ,SACRO,MAAO,yBACPY,cAAe,OACfF,SAAU/D,EAAMe,cAChBoD,WAAY,KACZvK,SACDoJ,EAAEoB,aArEGpB,EAAET,GAyEN,iBAQhB,C","sources":["components/CardSwap/CardSwap.js","pages/Sections/MissionVision.tsx"],"sourcesContent":["import React, { Children, cloneElement, forwardRef, isValidElement, useEffect, useMemo, useRef } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport \"./CardSwap.css\";\r\n\r\nexport const Card = forwardRef(({ customClass, ...rest }, ref) => (\r\n  <div ref={ref} {...rest} className={`card ${customClass ?? \"\"} ${rest.className ?? \"\"}`.trim()} />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst makeSlot = (i, distX, distY, total) => ({\r\n  x: i * distX,\r\n  y: -i * distY,\r\n  z: -i * distX * 1.5,\r\n  zIndex: total - i,\r\n});\r\nconst placeNow = (el, slot, skew) =>\r\n  gsap.set(el, {\r\n    x: slot.x,\r\n    y: slot.y,\r\n    z: slot.z,\r\n    xPercent: -50,\r\n    yPercent: -50,\r\n    skewY: skew,\r\n    transformOrigin: \"center center\",\r\n    zIndex: slot.zIndex,\r\n    force3D: true,\r\n  });\r\n\r\nconst CardSwap = ({\r\n  width = 500,\r\n  height = 400,\r\n  cardDistance = 60,\r\n  verticalDistance = 70,\r\n  delay = 5000,\r\n  pauseOnHover = false,\r\n  hoverScale = 1.04,\r\n  onCardClick,\r\n  skewAmount = 6,\r\n  easing = \"elastic\",\r\n  children,\r\n}) => {\r\n  const config =\r\n    easing === \"elastic\"\r\n      ? {\r\n          ease: \"elastic.out(0.6,0.9)\",\r\n          durDrop: 2,\r\n          durMove: 2,\r\n          durReturn: 2,\r\n          promoteOverlap: 0.9,\r\n          returnDelay: 0.05,\r\n        }\r\n      : {\r\n          ease: \"power1.inOut\",\r\n          durDrop: 0.8,\r\n          durMove: 0.8,\r\n          durReturn: 0.8,\r\n          promoteOverlap: 0.45,\r\n          returnDelay: 0.2,\r\n        };\r\n\r\n  const childArr = useMemo(() => Children.toArray(children), [children]);\r\n  const refs = useMemo(\r\n    () => childArr.map(() => React.createRef()),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [childArr.length]\r\n  );\r\n\r\n  const order = useRef(Array.from({ length: childArr.length }, (_, i) => i));\r\n\r\n  const tlRef = useRef(null);\r\n  const intervalRef = useRef();\r\n  const swapRef = useRef();\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const total = refs.length;\r\n    refs.forEach((r, i) => placeNow(r.current, makeSlot(i, cardDistance, verticalDistance, total), skewAmount));\r\n\r\n    const swap = () => {\r\n      if (order.current.length < 2) return;\r\n\r\n      const [front, ...rest] = order.current;\r\n      const elFront = refs[front].current;\r\n      const tl = gsap.timeline();\r\n      tlRef.current = tl;\r\n\r\n      tl.to(elFront, {\r\n        y: \"+=500\",\r\n        duration: config.durDrop,\r\n        ease: config.ease,\r\n      });\r\n\r\n      tl.addLabel(\"promote\", `-=${config.durDrop * config.promoteOverlap}`);\r\n      rest.forEach((idx, i) => {\r\n        const el = refs[idx].current;\r\n        const slot = makeSlot(i, cardDistance, verticalDistance, refs.length);\r\n        tl.set(el, { zIndex: slot.zIndex }, \"promote\");\r\n        tl.to(\r\n          el,\r\n          {\r\n            x: slot.x,\r\n            y: slot.y,\r\n            z: slot.z,\r\n            duration: config.durMove,\r\n            ease: config.ease,\r\n          },\r\n          `promote+=${i * 0.15}`\r\n        );\r\n      });\r\n\r\n      const backSlot = makeSlot(refs.length - 1, cardDistance, verticalDistance, refs.length);\r\n      tl.addLabel(\"return\", `promote+=${config.durMove * config.returnDelay}`);\r\n      tl.call(\r\n        () => {\r\n          gsap.set(elFront, { zIndex: backSlot.zIndex });\r\n        },\r\n        undefined,\r\n        \"return\"\r\n      );\r\n      tl.to(\r\n        elFront,\r\n        {\r\n          x: backSlot.x,\r\n          y: backSlot.y,\r\n          z: backSlot.z,\r\n          duration: config.durReturn,\r\n          ease: config.ease,\r\n        },\r\n        \"return\"\r\n      );\r\n\r\n      tl.call(() => {\r\n        order.current = [...rest, front];\r\n      });\r\n    };\r\n\r\n    // expose swap so handlers outside this effect can call it\r\n    swapRef.current = swap;\r\n\r\n    swap();\r\n    intervalRef.current = window.setInterval(() => swapRef.current?.(), delay);\r\n\r\n    if (pauseOnHover) {\r\n      const node = container.current;\r\n      const pause = () => {\r\n        tlRef.current?.pause();\r\n        clearInterval(intervalRef.current);\r\n        // scale up the front card as a UI affordance\r\n        try {\r\n          const frontIdx = order.current[0];\r\n          const frontEl = refs[frontIdx]?.current;\r\n          if (frontEl) gsap.to(frontEl, { scale: hoverScale, duration: 0.22, ease: \"power2.out\" });\r\n        } catch (err) {\r\n          /* ignore */\r\n        }\r\n      };\r\n      const resume = () => {\r\n        tlRef.current?.play();\r\n        intervalRef.current = window.setInterval(() => swapRef.current?.(), delay);\r\n        // restore scale on the front card\r\n        try {\r\n          const frontIdx = order.current[0];\r\n          const frontEl = refs[frontIdx]?.current;\r\n          if (frontEl) gsap.to(frontEl, { scale: 1, duration: 0.22, ease: \"power2.out\" });\r\n        } catch (err) {\r\n          /* ignore */\r\n        }\r\n      };\r\n      node.addEventListener(\"mouseenter\", pause);\r\n      node.addEventListener(\"mouseleave\", resume);\r\n      return () => {\r\n        node.removeEventListener(\"mouseenter\", pause);\r\n        node.removeEventListener(\"mouseleave\", resume);\r\n        clearInterval(intervalRef.current);\r\n      };\r\n    }\r\n    return () => clearInterval(intervalRef.current);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cardDistance, verticalDistance, delay, pauseOnHover, skewAmount, easing]);\r\n\r\n  const rendered = childArr.map((child, i) =>\r\n    isValidElement(child)\r\n      ? cloneElement(child, {\r\n          key: i,\r\n          ref: refs[i],\r\n          style: { width, height, ...(child.props.style ?? {}) },\r\n          onClick: (e) => {\r\n            child.props.onClick?.(e);\r\n            onCardClick?.(i);\r\n          },\r\n        })\r\n      : child\r\n  );\r\n\r\n  return (\r\n    <div ref={container} className=\"card-swap-container\" style={{ width, height }}>\r\n      {rendered}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSwap;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardSwap, { Card } from \"../../components/CardSwap/CardSwap\";\r\nimport MissionVisionContent from \"../../content/MissionVisionContent.json\";\r\n// @ts-ignore: may not have types installed for lucide-react in this project\r\nimport { ShieldCheck, Globe } from \"lucide-react\";\r\nimport { MissionTitleOverride, ServicesContainer } from \"./styles\";\r\n\r\nconst iconMap: Record<string, React.FC<any>> = {\r\n  ShieldCheck,\r\n  Globe,\r\n};\r\n\r\nconst MissionVision = () => {\r\n  const cards = MissionVisionContent.missionVision.cards;\r\n  const CardAny: any = Card;\r\n  const sectionTitle = MissionVisionContent.missionVision.title;\r\n  const sectionSubtitle = MissionVisionContent.missionVision.subtitle;\r\n\r\n  // Track viewport width and height\r\n  const [vw, setVw] = useState<number>(1200);\r\n  const [vh, setVh] = useState<number>(800);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setVw(window.innerWidth);\r\n      setVh(window.innerHeight);\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      handleResize();\r\n      window.addEventListener(\"resize\", handleResize);\r\n    }\r\n    return () => {\r\n      if (typeof window !== \"undefined\") window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  // Compute sizes using both width and height so we can reduce card sizes on short viewports\r\n  const computeSizes = (width: number, height: number) => {\r\n    const shortViewport = height <= 700;\r\n\r\n    if (width <= 375) {\r\n      const w = Math.max(260, Math.round(width * 0.86));\r\n      const h = Math.round(w * 0.95);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.88) : h,\r\n        cardDistance: Math.max(8, Math.round(w * 0.06)),\r\n        verticalDistance: Math.max(10, Math.round(w * 0.06)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.045 : 0.06)) + \"px\",\r\n        iconSize: 20,\r\n        titleSize: \"0.95rem\",\r\n        paragraphMaxWidth: Math.min(260, w - 24),\r\n        paragraphSize: \"0.85rem\",\r\n      };\r\n    }\r\n\r\n    if (width <= 480) {\r\n      const w = Math.max(300, Math.round(width * 0.8));\r\n      const h = Math.round(w * 0.92);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.9) : h,\r\n        cardDistance: Math.max(12, Math.round(w * 0.065)),\r\n        verticalDistance: Math.max(14, Math.round(w * 0.07)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.055 : 0.07)) + \"px\",\r\n        iconSize: 22,\r\n        titleSize: \"1rem\",\r\n        paragraphMaxWidth: Math.min(320, w - 32),\r\n        paragraphSize: \"0.95rem\",\r\n      };\r\n    }\r\n\r\n    if (width <= 768) {\r\n      const w = Math.max(420, Math.round(width * 0.7));\r\n      const h = Math.round(w * 0.75);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.9) : h,\r\n        cardDistance: Math.max(16, Math.round(w * 0.06)),\r\n        verticalDistance: Math.max(18, Math.round(w * 0.08)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.06 : 0.08)) + \"px\",\r\n        iconSize: 24,\r\n        titleSize: \"1.05rem\",\r\n        paragraphMaxWidth: Math.min(480, w - 40),\r\n        paragraphSize: \"0.95rem\",\r\n      };\r\n    }\r\n\r\n    const desktopW = Math.min(900, Math.round(width * 0.66));\r\n    const desktopH = Math.round(desktopW * 0.6);\r\n    return {\r\n      cardSwapWidth: desktopW,\r\n      cardSwapHeight: height <= 700 ? Math.round(desktopH * 0.85) : desktopH,\r\n      cardDistance: Math.round(desktopW * 0.06),\r\n      verticalDistance: Math.round(desktopW * 0.08),\r\n      paddingTop: Math.round(desktopW * (height <= 700 ? 0.055 : 0.08)) + \"px\",\r\n      iconSize: 28,\r\n      titleSize: \"1.0625rem\",\r\n      paragraphMaxWidth: 640,\r\n      paragraphSize: \"1rem\",\r\n    };\r\n  };\r\n\r\n  const sizes = computeSizes(vw, vh);\r\n  const isMobile = vw <= 768;\r\n  // New layout strategy: two full-width stacked blocks each 50vh. First block holds title/subtitle,\r\n  // second block holds CardSwap. This gives us deterministic vertical space to size cards.\r\n\r\n  // We'll rely on the project's ServicesContainer for consistent paddings/margins\r\n\r\n  // Use the project's natural title flow (like Services): let the title occupy natural height\r\n  // and compute available card area from the viewport minus header/title estimates. This mirrors\r\n  // the Services layout where the title sits above and spacing/paddings come from ServicesContainer.\r\n  const headerHeight = 64; // safe default; site exposes --header-height but use fallback here\r\n  const titleEstimatedHeight = isMobile ? Math.max(88, Math.round(vh * 0.12)) : Math.max(120, Math.round(vh * 0.18));\r\n  const cardsAvailableHeight = Math.max(220, vh - headerHeight - titleEstimatedHeight - 40); // reserve some margin\r\n\r\n  const titleBlockStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: `${titleEstimatedHeight}px`,\r\n    position: \"relative\",\r\n    alignItems: vw >= 1100 ? \"flex-end\" : \"flex-start\",\r\n    justifyContent: \"center\",\r\n    boxSizing: \"border-box\",\r\n  };\r\n\r\n  const cardsBlockStyle: React.CSSProperties = {\r\n    minHeight: `${Math.max(220, Math.round(cardsAvailableHeight * (isMobile ? 0.9 : 1)))}px`,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxSizing: \"border-box\",\r\n    paddingTop: isMobile ? \"0.5rem\" : undefined,\r\n  };\r\n\r\n  // Derive CardSwap dimensions from the available cardsHeight and vw\r\n  const availableHeight = Math.max(220, Math.round(cardsAvailableHeight * (isMobile ? 0.9 : 1))) - 20; // small padding allowance\r\n  const availableWidth = Math.round(vw * 0.94);\r\n\r\n  // Cap the wrapper to the site's typical content width (mirrors Services/About) to avoid oversizing on wide screens\r\n  const siteMaxWidth = 1100;\r\n  const wrapperMaxWidth = Math.min(siteMaxWidth, availableWidth);\r\n\r\n  // Compute a desired height based on available vertical space but cap it so cards don't become huge on large screens\r\n  const desiredCardHeight = Math.min(Math.round(cardsAvailableHeight), Math.round(wrapperMaxWidth * 0.55));\r\n  let cardSwapHeight = Math.max(220, Math.min(desiredCardHeight, 520)); // clamp between 220 and 520\r\n\r\n  // Slightly increase card height on mobile to give body text more breathing room\r\n  if (isMobile) {\r\n    const increased = Math.round(cardSwapHeight * 1.14); // +14%\r\n    cardSwapHeight = Math.min(520, Math.max(cardSwapHeight, increased));\r\n  }\r\n\r\n  // Width derived from height with different aspect ratio on mobile vs desktop; also limit to wrapper width\r\n  const rawWidth = Math.round(cardSwapHeight * (isMobile ? 1.05 : 1.6));\r\n  const cardSwapWidth = Math.max(280, Math.min(wrapperMaxWidth, rawWidth));\r\n\r\n  // Compute header area height for cards (used both in header styles and to pad the content)\r\n  const cardHeaderHeight = Math.max(44, Math.round(cardSwapHeight * 0.12));\r\n\r\n  const wrapperStyle: React.CSSProperties = {\r\n    width: \"100%\",\r\n    maxWidth: wrapperMaxWidth,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    // Leave a little bottom padding on mobile so floating widgets (WhatsApp) don't cover cards\r\n    paddingBottom: isMobile ? 36 : 0,\r\n  };\r\n\r\n  return (\r\n    <section id=\"mission\">\r\n      <MissionTitleOverride />\r\n\r\n      <ServicesContainer>\r\n        <div style={titleBlockStyle}>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              width: \"100%\",\r\n              maxWidth: 900,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"flex-start\",\r\n              // Position the title area absolutely inside the title block so it doesn't change the block height\r\n              position: \"absolute\",\r\n              top: isMobile ? \"100%\" : \"100%\",\r\n              left: 0,\r\n              boxSizing: \"border-box\",\r\n            }}>\r\n            <div className=\"services-title-container\">\r\n              <h6 className=\"about-title\" style={{ margin: 0 }}>\r\n                {sectionTitle}\r\n              </h6>\r\n            </div>\r\n            {sectionSubtitle && (\r\n              <div className=\"section-description\">\r\n                <p className=\"subtitle\">{sectionSubtitle}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={cardsBlockStyle}>\r\n          <div style={wrapperStyle}>\r\n            <div\r\n              className=\"card-swap-outer shift-down\"\r\n              style={{\r\n                width: cardSwapWidth,\r\n                height: cardSwapHeight,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}>\r\n              <CardSwap\r\n                width={cardSwapWidth}\r\n                height={cardSwapHeight}\r\n                cardDistance={Math.round(cardSwapWidth * 0.06)}\r\n                verticalDistance={Math.round(cardSwapWidth * 0.07)}\r\n                delay={6000}\r\n                pauseOnHover={true}\r\n                onCardClick={() => {}}>\r\n                {cards.map((c) => {\r\n                  const Icon = iconMap[c.icon] ?? (() => null);\r\n                  return (\r\n                    <CardAny key={c.id}>\r\n                      <div\r\n                        className=\"flex flex-col items-center text-center rounded-2xl\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          minHeight: \"100%\",\r\n                          background: \"linear-gradient(180deg, rgba(20,20,20,0.95), rgba(36,36,36,0.95))\",\r\n                          color: \"var(--color-text-primary)\",\r\n                          border: \"1px solid rgba(255,255,255,0.06)\",\r\n                          boxShadow: \"0 18px 40px rgba(0,0,0,0.6), 0 0 40px rgba(247,88,0,0.06)\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"flex-start\",\r\n                          paddingTop: Math.max(12, Math.round(cardSwapHeight * 0.06)),\r\n                          position: \"relative\",\r\n                          overflow: \"visible\",\r\n                        }}>\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            height: cardHeaderHeight,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            gap: 12,\r\n                            padding: \"0 1rem\",\r\n                            borderBottom: \"1px solid rgba(255,255,255,0.04)\",\r\n                            background: \"linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.005))\",\r\n                            zIndex: 5,\r\n                            overflow: \"visible\",\r\n                          }}>\r\n                          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", zIndex: 6 }}>\r\n                            <Icon\r\n                              size={Math.max(18, Math.round(cardSwapHeight * 0.08))}\r\n                              color=\"var(--color-secondary)\"\r\n                              strokeWidth={1.6}\r\n                            />\r\n                          </div>\r\n                          <div style={{ textAlign: \"left\" }}>\r\n                            <h3\r\n                              style={{\r\n                                fontSize: sizes.titleSize,\r\n                                fontWeight: 700,\r\n                                margin: 0,\r\n                                textTransform: \"uppercase\",\r\n                              }}>\r\n                              {c.title}\r\n                            </h3>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            padding: ` ${cardHeaderHeight + 12}px 1rem 0 1rem`,\r\n                            display: \"flex\",\r\n                            alignItems: \"flex-start\",\r\n                            justifyContent: \"center\",\r\n                          }}>\r\n                          <p\r\n                            style={{\r\n                              maxWidth: Math.min(sizes.paragraphMaxWidth, cardSwapWidth - 32),\r\n                              margin: \"0 auto\",\r\n                              color: \"rgba(255,255,255,0.95)\",\r\n                              textTransform: \"none\",\r\n                              fontSize: sizes.paragraphSize,\r\n                              lineHeight: 1.4,\r\n                            }}>\r\n                            {c.text}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </CardAny>\r\n                  );\r\n                })}\r\n              </CardSwap>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ServicesContainer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MissionVision;\r\n"],"names":["Card","forwardRef","_ref","ref","_rest$className","customClass","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","concat","trim","displayName","makeSlot","i","distX","distY","total","x","y","z","zIndex","_ref2","width","height","cardDistance","verticalDistance","delay","pauseOnHover","hoverScale","onCardClick","skewAmount","easing","children","config","ease","durDrop","durMove","durReturn","promoteOverlap","returnDelay","childArr","useMemo","Children","toArray","refs","map","React","length","order","useRef","Array","from","_","tlRef","intervalRef","swapRef","container","useEffect","forEach","r","placeNow","el","current","slot","skew","gsap","set","xPercent","yPercent","skewY","transformOrigin","force3D","swap","front","elFront","tl","timeline","to","duration","addLabel","idx","backSlot","call","undefined","window","setInterval","_swapRef$current","node","pause","_tlRef$current","clearInterval","_refs$frontIdx","frontIdx","frontEl","scale","err","resume","_tlRef$current2","play","_swapRef$current2","_refs$frontIdx2","addEventListener","removeEventListener","rendered","child","_child$props$style","isValidElement","cloneElement","key","style","props","onClick","e","_child$props$onClick","_child$props","iconMap","ShieldCheck","Globe","MissionVision","cards","MissionVisionContent","CardAny","sectionTitle","sectionSubtitle","vw","setVw","useState","vh","setVh","handleResize","innerWidth","innerHeight","sizes","computeSizes","shortViewport","w","Math","max","round","h","cardSwapWidth","cardSwapHeight","paddingTop","iconSize","titleSize","paragraphMaxWidth","min","paragraphSize","desktopW","desktopH","isMobile","titleEstimatedHeight","cardsAvailableHeight","titleBlockStyle","display","position","alignItems","justifyContent","boxSizing","cardsBlockStyle","minHeight","availableWidth","wrapperMaxWidth","desiredCardHeight","increased","rawWidth","cardHeaderHeight","wrapperStyle","maxWidth","paddingBottom","_jsxs","id","MissionTitleOverride","ServicesContainer","textAlign","flexDirection","top","left","margin","CardSwap","c","_iconMap$c$icon","Icon","icon","background","color","border","boxShadow","overflow","right","gap","padding","borderBottom","size","strokeWidth","fontSize","fontWeight","textTransform","title","lineHeight","text"],"sourceRoot":""}