{"version":3,"file":"static/js/452.f8ef7450.chunk.js","mappings":"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","sources":["pages/Sections/styles.ts","components/FadeContent/FadeContent.js","components/ScrollStack/ScrollStack.js","pages/Sections/AboutUs.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AboutContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n\r\n  /* El título h6 usa automáticamente los estilos globales - no necesita override */\r\n`;\r\n\r\nexport const AboutTextContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  flex-shrink: 0;\r\n\r\n  p {\r\n    font-family: var(--font-subtitle);\r\n    font-size: var(--size-body);\r\n    color: var(--color-text-primary);\r\n    line-height: 1.6;\r\n    margin: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-bottom: 0.8rem;\r\n\r\n    p {\r\n      font-size: var(--size-min-para);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BulletsContainer = styled.div`\r\n  /* Sin fondo glassy - contenedor limpio */\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 0.5rem 0;\r\n\r\n  /* Estilos para ScrollStack */\r\n  .about-scroll-stack {\r\n    height: 500px; /* Área mucho más grande y visible */\r\n    max-height: 100%;\r\n    overflow: hidden; /* El ScrollStack maneja su propio scroll */\r\n    border-radius: 1rem;\r\n    position: relative;\r\n\r\n    /* Indicador visual del área scrolleable */\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      border: 2px dashed rgba(255, 255, 255, 0.1);\r\n      border-radius: 1rem;\r\n      pointer-events: none;\r\n      z-index: 0;\r\n    }\r\n\r\n    .scroll-stack-card.bullet-card {\r\n      background: linear-gradient(135deg, rgba(15, 23, 42, 0.95), rgba(30, 41, 59, 0.9));\r\n      border: 1px solid rgba(148, 163, 184, 0.3);\r\n      border-radius: 0.75rem;\r\n      padding: 0.9rem 1.2rem; /* Más compacto como originales */\r\n      margin-bottom: 0.75rem;\r\n      backdrop-filter: blur(12px);\r\n      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n      position: relative;\r\n      z-index: 1;\r\n\r\n      /* Efecto de seguridad - borde con patrón */\r\n      &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: -1px;\r\n        left: -1px;\r\n        right: -1px;\r\n        bottom: -1px;\r\n        background: linear-gradient(\r\n          45deg,\r\n          rgba(34, 197, 94, 0.2) 0%,\r\n          rgba(59, 130, 246, 0.2) 25%,\r\n          rgba(168, 85, 247, 0.2) 50%,\r\n          rgba(239, 68, 68, 0.2) 75%,\r\n          rgba(34, 197, 94, 0.2) 100%\r\n        );\r\n        background-size: 8px 8px;\r\n        border-radius: 0.75rem;\r\n        z-index: -1;\r\n        opacity: 0;\r\n        transition: opacity 0.3s ease;\r\n      }\r\n\r\n      /* Indicador de seguridad */\r\n      &::after {\r\n        content: \"🔒\";\r\n        position: absolute;\r\n        top: 0.5rem;\r\n        right: 0.75rem;\r\n        font-size: 0.75rem;\r\n        opacity: 0.6;\r\n        filter: grayscale(1) brightness(0.8);\r\n      }\r\n\r\n      &:hover {\r\n        background: linear-gradient(135deg, rgba(15, 23, 42, 1), rgba(30, 41, 59, 0.95));\r\n        border-color: rgba(34, 197, 94, 0.5);\r\n        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5), 0 0 20px rgba(34, 197, 94, 0.1),\r\n          inset 0 1px 0 rgba(255, 255, 255, 0.2);\r\n        transform: translateY(-1px);\r\n\r\n        &::before {\r\n          opacity: 1;\r\n        }\r\n\r\n        &::after {\r\n          filter: grayscale(0) brightness(1.2);\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      p {\r\n        color: var(--color-text-primary);\r\n        font-family: var(--font-base);\r\n        font-size: var(--size-body);\r\n        line-height: 1.5; /* Más compacto */\r\n        margin: 0;\r\n        font-weight: 400;\r\n        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n        padding-right: 1.5rem; /* Espacio para el icono */\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Estilos personalizados para AnimatedList adaptados a nuestra web */\r\n  .about-bullets-list {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .scroll-list-container {\r\n      width: 100%;\r\n    }\r\n\r\n    .scroll-list {\r\n      max-height: 100%;\r\n      padding: 0;\r\n      overflow-y: auto;\r\n\r\n      /* Scrollbar personalizado */\r\n      &::-webkit-scrollbar {\r\n        width: 4px;\r\n      }\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background: transparent;\r\n      }\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        background: rgba(255, 255, 255, 0.2);\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n\r\n    .item {\r\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));\r\n      border: 1px solid rgba(255, 255, 255, 0.1);\r\n      border-radius: 0.75rem;\r\n      padding: 1rem 1.25rem;\r\n      margin-bottom: 0.75rem;\r\n      backdrop-filter: blur(10px);\r\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n      &:hover {\r\n        background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.08));\r\n        border-color: rgba(255, 130, 92, 0.3);\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      &.selected {\r\n        background: linear-gradient(135deg, rgba(255, 130, 92, 0.2), rgba(255, 130, 92, 0.1));\r\n        border-color: rgba(255, 130, 92, 0.4);\r\n        transform: translateY(-1px);\r\n      }\r\n    }\r\n\r\n    .item-text {\r\n      color: var(--color-text-primary);\r\n      font-family: var(--font-base);\r\n      font-size: var(--size-body);\r\n      line-height: 1.5;\r\n      margin: 0;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    /* Estilos responsive para AnimatedList */\r\n    .about-bullets-list {\r\n      .item {\r\n        padding: 0.8rem 1rem;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      .item-text {\r\n        font-size: var(--size-min-para);\r\n        line-height: 1.4;\r\n      }\r\n    }\r\n\r\n    /* Estilos responsive para ScrollStack */\r\n    .about-scroll-stack {\r\n      height: 400px; /* Área visible también en mobile */\r\n\r\n      .scroll-stack-card.bullet-card {\r\n        padding: 0.75rem 1rem; /* Compacto en mobile */\r\n        margin-bottom: 0.6rem;\r\n\r\n        &::after {\r\n          top: 0.4rem;\r\n          right: 0.6rem;\r\n          font-size: 0.65rem;\r\n        }\r\n\r\n        p {\r\n          font-size: var(--size-min-para);\r\n          line-height: 1.4;\r\n          padding-right: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    padding: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const BulletItem = styled.div`\r\n  font-family: var(--font-base);\r\n  font-size: var(--size-body);\r\n  color: var(--color-text-primary);\r\n  padding: 0.75rem 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  padding-left: 1.5rem;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &:before {\r\n    content: \"•\";\r\n    color: var(--color-secondary);\r\n    font-weight: bold;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0.75rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: var(--size-min-para);\r\n    padding: 0.5rem 0;\r\n    padding-left: 1.2rem;\r\n\r\n    &:before {\r\n      top: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n","import { useRef, useEffect, useState } from 'react';\r\n\r\nconst FadeContent = ({\r\n                         children,\r\n                         blur = false,\r\n                         duration = 1000,\r\n                         easing = 'ease-out',\r\n                         delay = 0,\r\n                         threshold = 0.1,\r\n                         initialOpacity = 0,\r\n                         className = ''\r\n                     }) => {\r\n    const [inView, setInView] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!ref.current) return;\r\n\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    observer.unobserve(ref.current);\r\n                    setTimeout(() => {\r\n                        setInView(true);\r\n                    }, delay);\r\n                }\r\n            },\r\n            { threshold }\r\n        );\r\n\r\n        observer.observe(ref.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, [threshold, delay]);\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={className}\r\n            style={{\r\n                opacity: inView ? 1 : initialOpacity,\r\n                transition: `opacity ${duration}ms ${easing}, filter ${duration}ms ${easing}`,\r\n                filter: blur ? (inView ? 'blur(0px)' : 'blur(10px)') : 'none'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FadeContent;\r\n","import { useLayoutEffect, useRef, useCallback } from \"react\";\r\nimport Lenis from \"lenis\";\r\nimport \"./ScrollStack.css\";\r\n\r\nexport const ScrollStackItem = ({ children, itemClassName = \"\" }) => (\r\n  <div className={`scroll-stack-card ${itemClassName}`.trim()}>{children}</div>\r\n);\r\n\r\nconst ScrollStack = ({\r\n  children,\r\n  className = \"\",\r\n  itemDistance = 100,\r\n  itemScale = 0.03,\r\n  itemStackDistance = 30,\r\n  stackPosition = \"20%\",\r\n  scaleEndPosition = \"10%\",\r\n  baseScale = 0.85,\r\n  scaleDuration = 0.5,\r\n  rotationAmount = 0,\r\n  blurAmount = 0,\r\n  useWindowScroll = false,\r\n  onStackComplete,\r\n}) => {\r\n  const scrollerRef = useRef(null);\r\n  const stackCompletedRef = useRef(false);\r\n  const animationFrameRef = useRef(null);\r\n  const lenisRef = useRef(null);\r\n  const cardsRef = useRef([]);\r\n  const lastTransformsRef = useRef(new Map());\r\n  const isUpdatingRef = useRef(false);\r\n\r\n  const calculateProgress = useCallback((scrollTop, start, end) => {\r\n    if (scrollTop < start) return 0;\r\n    if (scrollTop > end) return 1;\r\n    return (scrollTop - start) / (end - start);\r\n  }, []);\r\n\r\n  const parsePercentage = useCallback((value, containerHeight) => {\r\n    if (typeof value === \"string\" && value.includes(\"%\")) {\r\n      return (parseFloat(value) / 100) * containerHeight;\r\n    }\r\n    return parseFloat(value);\r\n  }, []);\r\n\r\n  const getScrollData = useCallback(() => {\r\n    if (useWindowScroll) {\r\n      return {\r\n        scrollTop: window.scrollY,\r\n        containerHeight: window.innerHeight,\r\n        scrollContainer: document.documentElement,\r\n      };\r\n    } else {\r\n      const scroller = scrollerRef.current;\r\n      return {\r\n        scrollTop: scroller.scrollTop,\r\n        containerHeight: scroller.clientHeight,\r\n        scrollContainer: scroller,\r\n      };\r\n    }\r\n  }, [useWindowScroll]);\r\n\r\n  const getElementOffset = useCallback(\r\n    (element) => {\r\n      if (useWindowScroll) {\r\n        const rect = element.getBoundingClientRect();\r\n        return rect.top + window.scrollY;\r\n      } else {\r\n        return element.offsetTop;\r\n      }\r\n    },\r\n    [useWindowScroll]\r\n  );\r\n\r\n  const updateCardTransforms = useCallback(() => {\r\n    if (!cardsRef.current.length || isUpdatingRef.current) return;\r\n\r\n    isUpdatingRef.current = true;\r\n\r\n    const { scrollTop, containerHeight, scrollContainer } = getScrollData();\r\n    const stackPositionPx = parsePercentage(stackPosition, containerHeight);\r\n    const scaleEndPositionPx = parsePercentage(scaleEndPosition, containerHeight);\r\n\r\n    const endElement = useWindowScroll\r\n      ? document.querySelector(\".scroll-stack-end\")\r\n      : scrollerRef.current?.querySelector(\".scroll-stack-end\");\r\n\r\n    const endElementTop = endElement ? getElementOffset(endElement) : 0;\r\n\r\n    cardsRef.current.forEach((card, i) => {\r\n      if (!card) return;\r\n\r\n      const cardTop = getElementOffset(card);\r\n      const triggerStart = cardTop - stackPositionPx - itemStackDistance * i;\r\n      const triggerEnd = cardTop - scaleEndPositionPx;\r\n      const pinStart = cardTop - stackPositionPx - itemStackDistance * i;\r\n      const pinEnd = endElementTop - containerHeight / 2;\r\n\r\n      const scaleProgress = calculateProgress(scrollTop, triggerStart, triggerEnd);\r\n      const targetScale = baseScale + i * itemScale;\r\n      const scale = 1 - scaleProgress * (1 - targetScale);\r\n      const rotation = rotationAmount ? i * rotationAmount * scaleProgress : 0;\r\n\r\n      let blur = 0;\r\n      if (blurAmount) {\r\n        let topCardIndex = 0;\r\n        for (let j = 0; j < cardsRef.current.length; j++) {\r\n          const jCardTop = getElementOffset(cardsRef.current[j]);\r\n          const jTriggerStart = jCardTop - stackPositionPx - itemStackDistance * j;\r\n          if (scrollTop >= jTriggerStart) {\r\n            topCardIndex = j;\r\n          }\r\n        }\r\n\r\n        if (i < topCardIndex) {\r\n          const depthInStack = topCardIndex - i;\r\n          blur = Math.max(0, depthInStack * blurAmount);\r\n        }\r\n      }\r\n\r\n      let translateY = 0;\r\n      const isPinned = scrollTop >= pinStart && scrollTop <= pinEnd;\r\n\r\n      if (isPinned) {\r\n        translateY = scrollTop - cardTop + stackPositionPx + itemStackDistance * i;\r\n      } else if (scrollTop > pinEnd) {\r\n        translateY = pinEnd - cardTop + stackPositionPx + itemStackDistance * i;\r\n      }\r\n\r\n      const newTransform = {\r\n        translateY: Math.round(translateY * 100) / 100,\r\n        scale: Math.round(scale * 1000) / 1000,\r\n        rotation: Math.round(rotation * 100) / 100,\r\n        blur: Math.round(blur * 100) / 100,\r\n      };\r\n\r\n      const lastTransform = lastTransformsRef.current.get(i);\r\n      const hasChanged =\r\n        !lastTransform ||\r\n        Math.abs(lastTransform.translateY - newTransform.translateY) > 0.1 ||\r\n        Math.abs(lastTransform.scale - newTransform.scale) > 0.001 ||\r\n        Math.abs(lastTransform.rotation - newTransform.rotation) > 0.1 ||\r\n        Math.abs(lastTransform.blur - newTransform.blur) > 0.1;\r\n\r\n      if (hasChanged) {\r\n        const transform = `translate3d(0, ${newTransform.translateY}px, 0) scale(${newTransform.scale}) rotate(${newTransform.rotation}deg)`;\r\n        const filter = newTransform.blur > 0 ? `blur(${newTransform.blur}px)` : \"\";\r\n\r\n        card.style.transform = transform;\r\n        card.style.filter = filter;\r\n\r\n        lastTransformsRef.current.set(i, newTransform);\r\n      }\r\n\r\n      if (i === cardsRef.current.length - 1) {\r\n        const isInView = scrollTop >= pinStart && scrollTop <= pinEnd;\r\n        if (isInView && !stackCompletedRef.current) {\r\n          stackCompletedRef.current = true;\r\n          onStackComplete?.();\r\n        } else if (!isInView && stackCompletedRef.current) {\r\n          stackCompletedRef.current = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    isUpdatingRef.current = false;\r\n  }, [\r\n    itemScale,\r\n    itemStackDistance,\r\n    stackPosition,\r\n    scaleEndPosition,\r\n    baseScale,\r\n    rotationAmount,\r\n    blurAmount,\r\n    useWindowScroll,\r\n    onStackComplete,\r\n    calculateProgress,\r\n    parsePercentage,\r\n    getScrollData,\r\n    getElementOffset,\r\n  ]);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    updateCardTransforms();\r\n  }, [updateCardTransforms]);\r\n\r\n  const setupLenis = useCallback(() => {\r\n    if (useWindowScroll) {\r\n      const lenis = new Lenis({\r\n        duration: 1.2,\r\n        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n        smoothWheel: true,\r\n        touchMultiplier: 2,\r\n        infinite: false,\r\n        wheelMultiplier: 1,\r\n        lerp: 0.1,\r\n        syncTouch: true,\r\n        syncTouchLerp: 0.075,\r\n      });\r\n\r\n      lenis.on(\"scroll\", handleScroll);\r\n\r\n      const raf = (time) => {\r\n        lenis.raf(time);\r\n        animationFrameRef.current = requestAnimationFrame(raf);\r\n      };\r\n      animationFrameRef.current = requestAnimationFrame(raf);\r\n\r\n      lenisRef.current = lenis;\r\n      return lenis;\r\n    } else {\r\n      const scroller = scrollerRef.current;\r\n      if (!scroller) return;\r\n\r\n      const lenis = new Lenis({\r\n        wrapper: scroller,\r\n        content: scroller.querySelector(\".scroll-stack-inner\"),\r\n        duration: 1.2,\r\n        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n        smoothWheel: true,\r\n        touchMultiplier: 2,\r\n        infinite: false,\r\n        gestureOrientationHandler: true,\r\n        normalizeWheel: true,\r\n        wheelMultiplier: 1,\r\n        touchInertiaMultiplier: 35,\r\n        lerp: 0.1,\r\n        syncTouch: true,\r\n        syncTouchLerp: 0.075,\r\n        touchInertia: 0.6,\r\n      });\r\n\r\n      lenis.on(\"scroll\", handleScroll);\r\n\r\n      const raf = (time) => {\r\n        lenis.raf(time);\r\n        animationFrameRef.current = requestAnimationFrame(raf);\r\n      };\r\n      animationFrameRef.current = requestAnimationFrame(raf);\r\n\r\n      lenisRef.current = lenis;\r\n      return lenis;\r\n    }\r\n  }, [handleScroll, useWindowScroll]);\r\n\r\n  useLayoutEffect(() => {\r\n    const scroller = scrollerRef.current;\r\n    if (!scroller) return;\r\n\r\n    const cards = Array.from(\r\n      useWindowScroll\r\n        ? document.querySelectorAll(\".scroll-stack-card\")\r\n        : scroller.querySelectorAll(\".scroll-stack-card\")\r\n    );\r\n\r\n    cardsRef.current = cards;\r\n    const transformsCache = lastTransformsRef.current;\r\n\r\n    cards.forEach((card, i) => {\r\n      if (i < cards.length - 1) {\r\n        card.style.marginBottom = `${itemDistance}px`;\r\n      }\r\n      card.style.willChange = \"transform, filter\";\r\n      card.style.transformOrigin = \"top center\";\r\n      card.style.backfaceVisibility = \"hidden\";\r\n      card.style.transform = \"translateZ(0)\";\r\n      card.style.webkitTransform = \"translateZ(0)\";\r\n      card.style.perspective = \"1000px\";\r\n      card.style.webkitPerspective = \"1000px\";\r\n    });\r\n\r\n    setupLenis();\r\n\r\n    updateCardTransforms();\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n      if (lenisRef.current) {\r\n        lenisRef.current.destroy();\r\n      }\r\n      stackCompletedRef.current = false;\r\n      cardsRef.current = [];\r\n      transformsCache.clear();\r\n      isUpdatingRef.current = false;\r\n    };\r\n  }, [\r\n    itemDistance,\r\n    itemScale,\r\n    itemStackDistance,\r\n    stackPosition,\r\n    scaleEndPosition,\r\n    baseScale,\r\n    scaleDuration,\r\n    rotationAmount,\r\n    blurAmount,\r\n    useWindowScroll,\r\n    onStackComplete,\r\n    setupLenis,\r\n    updateCardTransforms,\r\n  ]);\r\n\r\n  return (\r\n    <div className={`scroll-stack-scroller ${className}`.trim()} ref={scrollerRef}>\r\n      <div className=\"scroll-stack-inner\">\r\n        {children}\r\n        {/* Spacer so the last pin can release cleanly */}\r\n        <div className=\"scroll-stack-end\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollStack;\r\n","import React from \"react\";\r\nimport FadeContent from \"../../components/FadeContent/FadeContent\";\r\nimport AnimatedList from \"../../components/AnimatedList/AnimatedList\";\r\nimport ScrollStack, { ScrollStackItem } from \"../../components/ScrollStack/ScrollStack\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport { AboutContainer, AboutTextContainer, BulletsContainer, BulletItem } from \"./styles\";\r\n\r\ninterface AboutUsContentProps {\r\n  titleComponent?: React.ReactNode;\r\n}\r\n\r\nconst AboutUsContent = ({ titleComponent }: AboutUsContentProps) => {\r\n  return (\r\n    <AboutContainer>\r\n      {/* Título animado personalizado */}\r\n      {titleComponent && <div style={{ textAlign: \"center\", marginBottom: \"1.5rem\" }}>{titleComponent}</div>}\r\n\r\n      {/* Texto introductorio con fade */}\r\n      <FadeContent blur={true} duration={1000} easing=\"ease-out\" initialOpacity={0}>\r\n        <AboutTextContainer>\r\n          <p>{AboutContent.text}</p>\r\n        </AboutTextContainer>\r\n      </FadeContent>\r\n\r\n      {/* Lista de bullets - PRUEBA CON SCROLLSTACK */}\r\n      <BulletsContainer>\r\n        <ScrollStack\r\n          className=\"about-scroll-stack\"\r\n          itemDistance={120}\r\n          itemScale={0.05}\r\n          itemStackDistance={40}\r\n          stackPosition=\"30%\"\r\n          scaleEndPosition=\"15%\"\r\n          baseScale={0.85}\r\n          scaleDuration={0.5}\r\n          rotationAmount={2}\r\n          blurAmount={0}\r\n          useWindowScroll={false}\r\n          onStackComplete={() => console.log(\"Stack animation complete\")}>\r\n          {AboutContent.bullets.map((bullet, index) => (\r\n            <ScrollStackItem key={index} itemClassName=\"bullet-card\">\r\n              <p>{bullet}</p>\r\n            </ScrollStackItem>\r\n          ))}\r\n        </ScrollStack>\r\n      </BulletsContainer>\r\n\r\n      {/* \r\n      VERSIÓN BACKUP CON ANIMATEDLIST (100% FUNCIONAL)\r\n      <BulletsContainer>\r\n        <AnimatedList\r\n          items={AboutContent.bullets}\r\n          showGradients={false}\r\n          enableArrowNavigation={false}\r\n          displayScrollbar={false}\r\n          className=\"about-bullets-list\"\r\n          itemClassName=\"bullet-item\"\r\n          onItemSelect={(item: string, index: number) => {\r\n            console.log(`Selected bullet ${index}: ${item}`);\r\n          }}\r\n        />\r\n      </BulletsContainer>\r\n      */}\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nexport default AboutUsContent;\r\n"],"names":["AboutContainer","styled","div","_templateObject","_taggedTemplateLiteral","AboutTextContainer","_templateObject2","BulletsContainer","_templateObject3","BulletItem","_templateObject4","_ref","children","blur","duration","easing","delay","threshold","initialOpacity","className","inView","setInView","useState","ref","useRef","useEffect","current","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","setTimeout","observe","disconnect","_jsx","style","opacity","transition","concat","filter","ScrollStackItem","itemClassName","trim","itemDistance","itemScale","itemStackDistance","stackPosition","scaleEndPosition","baseScale","scaleDuration","rotationAmount","blurAmount","useWindowScroll","onStackComplete","scrollerRef","stackCompletedRef","animationFrameRef","lenisRef","cardsRef","lastTransformsRef","Map","isUpdatingRef","calculateProgress","useCallback","scrollTop","start","end","parsePercentage","value","containerHeight","includes","parseFloat","getScrollData","window","scrollY","innerHeight","scrollContainer","document","documentElement","scroller","clientHeight","getElementOffset","element","getBoundingClientRect","top","offsetTop","updateCardTransforms","_scrollerRef$current","length","stackPositionPx","scaleEndPositionPx","endElement","querySelector","endElementTop","forEach","card","i","cardTop","pinStart","pinEnd","scaleProgress","scale","rotation","topCardIndex","j","jCardTop","depthInStack","Math","max","translateY","newTransform","round","lastTransform","get","abs","transform","set","isInView","handleScroll","setupLenis","lenis","Lenis","t","min","pow","smoothWheel","touchMultiplier","infinite","wheelMultiplier","lerp","syncTouch","syncTouchLerp","on","raf","time","requestAnimationFrame","wrapper","content","gestureOrientationHandler","normalizeWheel","touchInertiaMultiplier","touchInertia","useLayoutEffect","cards","Array","from","querySelectorAll","transformsCache","marginBottom","willChange","transformOrigin","backfaceVisibility","webkitTransform","perspective","webkitPerspective","cancelAnimationFrame","destroy","clear","_jsxs","titleComponent","textAlign","FadeContent","AboutContent","ScrollStack","console","log","map","bullet","index"],"sourceRoot":""}