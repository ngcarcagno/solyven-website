{"version":3,"file":"static/js/147.a1489818.chunk.js","mappings":"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","sources":["common/utils/useForm.tsx","common/utils/validationRules.ts","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","common/TextArea/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\n\r\ninterface IValues {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    const url = \"\"; // Fill in your API URL here\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        const response = await fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          notification[\"error\"]({\r\n            message: \"Error\",\r\n            description:\r\n              \"There was an error sending your message, please try again later.\",\r\n          });\r\n        } else {\r\n          event.target.reset();\r\n          setFormState(() => ({\r\n            values: { ...initialValues },\r\n            errors: { ...initialValues },\r\n          }));\r\n\r\n          notification[\"success\"]({\r\n            message: \"Success\",\r\n            description: \"Your message has been sent!\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit form. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 0.625em 0.3125em; /* Proportional padding */\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875em; /* Proportional font size */\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 0.625em 0.3125em; /* Proportional padding */\r\n  margin-bottom: -0.625em; /* Proportional margin */\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875em; /* Proportional font size */\r\n  height: 11.5625em; /* Proportional height */\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 0.625em; /* Proportional padding */\r\n  text-transform: capitalize;\r\n`;\r\n","import { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledInput placeholder={placeholder} name={name} id={name} onChange={onChange} />\r\n  </Container>\r\n);\r\n\r\nexport default Input;\r\n","import { StyledTextArea, StyledContainer, Label } from \"./styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst TextArea = ({ name, placeholder, onChange }: InputProps) => (\r\n  <StyledContainer>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledTextArea placeholder={placeholder} id={name} name={name} onChange={onChange} />\r\n  </StyledContainer>\r\n);\r\n\r\nexport default TextArea;\r\n","import styled from \"styled-components\";\r\n\r\n/* Solo estilos específicos del formulario - ContentBlock maneja el layout */\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  /* Formulario limpio que funciona dentro de ContentBlock */\r\n  width: 100%;\r\n  max-width: 600px; /* Límite máximo razonable */\r\n  margin: 1.5em auto 0; /* Separación del texto superior, centrado horizontal */\r\n  box-sizing: border-box;\r\n\r\n  /* Layout interno del formulario */\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em;\r\n\r\n  /* glass effect */\r\n  background: linear-gradient(180deg, rgba(255, 255, 255, 0.06), rgba(255, 255, 255, 0.04));\r\n  border-radius: 1em;\r\n  border: 1px solid rgba(255, 255, 255, 0.12);\r\n  backdrop-filter: blur(10px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  box-shadow: 0 0.875em 2.125em rgba(0, 0, 0, 0.65);\r\n  padding: 1.25em;\r\n  transition: transform 240ms ease, box-shadow 240ms ease;\r\n\r\n  /* Mobile: más compacto */\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 1em;\r\n    gap: 0.75em;\r\n    max-width: 90vw;\r\n  }\r\n\r\n  /* Efecto hover */\r\n  &:hover {\r\n    transform: translateY(-0.25em);\r\n    box-shadow: 0 1.25em 3em rgba(0, 0, 0, 0.7);\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    max-width: 95vw;\r\n    padding: 1em;\r\n    gap: 1em;\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-0.25em);\r\n    box-shadow: 0 1.25em 3em rgba(0, 0, 0, 0.7);\r\n  }\r\n\r\n  /* Ant Col takes full width */\r\n  & > div {\r\n    width: 100%;\r\n  }\r\n\r\n  /* Input styles */\r\n  input,\r\n  textarea {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    background: rgba(255, 255, 255, 0.03);\r\n    border-radius: 0.5em;\r\n    border: 1px solid rgba(255, 255, 255, 0.06);\r\n    padding: 0.75em 1em;\r\n    color: var(--color-text-primary);\r\n    outline: none;\r\n    transition: box-shadow 180ms ease, border-color 180ms ease, background 180ms ease;\r\n  }\r\n\r\n  input::placeholder,\r\n  textarea::placeholder {\r\n    color: rgba(255, 255, 255, 0.55);\r\n  }\r\n\r\n  input:focus,\r\n  textarea:focus {\r\n    border-color: rgba(255, 130, 92, 0.95);\r\n    box-shadow: 0 0.375em 1.125em rgba(255, 130, 92, 0.1);\r\n    background: rgba(255, 255, 255, 0.04);\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 0.25em;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: var(--color-secondary);\r\n  height: 1em;\r\n  padding: 0 0.5em;\r\n  font-size: 0.875em;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n  margin-top: 0.5em;\r\n\r\n  button {\r\n    border-radius: 0.5em;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    text-align: center;\r\n\r\n    button {\r\n      width: 100%;\r\n      padding: 0.875em 1em;\r\n    }\r\n  }\r\n`;\r\n","import { Col } from \"antd\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport ContentBlock from \"../ContentBlock\";\r\nimport { FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type as keyof typeof errors];\r\n    return <Span>{ErrorMessage}</Span>;\r\n  };\r\n\r\n  // El formulario como contenido personalizado para ContentBlock\r\n  const contactFormContent = (\r\n    <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <Col span={24}>\r\n        <Input type=\"text\" name=\"Nombre\" placeholder=\"Tu Nombre\" value={values.name || \"\"} onChange={handleChange} />\r\n        <ValidationType type=\"name\" />\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Email\"\r\n          placeholder=\"Tu Correo Electrónico\"\r\n          value={values.email || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n        <ValidationType type=\"email\" />\r\n      </Col>\r\n      <Col span={24}>\r\n        <TextArea placeholder=\"Tu Mensaje\" value={values.message || \"\"} name=\"Mensaje\" onChange={handleChange} />\r\n        <ValidationType type=\"message\" />\r\n      </Col>\r\n      <ButtonContainer>\r\n        <Button name=\"submit\">Submit</Button>\r\n      </ButtonContainer>\r\n    </FormGroup>\r\n  );\r\n\r\n  return (\r\n    <ContentBlock\r\n      direction=\"center\"\r\n      title={title}\r\n      content={content}\r\n      icon=\"developer.svg\"\r\n      id={id}\r\n      customContent={contactFormContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({ icon, title, content, section, button, id, direction, customContent }: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction === \"center\" ? \"up\" : direction} triggerOnce>\r\n        <StyledRow\r\n          justify={direction === \"center\" ? \"center\" : \"space-between\"}\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}>\r\n          {direction === \"center\" ? (\r\n            <>\r\n              <Col span={24}>\r\n                {typeof icon === \"string\" ? <SvgIcon src={icon} width=\"200px\" height=\"200px\" /> : icon}\r\n              </Col>\r\n              <Col span={24}>\r\n                <ContentWrapper $centered={true}>\r\n                  <h6>{title}</h6>\r\n                  <Content>{content}</Content>\r\n                  {customContent}\r\n                  <ButtonWrapper $centered={true}>\r\n                    {typeof button === \"object\" &&\r\n                      button.map(\r\n                        (\r\n                          item: {\r\n                            color?: string;\r\n                            title: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                              {item.title}\r\n                            </Button>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </ButtonWrapper>\r\n                  {typeof section === \"object\" && (\r\n                    <ServiceWrapper style={{ justifyContent: \"center\", flexWrap: \"wrap\", gap: \"2rem\" }}>\r\n                      <Row justify=\"center\" gutter={[32, 32]}>\r\n                        {section.map(\r\n                          (\r\n                            item: {\r\n                              title: string;\r\n                              content: string;\r\n                              icon: string;\r\n                            },\r\n                            id: number\r\n                          ) => {\r\n                            return (\r\n                              <Col key={id} xs={24} sm={12} md={8} lg={6} style={{ textAlign: \"center\" }}>\r\n                                <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                                <MinTitle>{item.title}</MinTitle>\r\n                                <MinPara>{item.content}</MinPara>\r\n                              </Col>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </Row>\r\n                    </ServiceWrapper>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col lg={11} md={11} sm={12} xs={24}>\r\n                {typeof icon === \"string\" ? <SvgIcon src={icon} width=\"100%\" height=\"100%\" /> : icon}\r\n              </Col>\r\n              <Col lg={11} md={11} sm={11} xs={24}>\r\n                <ContentWrapper>\r\n                  <h6>{title}</h6>\r\n                  <Content>{content}</Content>\r\n                  {customContent}\r\n                  {direction === \"right\" ? (\r\n                    <ButtonWrapper>\r\n                      {typeof button === \"object\" &&\r\n                        button.map(\r\n                          (\r\n                            item: {\r\n                              color?: string;\r\n                              title: string;\r\n                            },\r\n                            id: number\r\n                          ) => {\r\n                            return (\r\n                              <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                                {item.title}\r\n                              </Button>\r\n                            );\r\n                          }\r\n                        )}\r\n                    </ButtonWrapper>\r\n                  ) : (\r\n                    <ServiceWrapper>\r\n                      <Row justify=\"space-between\">\r\n                        {typeof section === \"object\" &&\r\n                          section.map(\r\n                            (\r\n                              item: {\r\n                                title: string;\r\n                                content: string;\r\n                                icon: string;\r\n                              },\r\n                              id: number\r\n                            ) => {\r\n                              return (\r\n                                <Col key={id} span={11}>\r\n                                  <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                                  <MinTitle>{item.title}</MinTitle>\r\n                                  <MinPara>{item.content}</MinPara>\r\n                                </Col>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </Row>\r\n                    </ServiceWrapper>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["initialValues","name","email","message","validate","values","errors","test","Container","styled","_templateObject","_taggedTemplateLiteral","StyledInput","_templateObject2","StyledContainer","StyledTextArea","Label","_templateObject3","_ref","placeholder","onChange","_jsxs","children","_jsx","htmlFor","id","FormGroup","Span","ButtonContainer","title","content","handleChange","handleSubmit","formState","setFormState","useState","_objectSpread","event","persist","value","target","prevState","async","preventDefault","Object","every","error","fetch","method","headers","body","JSON","stringify","ok","reset","notification","description","useForm","ValidationType","_ref2","type","ErrorMessage","contactFormContent","autoComplete","onSubmit","Col","span","Input","TextArea","Button","ContentBlock","direction","icon","customContent","section","button","scrollTo","document","getElementById","scrollIntoView","behavior","ContentSection","Fade","triggerOnce","StyledRow","justify","align","_Fragment","SvgIcon","src","width","height","ContentWrapper","$centered","Content","ButtonWrapper","map","item","color","onClick","ServiceWrapper","style","justifyContent","flexWrap","gap","Row","gutter","xs","sm","md","lg","textAlign","MinTitle","MinPara"],"sourceRoot":""}