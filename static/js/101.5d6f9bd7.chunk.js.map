{"version":3,"file":"static/js/101.5d6f9bd7.chunk.js","mappings":"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","sources":["components/CardSwap/CardSwap.js","pages/Sections/MissionVision.tsx"],"sourcesContent":["import React, { Children, cloneElement, forwardRef, isValidElement, useEffect, useMemo, useRef } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport \"./CardSwap.css\";\r\n\r\nexport const Card = forwardRef(({ customClass, ...rest }, ref) => (\r\n  <div ref={ref} {...rest} className={`card ${customClass ?? \"\"} ${rest.className ?? \"\"}`.trim()} />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst makeSlot = (i, distX, distY, total) => ({\r\n  x: i * distX,\r\n  y: -i * distY,\r\n  z: -i * distX * 1.5,\r\n  zIndex: total - i,\r\n});\r\nconst placeNow = (el, slot, skew) =>\r\n  gsap.set(el, {\r\n    x: slot.x,\r\n    y: slot.y,\r\n    z: slot.z,\r\n    xPercent: -50,\r\n    yPercent: -50,\r\n    skewY: skew,\r\n    transformOrigin: \"center center\",\r\n    zIndex: slot.zIndex,\r\n    force3D: true,\r\n  });\r\n\r\nconst CardSwap = ({\r\n  width = 500,\r\n  height = 400,\r\n  cardDistance = 60,\r\n  verticalDistance = 70,\r\n  delay = 5000,\r\n  onClickEffect = true,\r\n  onHoverEffect = false,\r\n  onCardClick,\r\n  skewAmount = 6,\r\n  easing = \"elastic\",\r\n  children,\r\n}) => {\r\n  const config =\r\n    easing === \"elastic\"\r\n      ? {\r\n          ease: \"elastic.out(0.6,0.9)\",\r\n          durDrop: 2,\r\n          durMove: 2,\r\n          durReturn: 2,\r\n          promoteOverlap: 0.9,\r\n          returnDelay: 0.05,\r\n        }\r\n      : {\r\n          ease: \"power1.inOut\",\r\n          durDrop: 0.8,\r\n          durMove: 0.8,\r\n          durReturn: 0.8,\r\n          promoteOverlap: 0.45,\r\n          returnDelay: 0.2,\r\n        };\r\n\r\n  const childArr = useMemo(() => Children.toArray(children), [children]);\r\n  const refs = useMemo(\r\n    () => childArr.map(() => React.createRef()),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [childArr.length]\r\n  );\r\n\r\n  const order = useRef(Array.from({ length: childArr.length }, (_, i) => i));\r\n\r\n  const tlRef = useRef(null);\r\n  const intervalRef = useRef();\r\n  const swapRef = useRef();\r\n  const container = useRef(null);\r\n\r\n  // Modular: autoplay siempre activo, pero click/hover resetean el timer y hacen swap si la prop lo permite\r\n  // Flag para bloquear interacción durante animación\r\n  const isAnimating = useRef(false);\r\n  useEffect(() => {\r\n    const total = refs.length;\r\n    refs.forEach((r, i) => placeNow(r.current, makeSlot(i, cardDistance, verticalDistance, total), skewAmount));\r\n\r\n    const swap = () => {\r\n      if (order.current.length < 2) return;\r\n      if (isAnimating.current) return;\r\n      isAnimating.current = true;\r\n      const [front, ...rest] = order.current;\r\n      const elFront = refs[front].current;\r\n      const tl = gsap.timeline();\r\n      tlRef.current = tl;\r\n      tl.to(elFront, {\r\n        y: \"+=500\",\r\n        duration: config.durDrop,\r\n        ease: config.ease,\r\n      });\r\n      tl.addLabel(\"promote\", `-=${config.durDrop * config.promoteOverlap}`);\r\n      rest.forEach((idx, i) => {\r\n        const el = refs[idx].current;\r\n        const slot = makeSlot(i, cardDistance, verticalDistance, refs.length);\r\n        tl.set(el, { zIndex: slot.zIndex }, \"promote\");\r\n        tl.to(\r\n          el,\r\n          {\r\n            x: slot.x,\r\n            y: slot.y,\r\n            z: slot.z,\r\n            duration: config.durMove,\r\n            ease: config.ease,\r\n          },\r\n          `promote+=${i * 0.15}`\r\n        );\r\n      });\r\n      const backSlot = makeSlot(refs.length - 1, cardDistance, verticalDistance, refs.length);\r\n      tl.addLabel(\"return\", `promote+=${config.durMove * config.returnDelay}`);\r\n      tl.call(\r\n        () => {\r\n          gsap.set(elFront, { zIndex: backSlot.zIndex });\r\n        },\r\n        undefined,\r\n        \"return\"\r\n      );\r\n      tl.to(\r\n        elFront,\r\n        {\r\n          x: backSlot.x,\r\n          y: backSlot.y,\r\n          z: backSlot.z,\r\n          duration: config.durReturn,\r\n          ease: config.ease,\r\n        },\r\n        \"return\"\r\n      );\r\n      tl.call(() => {\r\n        order.current = [...rest, front];\r\n        isAnimating.current = false;\r\n      });\r\n    };\r\n    swapRef.current = swap;\r\n    swap();\r\n    // autoplay siempre activo\r\n    intervalRef.current = window.setInterval(() => swapRef.current?.(), delay);\r\n    return () => clearInterval(intervalRef.current);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cardDistance, verticalDistance, delay, skewAmount, easing]);\r\n\r\n  // swap y reset timer al click/hover según props\r\n  const resetAutoplayAndSwap = () => {\r\n    if (isAnimating.current) return;\r\n    clearInterval(intervalRef.current);\r\n    swapRef.current?.();\r\n    intervalRef.current = window.setInterval(() => swapRef.current?.(), delay);\r\n  };\r\n  // Siempre la card frontal recibe el efecto, sin importar dónde se haga click/hover\r\n  const handleCardClick = (i, e) => {\r\n    if (isAnimating.current) return;\r\n    e?.stopPropagation();\r\n    if (onClickEffect) {\r\n      resetAutoplayAndSwap();\r\n    }\r\n    if (onCardClick) onCardClick(order.current[0]); // siempre pasa el índice de la card frontal\r\n  };\r\n  const handleCardMouseEnter = (i, e) => {\r\n    if (!onHoverEffect || isAnimating.current) return;\r\n    clearInterval(intervalRef.current);\r\n    const frontIdx = order.current[0];\r\n    const frontEl = refs[frontIdx]?.current;\r\n    if (frontEl) gsap.to(frontEl, { scale: 1.04, duration: 0.22, ease: \"power2.out\" });\r\n  };\r\n  const handleCardMouseLeave = (i, e) => {\r\n    if (!onHoverEffect || isAnimating.current) return;\r\n    intervalRef.current = window.setInterval(() => swapRef.current?.(), delay);\r\n    const frontIdx = order.current[0];\r\n    const frontEl = refs[frontIdx]?.current;\r\n    if (frontEl) gsap.to(frontEl, { scale: 1, duration: 0.22, ease: \"power2.out\" });\r\n  };\r\n  const rendered = childArr.map((child, i) =>\r\n    isValidElement(child)\r\n      ? cloneElement(child, {\r\n          key: i,\r\n          ref: refs[i],\r\n          style: { width, height, ...(child.props.style ?? {}) },\r\n          onClick: handleCardClick,\r\n          onMouseEnter: handleCardMouseEnter,\r\n          onMouseLeave: handleCardMouseLeave,\r\n        })\r\n      : child\r\n  );\r\n\r\n  return (\r\n    <div ref={container} className=\"card-swap-container\" style={{ width, height }}>\r\n      {rendered}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSwap;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardSwap, { Card } from \"../../components/CardSwap/CardSwap\";\r\nimport MissionVisionContent from \"../../content/MissionVisionContent.json\";\r\n// @ts-ignore: may not have types installed for lucide-react in this project\r\nimport { ShieldCheck, Globe } from \"lucide-react\";\r\nimport { MissionTitleOverride, ServicesContainer } from \"./styles\";\r\n\r\nconst iconMap: Record<string, React.FC<any>> = {\r\n  ShieldCheck,\r\n  Globe,\r\n};\r\n\r\nconst MissionVision = () => {\r\n  const cards = MissionVisionContent.missionVision.cards;\r\n  const CardAny: any = Card;\r\n  const sectionTitle = MissionVisionContent.missionVision.title;\r\n  const sectionSubtitle = MissionVisionContent.missionVision.subtitle;\r\n\r\n  // Track viewport width and height\r\n  const [vw, setVw] = useState<number>(1200);\r\n  const [vh, setVh] = useState<number>(800);\r\n\r\n  // Track viewport width and height\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setVw(window.innerWidth);\r\n      setVh(window.innerHeight);\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      handleResize();\r\n      window.addEventListener(\"resize\", handleResize);\r\n    }\r\n    return () => {\r\n      if (typeof window !== \"undefined\") window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  // (no title DOM measuring - keep previous layout logic)\r\n\r\n  // Compute sizes using both width and height so we can reduce card sizes on short viewports\r\n  const computeSizes = (width: number, height: number) => {\r\n    const shortViewport = height <= 700;\r\n\r\n    if (width <= 375) {\r\n      const w = Math.max(260, Math.round(width * 0.86));\r\n      const h = Math.round(w * 0.95);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.88) : h,\r\n        cardDistance: Math.max(8, Math.round(w * 0.06)),\r\n        verticalDistance: Math.max(10, Math.round(w * 0.06)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.045 : 0.06)) + \"px\",\r\n        iconSize: 20,\r\n        titleSize: \"0.95rem\",\r\n        paragraphMaxWidth: Math.min(260, w - 24),\r\n        paragraphSize: \"0.85rem\",\r\n      };\r\n    }\r\n\r\n    if (width <= 480) {\r\n      const w = Math.max(300, Math.round(width * 0.8));\r\n      const h = Math.round(w * 0.92);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.9) : h,\r\n        cardDistance: Math.max(12, Math.round(w * 0.065)),\r\n        verticalDistance: Math.max(14, Math.round(w * 0.07)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.055 : 0.07)) + \"px\",\r\n        iconSize: 22,\r\n        titleSize: \"1rem\",\r\n        paragraphMaxWidth: Math.min(320, w - 32),\r\n        paragraphSize: \"0.95rem\",\r\n      };\r\n    }\r\n\r\n    if (width <= 768) {\r\n      const w = Math.max(420, Math.round(width * 0.7));\r\n      const h = Math.round(w * 0.75);\r\n      return {\r\n        cardSwapWidth: w,\r\n        cardSwapHeight: shortViewport ? Math.round(h * 0.9) : h,\r\n        cardDistance: Math.max(16, Math.round(w * 0.06)),\r\n        verticalDistance: Math.max(18, Math.round(w * 0.08)),\r\n        paddingTop: Math.round(w * (shortViewport ? 0.06 : 0.08)) + \"px\",\r\n        iconSize: 24,\r\n        titleSize: \"1.05rem\",\r\n        paragraphMaxWidth: Math.min(480, w - 40),\r\n        paragraphSize: \"0.95rem\",\r\n      };\r\n    }\r\n\r\n    const desktopW = Math.min(900, Math.round(width * 0.66));\r\n    const desktopH = Math.round(desktopW * 0.6);\r\n    return {\r\n      cardSwapWidth: desktopW,\r\n      cardSwapHeight: height <= 700 ? Math.round(desktopH * 0.85) : desktopH,\r\n      cardDistance: Math.round(desktopW * 0.06),\r\n      verticalDistance: Math.round(desktopW * 0.08),\r\n      paddingTop: Math.round(desktopW * (height <= 700 ? 0.055 : 0.08)) + \"px\",\r\n      iconSize: 28,\r\n      titleSize: \"1.0625rem\",\r\n      paragraphMaxWidth: 640,\r\n      paragraphSize: \"1rem\",\r\n    };\r\n  };\r\n\r\n  const sizes = computeSizes(vw, vh);\r\n  const isMobile = vw <= 768;\r\n  // New layout strategy: two full-width stacked blocks each 50vh. First block holds title/subtitle,\r\n  // second block holds CardSwap. This gives us deterministic vertical space to size cards.\r\n\r\n  // We'll rely on the project's ServicesContainer for consistent paddings/margins\r\n\r\n  // Use the project's natural title flow (like Services): let the title occupy natural height\r\n  // and compute available card area from the viewport minus header/title estimates. This mirrors\r\n  // the Services layout where the title sits above and spacing/paddings come from ServicesContainer.\r\n  const headerHeight = 64; // safe default; site exposes --header-height but use fallback here\r\n  const titleEstimatedHeight = isMobile ? Math.max(88, Math.round(vh * 0.12)) : Math.max(120, Math.round(vh * 0.18));\r\n  const cardsAvailableHeight = Math.max(220, vh - headerHeight - titleEstimatedHeight - 40); // reserve some margin\r\n\r\n  const titleBlockStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: `${titleEstimatedHeight}px`,\r\n    position: \"relative\",\r\n    alignItems: vw >= 1100 ? \"flex-end\" : \"flex-start\",\r\n    justifyContent: \"center\",\r\n    boxSizing: \"border-box\",\r\n  };\r\n\r\n  const cardsBlockStyle: React.CSSProperties = {\r\n    minHeight: `${Math.max(220, Math.round(cardsAvailableHeight * (isMobile ? 0.9 : 1)))}px`,\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxSizing: \"border-box\",\r\n    paddingTop: isMobile ? \"0.5rem\" : undefined,\r\n  };\r\n\r\n  // Ajuste: en mobile, empujar el bloque de cards un 10% más abajo y subir el título/subtítulo un 10%\r\n  if (isMobile) {\r\n    cardsBlockStyle.marginTop = `${Math.round(vh * 0.1)}px`;\r\n    titleBlockStyle.marginTop = `-${Math.round(vh * 0.1)}px`;\r\n  }\r\n\r\n  // Derive CardSwap dimensions from the available cardsHeight and vw\r\n  const availableHeight = Math.max(220, Math.round(cardsAvailableHeight * (isMobile ? 0.9 : 1))) - 20; // small padding allowance\r\n  const availableWidth = Math.round(vw * 0.94);\r\n\r\n  // Cap the wrapper to the site's typical content width (mirrors Services/About) to avoid oversizing on wide screens\r\n  const siteMaxWidth = 1100;\r\n  const wrapperMaxWidth = Math.min(siteMaxWidth, availableWidth);\r\n\r\n  // Compute a desired height based on available vertical space but cap it so cards don't become huge on large screens\r\n  const desiredCardHeight = Math.min(Math.round(cardsAvailableHeight), Math.round(wrapperMaxWidth * 0.55));\r\n  let cardSwapHeight = Math.max(220, Math.min(desiredCardHeight, 520)); // clamp between 220 and 520\r\n\r\n  // Slightly increase card height on mobile to give body text more breathing room\r\n  if (isMobile) {\r\n    const increased = Math.round(cardSwapHeight * 1.14); // +14%\r\n    cardSwapHeight = Math.min(520, Math.max(cardSwapHeight, increased));\r\n  }\r\n\r\n  // Width derived from height with different aspect ratio on mobile vs desktop; also limit to wrapper width\r\n  const rawWidth = Math.round(cardSwapHeight * (isMobile ? 1.05 : 1.6));\r\n  const cardSwapWidth = Math.max(280, Math.min(wrapperMaxWidth, rawWidth));\r\n\r\n  // Compute header area height for cards (used both in header styles and to pad the content)\r\n  const cardHeaderHeight = Math.max(44, Math.round(cardSwapHeight * 0.12));\r\n\r\n  const wrapperStyle: React.CSSProperties = {\r\n    width: \"100%\",\r\n    maxWidth: wrapperMaxWidth,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    // Leave a little bottom padding on mobile so floating widgets (WhatsApp) don't cover cards\r\n    paddingBottom: isMobile ? 36 : 0,\r\n  };\r\n\r\n  // Determine if the CardSwap area would intrude into the title visual area using computed sizes.\r\n  // We'll toggle a class on the outer wrapper to reduce aggressive translations when needed.\r\n  const shouldAvoidOverlap = () => {\r\n    // Estimate title bottom (headerHeight + titleEstimatedHeight) and card top (header + title + small buffer)\r\n    const titleEstimatedHeight = isMobile ? Math.max(88, Math.round(vh * 0.12)) : Math.max(120, Math.round(vh * 0.18));\r\n    const titleBottom = headerHeight + titleEstimatedHeight;\r\n    // CardSwap's visual top when anchored absolute at bottom: compute approximate top coordinate\r\n    const cardVisualTop = vh - (Math.round(cardSwapHeight) + (isMobile ? 0 : Math.round(window.innerHeight * 0.06)));\r\n    // If the cardVisualTop is less than titleBottom, it will intrude; use a small margin\r\n    return cardVisualTop < titleBottom + 8;\r\n  };\r\n  const avoidOverlapClass = shouldAvoidOverlap() ? \"avoid-overlap\" : \"\";\r\n\r\n  return (\r\n    <section id=\"mission\">\r\n      <MissionTitleOverride />\r\n\r\n      <ServicesContainer>\r\n        <div style={titleBlockStyle}>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              width: \"100%\",\r\n              maxWidth: 900,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"flex-start\",\r\n              // Position the title area absolutely inside the title block so it doesn't change the block height\r\n              position: \"absolute\",\r\n              top: isMobile ? \"100%\" : \"100%\",\r\n              left: 0,\r\n              boxSizing: \"border-box\",\r\n            }}>\r\n            <div className=\"services-title-container\">\r\n              <h6 className=\"about-title\" style={{ margin: 0 }}>\r\n                {sectionTitle}\r\n              </h6>\r\n            </div>\r\n            {sectionSubtitle && (\r\n              <div className=\"section-description\">\r\n                <p className=\"subtitle\">{sectionSubtitle}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={cardsBlockStyle}>\r\n          <div style={wrapperStyle}>\r\n            <div\r\n              className={`card-swap-outer shift-down ${avoidOverlapClass}`}\r\n              style={{\r\n                width: cardSwapWidth,\r\n                height: cardSwapHeight,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: 8,\r\n              }}>\r\n              <CardSwap\r\n                width={cardSwapWidth}\r\n                height={cardSwapHeight}\r\n                cardDistance={Math.round(cardSwapWidth * 0.06)}\r\n                verticalDistance={Math.round(cardSwapWidth * 0.15)}\r\n                delay={6000}\r\n                onClickEffect={true}\r\n                onHoverEffect={vw > 900}\r\n                onCardClick={() => {}}>\r\n                {cards.map((c) => {\r\n                  const Icon = iconMap[c.icon] ?? (() => null);\r\n                  return (\r\n                    <CardAny key={c.id}>\r\n                      <div\r\n                        className=\"flex flex-col items-center text-center rounded-2xl\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          minHeight: \"100%\",\r\n                          background: \"linear-gradient(180deg, rgba(20,20,20,0.95), rgba(36,36,36,0.95))\",\r\n                          color: \"var(--color-text-primary)\",\r\n                          border: \"1px solid rgba(255,255,255,0.06)\",\r\n                          boxShadow: \"0 18px 40px rgba(0,0,0,0.6), 0 0 40px rgba(247,88,0,0.06)\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          justifyContent: \"flex-start\",\r\n                          paddingTop: Math.max(12, Math.round(cardSwapHeight * 0.06)),\r\n                          position: \"relative\",\r\n                          overflow: \"visible\",\r\n                        }}>\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            height: cardHeaderHeight,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            gap: 12,\r\n                            padding: \"0 1rem\",\r\n                            borderBottom: \"1px solid rgba(255,255,255,0.04)\",\r\n                            background: \"linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.005))\",\r\n                            zIndex: 5,\r\n                            overflow: \"visible\",\r\n                          }}>\r\n                          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", zIndex: 6 }}>\r\n                            <Icon\r\n                              size={Math.max(18, Math.round(cardSwapHeight * 0.08))}\r\n                              color=\"var(--color-secondary)\"\r\n                              strokeWidth={1.6}\r\n                            />\r\n                          </div>\r\n                          <div style={{ textAlign: \"left\" }}>\r\n                            <h3\r\n                              style={{\r\n                                fontSize: sizes.titleSize,\r\n                                fontWeight: 700,\r\n                                margin: 0,\r\n                                textTransform: \"uppercase\",\r\n                              }}>\r\n                              {c.title}\r\n                            </h3>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          style={{\r\n                            padding: ` ${cardHeaderHeight + 12}px 1rem 0 1rem`,\r\n                            display: \"flex\",\r\n                            alignItems: \"flex-start\",\r\n                            justifyContent: \"center\",\r\n                          }}>\r\n                          <p\r\n                            style={{\r\n                              maxWidth: Math.min(sizes.paragraphMaxWidth, cardSwapWidth - 32),\r\n                              margin: \"0 auto\",\r\n                              color: \"rgba(255,255,255,0.95)\",\r\n                              textTransform: \"none\",\r\n                              fontSize: sizes.paragraphSize,\r\n                              lineHeight: 1.4,\r\n                            }}>\r\n                            {c.text}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </CardAny>\r\n                  );\r\n                })}\r\n              </CardSwap>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ServicesContainer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MissionVision;\r\n"],"names":["Card","forwardRef","_ref","ref","_rest$className","customClass","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","concat","trim","displayName","makeSlot","i","distX","distY","total","x","y","z","zIndex","_ref2","width","height","cardDistance","verticalDistance","delay","onClickEffect","onHoverEffect","onCardClick","skewAmount","easing","children","config","ease","durDrop","durMove","durReturn","promoteOverlap","returnDelay","childArr","useMemo","Children","toArray","refs","map","React","length","order","useRef","Array","from","_","tlRef","intervalRef","swapRef","container","isAnimating","useEffect","forEach","r","placeNow","el","current","slot","skew","gsap","set","xPercent","yPercent","skewY","transformOrigin","force3D","swap","front","elFront","tl","timeline","to","duration","addLabel","idx","backSlot","call","undefined","window","setInterval","_swapRef$current","clearInterval","handleCardClick","e","stopPropagation","resetAutoplayAndSwap","_swapRef$current2","_swapRef$current3","handleCardMouseEnter","_refs$frontIdx","frontIdx","frontEl","scale","handleCardMouseLeave","_refs$frontIdx2","_swapRef$current4","rendered","child","_child$props$style","isValidElement","cloneElement","key","style","props","onClick","onMouseEnter","onMouseLeave","iconMap","ShieldCheck","Globe","MissionVision","cards","MissionVisionContent","CardAny","sectionTitle","sectionSubtitle","vw","setVw","useState","vh","setVh","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","sizes","computeSizes","shortViewport","w","Math","max","round","h","cardSwapWidth","cardSwapHeight","paddingTop","iconSize","titleSize","paragraphMaxWidth","min","paragraphSize","desktopW","desktopH","isMobile","titleEstimatedHeight","cardsAvailableHeight","titleBlockStyle","display","position","alignItems","justifyContent","boxSizing","cardsBlockStyle","minHeight","marginTop","availableWidth","wrapperMaxWidth","desiredCardHeight","increased","rawWidth","cardHeaderHeight","wrapperStyle","maxWidth","paddingBottom","avoidOverlapClass","shouldAvoidOverlap","titleBottom","_jsxs","id","MissionTitleOverride","ServicesContainer","textAlign","flexDirection","top","left","margin","CardSwap","c","_iconMap$c$icon","Icon","icon","background","color","border","boxShadow","overflow","right","gap","padding","borderBottom","size","strokeWidth","fontSize","fontWeight","textTransform","title","lineHeight","text"],"sourceRoot":""}