{"version":3,"file":"static/js/250.9a1b726f.chunk.js","mappings":"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","sources":["components/FadeContent/FadeContent.js","components/SpotlightCard/SpotlightCard.js","pages/Sections/Services.tsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\n\r\nconst FadeContent = ({\r\n                         children,\r\n                         blur = false,\r\n                         duration = 1000,\r\n                         easing = 'ease-out',\r\n                         delay = 0,\r\n                         threshold = 0.1,\r\n                         initialOpacity = 0,\r\n                         className = ''\r\n                     }) => {\r\n    const [inView, setInView] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!ref.current) return;\r\n\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    observer.unobserve(ref.current);\r\n                    setTimeout(() => {\r\n                        setInView(true);\r\n                    }, delay);\r\n                }\r\n            },\r\n            { threshold }\r\n        );\r\n\r\n        observer.observe(ref.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, [threshold, delay]);\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={className}\r\n            style={{\r\n                opacity: inView ? 1 : initialOpacity,\r\n                transition: `opacity ${duration}ms ${easing}, filter ${duration}ms ${easing}`,\r\n                filter: blur ? (inView ? 'blur(0px)' : 'blur(10px)') : 'none'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FadeContent;\r\n","import { useRef } from \"react\";\r\nimport \"./SpotlightCard.css\";\r\n\r\nconst SpotlightCard = ({ children, className = \"\", spotlightColor = \"rgba(255, 255, 255, 0.25)\" }) => {\r\n  const divRef = useRef(null);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const rect = divRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    // Convertir a porcentajes para que funcione con el CSS\r\n    const xPercent = (x / rect.width) * 100;\r\n    const yPercent = (y / rect.height) * 100;\r\n\r\n    divRef.current.style.setProperty(\"--mouse-x\", `${xPercent}%`);\r\n    divRef.current.style.setProperty(\"--mouse-y\", `${yPercent}%`);\r\n  };\r\n\r\n  return (\r\n    <div ref={divRef} onMouseMove={handleMouseMove} className={`card-spotlight ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotlightCard;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport FadeContent from \"../../components/FadeContent/FadeContent\";\r\nimport SpotlightCard from \"../../components/SpotlightCard/SpotlightCard\";\r\nimport ServicesContentData from \"../../content/ServicesContent.json\";\r\nimport { ServicesContainer, ServicesGrid, ServiceCard, ServiceIcon, ServiceTitle, ServiceDescription } from \"./styles\";\r\n\r\n// Iconos simulados (puedes reemplazar con lucide-react o tus propios SVGs)\r\nconst IconComponents = {\r\n  ShieldCheck: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n        d=\"M12 2L3 7V12.09C3 16.81 6.72 21.09 12 22C17.28 21.09 21 16.81 21 12.09V7L12 2Z\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path d=\"M9 12L11 14L16 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    </svg>\r\n  ),\r\n  Monitor: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n    </svg>\r\n  ),\r\n  Package: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <path\r\n        d=\"M21 16V8a2 2 0 0 0-1-1.73L12 2L4 6.27A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73L12 22l8-4.27A2 2 0 0 0 21 16z\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <polyline points=\"3.27,6.96 12,12.01 20.73,6.96\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n    </svg>\r\n  ),\r\n};\r\n\r\ninterface ServicesContentProps {\r\n  titleComponent?: React.ReactNode;\r\n}\r\n\r\nconst ServicesContent = ({ titleComponent }: ServicesContentProps) => {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [showFallback, setShowFallback] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let fallbackTimer: NodeJS.Timeout;\r\n    let forceLoadTimer: NodeJS.Timeout;\r\n\r\n    // Mostrar fallback inmediatamente después de 200ms si no hay fuentes cargadas\r\n    fallbackTimer = setTimeout(() => {\r\n      if (mounted && !fontsLoaded) {\r\n        setShowFallback(true);\r\n      }\r\n    }, 200);\r\n\r\n    // Forzar carga después de 2 segundos máximo\r\n    forceLoadTimer = setTimeout(() => {\r\n      if (mounted) {\r\n        setFontsLoaded(true);\r\n        setShowFallback(false);\r\n      }\r\n    }, 2000);\r\n\r\n    // Intentar detectar fuentes cargadas\r\n    const checkFonts = async () => {\r\n      try {\r\n        if (\"fonts\" in document) {\r\n          await document.fonts.ready;\r\n          if (mounted) {\r\n            setFontsLoaded(true);\r\n            setShowFallback(false);\r\n          }\r\n        } else {\r\n          // Fallback para navegadores antiguos\r\n          setTimeout(() => {\r\n            if (mounted) {\r\n              setFontsLoaded(true);\r\n              setShowFallback(false);\r\n            }\r\n          }, 1000);\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Font loading detection failed, using fallback:\", error);\r\n        if (mounted) {\r\n          setFontsLoaded(true);\r\n          setShowFallback(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkFonts();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      mounted = false;\r\n      clearTimeout(fallbackTimer);\r\n      clearTimeout(forceLoadTimer);\r\n    };\r\n  }, [fontsLoaded]);\r\n\r\n  // Intersection Observer para detectar cuando la sección es visible\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          // Forzar re-evaluación cuando la sección sea visible\r\n          if (!fontsLoaded && !showFallback) {\r\n            setShowFallback(true);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n        rootMargin: \"50px\",\r\n      }\r\n    );\r\n\r\n    if (containerRef.current) {\r\n      observer.observe(containerRef.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [fontsLoaded, showFallback]);\r\n\r\n  return (\r\n    <ServicesContainer ref={containerRef}>\r\n      {/* Título - siempre visible con diferentes estrategias */}\r\n      <div className=\"services-title-container\">\r\n        {/* Título animado si las fuentes están listas y hay titleComponent */}\r\n        {titleComponent && fontsLoaded && !showFallback && titleComponent}\r\n\r\n        {/* Fallback mientras se cargan las fuentes o si no hay titleComponent */}\r\n        {(showFallback || !titleComponent || (!fontsLoaded && !titleComponent)) && (\r\n          <h6\r\n            className=\"about-title\"\r\n            style={{\r\n              margin: 0,\r\n              opacity: fontsLoaded && titleComponent ? 0 : 1,\r\n              transition: \"opacity 0.3s ease\",\r\n            }}>\r\n            {ServicesContentData.title}\r\n          </h6>\r\n        )}\r\n      </div>\r\n\r\n      {/* Subtítulo y descripción */}\r\n      <FadeContent blur={true} duration={1000} easing=\"ease-out\" initialOpacity={0}>\r\n        <div className=\"services-description\">\r\n          <p className=\"subtitle\">{ServicesContentData.subtitle}</p>\r\n          <p className=\"description\">{ServicesContentData.description}</p>\r\n        </div>\r\n      </FadeContent>\r\n\r\n      {/* Grid de servicios con SpotlightCards */}\r\n      <ServicesGrid>\r\n        {ServicesContentData.services.map((service: any, index: number) => {\r\n          const IconComponent = IconComponents[service.icon as keyof typeof IconComponents];\r\n          return (\r\n            <SpotlightCard\r\n              key={index}\r\n              className=\"service-spotlight-card service-item\"\r\n              spotlightColor=\"var(--color-detail)\">\r\n              <ServiceCard>\r\n                <ServiceIcon>{IconComponent && <IconComponent />}</ServiceIcon>\r\n                <ServiceTitle>{service.title}</ServiceTitle>\r\n                <ServiceDescription>{service.description}</ServiceDescription>\r\n              </ServiceCard>\r\n            </SpotlightCard>\r\n          );\r\n        })}\r\n      </ServicesGrid>\r\n    </ServicesContainer>\r\n  );\r\n};\r\n\r\nexport default ServicesContent;\r\n"],"names":["_ref","children","blur","duration","easing","delay","threshold","initialOpacity","className","inView","setInView","useState","ref","useRef","useEffect","current","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","setTimeout","observe","disconnect","_jsx","style","opacity","transition","concat","filter","spotlightColor","divRef","onMouseMove","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","xPercent","width","yPercent","height","setProperty","IconComponents","ShieldCheck","_jsxs","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Monitor","rx","ry","x1","y1","x2","y2","Package","points","titleComponent","fontsLoaded","setFontsLoaded","showFallback","setShowFallback","containerRef","fallbackTimer","forceLoadTimer","mounted","async","document","fonts","ready","error","console","warn","checkFonts","clearTimeout","rootMargin","ServicesContainer","margin","ServicesContentData","FadeContent","ServicesGrid","map","service","index","IconComponent","icon","SpotlightCard","ServiceCard","ServiceIcon","ServiceTitle","title","ServiceDescription","description"],"sourceRoot":""}