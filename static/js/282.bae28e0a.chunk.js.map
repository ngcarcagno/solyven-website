{"version":3,"file":"static/js/282.bae28e0a.chunk.js","mappings":"wNAiBA,MA+IA,EA/IqBA,IAAiG,IAAhG,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,QAAEC,EAAO,OAAEC,EAAM,GAAEC,EAAE,UAAEC,EAAS,cAAEC,GAAkCR,EAC9G,MAAMS,EAAYH,IACAI,SAASC,eAAeL,GAChCM,eAAe,CACrBC,SAAU,UACV,EAGJ,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACV,UAAyB,WAAdA,EAAyB,KAAOA,EAAWW,aAAW,EAAAF,UACrEF,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CACRC,QAAuB,WAAdb,EAAyB,SAAW,gBAC7Cc,MAAM,SACNf,GAAIA,EACJC,UAAWA,EAAUS,SACN,WAAdT,GACCe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACEF,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAACC,KAAM,GAAIC,MAAO,CAAEC,KAAM,YAAaX,SACxB,kBAATf,GACNa,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAK5B,EAAM6B,MAAM,mBAAmBC,OAAO,qBAEpD9B,KAGJa,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAACC,KAAM,GAAIC,MAAO,CAAEC,KAAM,IAAKK,UAAW,GAAIhB,UAChDM,EAAAA,EAAAA,MAACW,EAAAA,GAAc,CAACC,WAAW,EAAKlB,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKd,KACLY,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAAAnB,SAAEb,IACTK,GACDM,EAAAA,EAAAA,KAACsB,EAAAA,GAAa,CAACF,WAAW,EAAKlB,SACV,kBAAXX,GACNA,EAAOgC,KACL,CACEC,EAIAhC,KAGEQ,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAUC,MAAOF,EAAKE,MAAOC,QAASA,IAAMhC,EAAS,SAASO,SAClEsB,EAAKpC,OADKI,OAOH,kBAAZF,IACNU,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAChB,MAAO,CAAEiB,eAAgB,SAAUC,SAAU,OAAQC,IAAK,QAAS7B,UACjFF,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAC1B,QAAQ,SAAS2B,OAAQ,CAAC,GAAI,IAAI/B,SACpCZ,EAAQiC,KACP,CACEC,EAKAhC,KAGEgB,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAAUwB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGzB,MAAO,CAAE0B,UAAW,UAAWpC,SAAA,EACzEF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAKS,EAAKrC,KAAM6B,MAAM,OAAOC,OAAO,UAC7CjB,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAArC,SAAEsB,EAAKpC,SAChBY,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,CAAAtC,SAAEsB,EAAKnC,YAHPG,kBAe5BgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACEF,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAAC2B,GAAI,GAAID,GAAI,GAAID,GAAI,GAAID,GAAI,GAAItB,MAAO,CAAE6B,QAAS,OAAQC,WAAY,UAAWxC,SACnE,kBAATf,GACNa,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAK5B,EAAM6B,MAAM,kBAAkBC,OAAO,oBAEnD9B,KAGJa,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAAC2B,GAAI,GAAID,GAAI,GAAID,GAAI,GAAID,GAAI,GAAItB,MAAO,CAAE6B,QAAS,OAAQE,cAAe,UAAWzC,UACvFM,EAAAA,EAAAA,MAACW,EAAAA,GAAc,CAACP,MAAO,CAAEC,KAAM,IAAK4B,QAAS,OAAQE,cAAe,UAAWzC,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKd,KACLY,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAAAnB,SAAEb,IACTK,EACc,UAAdD,GACCO,EAAAA,EAAAA,KAACsB,EAAAA,GAAa,CAAApB,SACO,kBAAXX,GACNA,EAAOgC,KACL,CACEC,EAIAhC,KAGEQ,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAAUC,MAAOF,EAAKE,MAAOC,QAASA,IAAMhC,EAAS,SAASO,SAClEsB,EAAKpC,OADKI,QAQvBQ,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,CAAA1B,UACbF,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAC1B,QAAQ,gBAAeJ,SACN,kBAAZZ,GACNA,EAAQiC,KACN,CACEC,EAKAhC,KAGEgB,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAAUC,KAAM,GAAGT,SAAA,EACrBF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CAACC,IAAKS,EAAKrC,KAAM6B,MAAM,OAAOC,OAAO,UAC7CjB,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAArC,SAAEsB,EAAKpC,SAChBY,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,CAAAtC,SAAEsB,EAAKnC,YAHPG,sBAiBrB,C","sources":["components/ContentBlock/index.tsx"],"sourcesContent":["import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({ icon, title, content, section, button, id, direction, customContent }: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction === \"center\" ? \"up\" : direction} triggerOnce>\r\n        <StyledRow\r\n          justify={direction === \"center\" ? \"center\" : \"space-between\"}\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}>\r\n          {direction === \"center\" ? (\r\n            <>\r\n              <Col span={24} style={{ flex: \"0 0 auto\" }}>\r\n                {typeof icon === \"string\" ? (\r\n                  <SvgIcon src={icon} width=\"min(200px, 25vh)\" height=\"min(200px, 25vh)\" />\r\n                ) : (\r\n                  icon\r\n                )}\r\n              </Col>\r\n              <Col span={24} style={{ flex: \"1\", minHeight: 0 }}>\r\n                <ContentWrapper $centered={true}>\r\n                  <h6>{title}</h6>\r\n                  <Content>{content}</Content>\r\n                  {customContent}\r\n                  <ButtonWrapper $centered={true}>\r\n                    {typeof button === \"object\" &&\r\n                      button.map(\r\n                        (\r\n                          item: {\r\n                            color?: string;\r\n                            title: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                              {item.title}\r\n                            </Button>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </ButtonWrapper>\r\n                  {typeof section === \"object\" && (\r\n                    <ServiceWrapper style={{ justifyContent: \"center\", flexWrap: \"wrap\", gap: \"2rem\" }}>\r\n                      <Row justify=\"center\" gutter={[32, 32]}>\r\n                        {section.map(\r\n                          (\r\n                            item: {\r\n                              title: string;\r\n                              content: string;\r\n                              icon: string;\r\n                            },\r\n                            id: number\r\n                          ) => {\r\n                            return (\r\n                              <Col key={id} xs={24} sm={12} md={8} lg={6} style={{ textAlign: \"center\" }}>\r\n                                <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                                <MinTitle>{item.title}</MinTitle>\r\n                                <MinPara>{item.content}</MinPara>\r\n                              </Col>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </Row>\r\n                    </ServiceWrapper>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col lg={11} md={11} sm={12} xs={24} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {typeof icon === \"string\" ? (\r\n                  <SvgIcon src={icon} width=\"min(100%, 40vh)\" height=\"min(100%, 40vh)\" />\r\n                ) : (\r\n                  icon\r\n                )}\r\n              </Col>\r\n              <Col lg={11} md={11} sm={11} xs={24} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <ContentWrapper style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\" }}>\r\n                  <h6>{title}</h6>\r\n                  <Content>{content}</Content>\r\n                  {customContent}\r\n                  {direction === \"right\" ? (\r\n                    <ButtonWrapper>\r\n                      {typeof button === \"object\" &&\r\n                        button.map(\r\n                          (\r\n                            item: {\r\n                              color?: string;\r\n                              title: string;\r\n                            },\r\n                            id: number\r\n                          ) => {\r\n                            return (\r\n                              <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                                {item.title}\r\n                              </Button>\r\n                            );\r\n                          }\r\n                        )}\r\n                    </ButtonWrapper>\r\n                  ) : (\r\n                    <ServiceWrapper>\r\n                      <Row justify=\"space-between\">\r\n                        {typeof section === \"object\" &&\r\n                          section.map(\r\n                            (\r\n                              item: {\r\n                                title: string;\r\n                                content: string;\r\n                                icon: string;\r\n                              },\r\n                              id: number\r\n                            ) => {\r\n                              return (\r\n                                <Col key={id} span={11}>\r\n                                  <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                                  <MinTitle>{item.title}</MinTitle>\r\n                                  <MinPara>{item.content}</MinPara>\r\n                                </Col>\r\n                              );\r\n                            }\r\n                          )}\r\n                      </Row>\r\n                    </ServiceWrapper>\r\n                  )}\r\n                </ContentWrapper>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["_ref","icon","title","content","section","button","id","direction","customContent","scrollTo","document","getElementById","scrollIntoView","behavior","_jsx","ContentSection","children","Fade","triggerOnce","StyledRow","justify","align","_jsxs","_Fragment","Col","span","style","flex","SvgIcon","src","width","height","minHeight","ContentWrapper","$centered","Content","ButtonWrapper","map","item","Button","color","onClick","ServiceWrapper","justifyContent","flexWrap","gap","Row","gutter","xs","sm","md","lg","textAlign","MinTitle","MinPara","display","alignItems","flexDirection"],"sourceRoot":""}