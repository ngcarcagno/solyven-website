{"version":3,"file":"static/js/18.1ef507a3.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs"],"sourcesContent":["import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n"],"names":["thresholds","some","all","useInView","ref","root","margin","amount","once","initial","arguments","length","undefined","isInView","setInView","useState","useEffect","current","options","elementOrSelector","onStart","rootMargin","elements","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","inView","onEnter","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","_ref","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","_objectSpread","default","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","layout","featureDefinitions","isEnabled","props","createBox","isBrowser","prefersReducedMotion","hasReducedMotionListener","visualElementStore","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_objectWithoutProperties","_excluded","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","_this$parent2","remove","removeChild","feature","isMounted","child","_this$enteringChildre","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","p","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useRef","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","_transition$key","isKeyframesTarget","setMotionValue","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","_this$options$onCompl","_this$options3","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","_visualElement$latest","MotionHandoffAnimation","appearId","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","_visualElement$presen","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onMove","handlePointerMove","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","thresholdNames","gestureAnimations","hasEnteredView","startObserver","viewport","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll"],"sourceRoot":""}