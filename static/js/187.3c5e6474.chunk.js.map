{"version":3,"file":"static/js/187.3c5e6474.chunk.js","mappings":"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","sources":["../node_modules/react-div-100vh/dist/esm/index.js","components/TexComponents/DecryptedText.js","components/FullViewport/FullViewport.tsx","components/FullViewport/FullViewportSection.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, useState, useEffect } from 'react';\nvar warned = false;\nvar Div100vh = forwardRef(function (_a, ref) {\n    var style = _a.style, other = __rest(_a, [\"style\"]);\n    var height = use100vh();\n    // TODO: warn only in development\n    if (!warned && (style === null || style === void 0 ? void 0 : style.height)) {\n        warned = true;\n        console.warn('<Div100vh /> overrides the height property of the style prop');\n    }\n    var styleWithRealHeight = __assign(__assign({}, style), { height: height ? height + \"px\" : '100vh' });\n    return React.createElement(\"div\", __assign({ ref: ref, style: styleWithRealHeight }, other));\n});\nDiv100vh.displayName = 'Div100vh';\nexport default Div100vh;\nexport function use100vh() {\n    var _a = useState(measureHeight), height = _a[0], setHeight = _a[1];\n    var wasRenderedOnClientAtLeastOnce = useWasRenderedOnClientAtLeastOnce();\n    useEffect(function () {\n        if (!wasRenderedOnClientAtLeastOnce)\n            return;\n        function setMeasuredHeight() {\n            var measuredHeight = measureHeight();\n            setHeight(measuredHeight);\n        }\n        window.addEventListener('resize', setMeasuredHeight);\n        return function () { return window.removeEventListener('resize', setMeasuredHeight); };\n    }, [wasRenderedOnClientAtLeastOnce]);\n    return wasRenderedOnClientAtLeastOnce ? height : null;\n}\nexport function measureHeight() {\n    if (!isClient())\n        return null;\n    return window.innerHeight;\n}\n// Once we ended up on the client, the first render must look the same as on\n// the server so hydration happens without problems. _Then_ we immediately\n// schedule a subsequent update and return the height measured on the client.\n// It's not needed for CSR-only apps, but is critical for SSR.\nfunction useWasRenderedOnClientAtLeastOnce() {\n    var _a = useState(false), wasRenderedOnClientAtLeastOnce = _a[0], setWasRenderedOnClientAtLeastOnce = _a[1];\n    useEffect(function () {\n        if (isClient()) {\n            setWasRenderedOnClientAtLeastOnce(true);\n        }\n    }, []);\n    return wasRenderedOnClientAtLeastOnce;\n}\nfunction isClient() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { motion } from \"motion/react\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    display: \"inline-block\",\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n  srOnly: {\r\n    position: \"absolute\",\r\n    width: \"1px\",\r\n    height: \"1px\",\r\n    padding: 0,\r\n    margin: \"-1px\",\r\n    overflow: \"hidden\",\r\n    clip: \"rect(0,0,0,0)\",\r\n    border: 0,\r\n  },\r\n};\r\n\r\nexport default function DecryptedText({\r\n  text,\r\n  speed = 50,\r\n  maxIterations = 10,\r\n  sequential = false,\r\n  revealDirection = \"start\",\r\n  useOriginalCharsOnly = false,\r\n  characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+\",\r\n  className = \"\",\r\n  parentClassName = \"\",\r\n  encryptedClassName = \"\",\r\n  animateOn = \"hover\",\r\n  ...props\r\n}) {\r\n  const [displayText, setDisplayText] = useState(text);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [isScrambling, setIsScrambling] = useState(false);\r\n  const [revealedIndices, setRevealedIndices] = useState(new Set());\r\n  const [hasAnimated, setHasAnimated] = useState(false);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let currentIteration = 0;\r\n\r\n    const getNextIndex = (revealedSet) => {\r\n      const textLength = text.length;\r\n      switch (revealDirection) {\r\n        case \"start\":\r\n          return revealedSet.size;\r\n        case \"end\":\r\n          return textLength - 1 - revealedSet.size;\r\n        case \"center\": {\r\n          const middle = Math.floor(textLength / 2);\r\n          const offset = Math.floor(revealedSet.size / 2);\r\n          const nextIndex = revealedSet.size % 2 === 0 ? middle + offset : middle - offset - 1;\r\n\r\n          if (nextIndex >= 0 && nextIndex < textLength && !revealedSet.has(nextIndex)) {\r\n            return nextIndex;\r\n          }\r\n\r\n          for (let i = 0; i < textLength; i++) {\r\n            if (!revealedSet.has(i)) return i;\r\n          }\r\n          return 0;\r\n        }\r\n        default:\r\n          return revealedSet.size;\r\n      }\r\n    };\r\n\r\n    const availableChars = useOriginalCharsOnly\r\n      ? Array.from(new Set(text.split(\"\"))).filter((char) => char !== \" \")\r\n      : characters.split(\"\");\r\n\r\n    const shuffleText = (originalText, currentRevealed) => {\r\n      if (useOriginalCharsOnly) {\r\n        const positions = originalText.split(\"\").map((char, i) => ({\r\n          char,\r\n          isSpace: char === \" \",\r\n          index: i,\r\n          isRevealed: currentRevealed.has(i),\r\n        }));\r\n\r\n        const nonSpaceChars = positions.filter((p) => !p.isSpace && !p.isRevealed).map((p) => p.char);\r\n\r\n        for (let i = nonSpaceChars.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [nonSpaceChars[i], nonSpaceChars[j]] = [nonSpaceChars[j], nonSpaceChars[i]];\r\n        }\r\n\r\n        let charIndex = 0;\r\n        return positions\r\n          .map((p) => {\r\n            if (p.isSpace) return \" \";\r\n            if (p.isRevealed) return originalText[p.index];\r\n            return nonSpaceChars[charIndex++];\r\n          })\r\n          .join(\"\");\r\n      } else {\r\n        return originalText\r\n          .split(\"\")\r\n          .map((char, i) => {\r\n            if (char === \" \") return \" \";\r\n            if (currentRevealed.has(i)) return originalText[i];\r\n            return availableChars[Math.floor(Math.random() * availableChars.length)];\r\n          })\r\n          .join(\"\");\r\n      }\r\n    };\r\n\r\n    if (isHovering) {\r\n      setIsScrambling(true);\r\n      interval = setInterval(() => {\r\n        setRevealedIndices((prevRevealed) => {\r\n          if (sequential) {\r\n            if (prevRevealed.size < text.length) {\r\n              const nextIndex = getNextIndex(prevRevealed);\r\n              const newRevealed = new Set(prevRevealed);\r\n              newRevealed.add(nextIndex);\r\n              setDisplayText(shuffleText(text, newRevealed));\r\n              return newRevealed;\r\n            } else {\r\n              clearInterval(interval);\r\n              setIsScrambling(false);\r\n              return prevRevealed;\r\n            }\r\n          } else {\r\n            setDisplayText(shuffleText(text, prevRevealed));\r\n            currentIteration++;\r\n            if (currentIteration >= maxIterations) {\r\n              clearInterval(interval);\r\n              setIsScrambling(false);\r\n              setDisplayText(text);\r\n            }\r\n            return prevRevealed;\r\n          }\r\n        });\r\n      }, speed);\r\n    } else {\r\n      setDisplayText(text);\r\n      setRevealedIndices(new Set());\r\n      setIsScrambling(false);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [isHovering, text, speed, maxIterations, sequential, revealDirection, characters, useOriginalCharsOnly]);\r\n\r\n  useEffect(() => {\r\n    if (animateOn !== \"view\" && animateOn !== \"both\") return;\r\n\r\n    const observerCallback = (entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && !hasAnimated) {\r\n          setIsHovering(true);\r\n          setHasAnimated(true);\r\n        }\r\n      });\r\n    };\r\n\r\n    const observerOptions = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 0.1,\r\n    };\r\n\r\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\r\n    const currentRef = containerRef.current;\r\n    if (currentRef) {\r\n      observer.observe(currentRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentRef) {\r\n        observer.unobserve(currentRef);\r\n      }\r\n    };\r\n  }, [animateOn, hasAnimated]);\r\n\r\n  const hoverProps =\r\n    animateOn === \"hover\" || animateOn === \"both\"\r\n      ? {\r\n          onMouseEnter: () => setIsHovering(true),\r\n          onMouseLeave: () => setIsHovering(false),\r\n        }\r\n      : {};\r\n\r\n  return (\r\n    <motion.span className={parentClassName} ref={containerRef} style={styles.wrapper} {...hoverProps} {...props}>\r\n      <span style={styles.srOnly}>{displayText}</span>\r\n\r\n      <span aria-hidden=\"true\">\r\n        {displayText.split(\"\").map((char, index) => {\r\n          const isRevealedOrDone = revealedIndices.has(index) || !isScrambling || !isHovering;\r\n\r\n          return (\r\n            <span key={index} className={isRevealedOrDone ? className : encryptedClassName}>\r\n              {char}\r\n            </span>\r\n          );\r\n        })}\r\n      </span>\r\n    </motion.span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Div100vh from \"react-div-100vh\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Full = styled(Div100vh)`\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\ninterface FullViewportProps {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst FullViewport = ({ children, className }: FullViewportProps) => {\r\n  React.useEffect(() => {\r\n    const setVh = () => {\r\n      const vh = window.innerHeight * 0.01;\r\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n    };\r\n    setVh();\r\n    window.addEventListener(\"resize\", setVh);\r\n    return () => window.removeEventListener(\"resize\", setVh);\r\n  }, []);\r\n\r\n  return (\r\n    <Full className={className} data-full-viewport=\"true\">\r\n      {children}\r\n    </Full>\r\n  );\r\n};\r\n\r\nexport default FullViewport;\r\n","import styled from \"styled-components\";\r\nimport FullViewport from \"./FullViewport\";\r\n\r\nconst FullViewportSection = styled(FullViewport)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default FullViewportSection;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport DecryptedText from \"../TexComponents/DecryptedText\";\r\nimport SplitText from \"../TexComponents/SplitText/SplitText\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n  IconWithHalo,\r\n  SectionIconWrap,\r\n} from \"./styles\";\r\nimport FullViewportSection from \"../FullViewport/FullViewportSection\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  id,\r\n  direction,\r\n  customContent,\r\n  animation,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  const isCenter = direction === \"center\";\r\n  // For center sections we wrap the ContentSection inside FullViewportSection (structural)\r\n  if (direction === \"center\") {\r\n    return (\r\n      <FullViewportSection>\r\n        <ContentSection>\r\n          <Fade direction=\"up\" triggerOnce>\r\n            <StyledRow justify=\"center\" align=\"middle\" id={id} direction={direction}>\r\n              {/* Single column with icon + content together */}\r\n              <Col\r\n                span={24}\r\n                style={{\r\n                  flex: \"1\",\r\n                  minHeight: 0,\r\n                  overflow: \"visible\",\r\n                }}>\r\n                <ContentWrapper $centered={true}>\r\n                  <div className=\"content-block-icon\">\r\n                    <SectionIconWrap>\r\n                      {typeof icon === \"string\" ? (\r\n                        icon.endsWith(\".png\") || icon.endsWith(\".jpg\") || icon.endsWith(\".jpeg\") ? (\r\n                          <IconWithHalo>\r\n                            <img\r\n                              src={`${process.env.PUBLIC_URL}/img/png/${icon}`}\r\n                              alt=\"\"\r\n                              className=\"responsive-icon-img\"\r\n                            />\r\n                          </IconWithHalo>\r\n                        ) : (\r\n                          <SvgIcon src={icon} width=\"min(200px, 25vh)\" height=\"min(200px, 25vh)\" />\r\n                        )\r\n                      ) : (\r\n                        icon\r\n                      )}\r\n                    </SectionIconWrap>\r\n                  </div>\r\n\r\n                  {title && <h6>{title}</h6>}\r\n                  {content && (\r\n                    <Content>\r\n                      <span>{content}</span>\r\n                    </Content>\r\n                  )}\r\n                  {customContent}\r\n                  <ButtonWrapper $centered={true}>\r\n                    {typeof button === \"object\" &&\r\n                      button.map((item: any, id: number) => (\r\n                        <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                          {item.title}\r\n                        </Button>\r\n                      ))}\r\n                  </ButtonWrapper>\r\n                </ContentWrapper>\r\n              </Col>\r\n            </StyledRow>\r\n          </Fade>\r\n        </ContentSection>\r\n      </FullViewportSection>\r\n    );\r\n  }\r\n\r\n  // Non-center directions keep the original layout\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={isCenter ? \"up\" : direction} triggerOnce>\r\n        <StyledRow justify={isCenter ? \"center\" : \"space-between\"} align=\"middle\" id={id} direction={direction}>\r\n          {/* ...existing non-center layout... */}\r\n          <>\r\n            <Col lg={11} md={11} sm={12} xs={24} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              {typeof icon === \"string\" ? (\r\n                icon.endsWith(\".png\") || icon.endsWith(\".jpg\") || icon.endsWith(\".jpeg\") ? (\r\n                  <img\r\n                    src={`${process.env.PUBLIC_URL}/img/png/${icon}`}\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"min(100%, 40vh)\",\r\n                      height: \"min(100%, 40vh)\",\r\n                      objectFit: \"contain\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <SvgIcon src={icon} width=\"min(100%, 40vh)\" height=\"min(100%, 40vh)\" />\r\n                )\r\n              ) : (\r\n                icon\r\n              )}\r\n            </Col>\r\n            <Col lg={11} md={11} sm={11} xs={24} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <ContentWrapper style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\" }}>\r\n                <h6>\r\n                  <DecryptedText text={title} animateOn=\"view\" revealDirection=\"center\" speed={45} maxIterations={30} />\r\n                </h6>\r\n                <Content>\r\n                  <span>{content}</span>\r\n                </Content>\r\n                {customContent}\r\n                {direction === \"right\" ? (\r\n                  <ButtonWrapper>\r\n                    {typeof button === \"object\" &&\r\n                      button.map((item: any, id: number) => (\r\n                        <Button key={id} color={item.color} onClick={() => scrollTo(\"about\")}>\r\n                          {item.title}\r\n                        </Button>\r\n                      ))}\r\n                  </ButtonWrapper>\r\n                ) : (\r\n                  <ServiceWrapper>\r\n                    <Row justify=\"space-between\">\r\n                      {typeof section === \"object\" &&\r\n                        section.map((item: any, id: number) => (\r\n                          <Col key={id} span={11}>\r\n                            <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                            <MinTitle>{item.title}</MinTitle>\r\n                            <MinPara>{item.content}</MinPara>\r\n                          </Col>\r\n                        ))}\r\n                    </Row>\r\n                  </ServiceWrapper>\r\n                )}\r\n              </ContentWrapper>\r\n            </Col>\r\n          </>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","warned","Div100vh","forwardRef","_a","ref","style","other","height","useState","measureHeight","setHeight","wasRenderedOnClientAtLeastOnce","setWasRenderedOnClientAtLeastOnce","useEffect","isClient","useWasRenderedOnClientAtLeastOnce","window","addEventListener","setMeasuredHeight","removeEventListener","measuredHeight","use100vh","console","warn","styleWithRealHeight","React","displayName","innerHeight","document","styles","wrapper","display","whiteSpace","srOnly","position","width","padding","margin","overflow","clip","border","DecryptedText","_ref","text","speed","maxIterations","sequential","revealDirection","useOriginalCharsOnly","characters","className","parentClassName","encryptedClassName","animateOn","props","_objectWithoutProperties","_excluded","displayText","setDisplayText","isHovering","setIsHovering","isScrambling","setIsScrambling","revealedIndices","setRevealedIndices","Set","hasAnimated","setHasAnimated","containerRef","useRef","interval","currentIteration","availableChars","Array","from","split","filter","char","shuffleText","originalText","currentRevealed","positions","map","isSpace","index","isRevealed","has","nonSpaceChars","j","Math","floor","random","charIndex","join","setInterval","prevRevealed","size","nextIndex","revealedSet","textLength","middle","offset","getNextIndex","newRevealed","add","clearInterval","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","rootMargin","threshold","currentRef","current","observe","unobserve","hoverProps","onMouseEnter","onMouseLeave","_jsxs","motion","span","_objectSpread","children","_jsx","isRevealedOrDone","Full","styled","_templateObject","_taggedTemplateLiteral","setVh","vh","documentElement","setProperty","concat","FullViewport","icon","title","content","section","button","id","direction","customContent","animation","scrollTo","getElementById","scrollIntoView","behavior","isCenter","FullViewportSection","ContentSection","Fade","triggerOnce","StyledRow","justify","align","Col","flex","minHeight","ContentWrapper","$centered","SectionIconWrap","endsWith","IconWithHalo","src","process","alt","SvgIcon","Content","ButtonWrapper","item","Button","color","onClick","_Fragment","lg","md","sm","xs","alignItems","objectFit","flexDirection","ServiceWrapper","Row","MinTitle","MinPara"],"sourceRoot":""}