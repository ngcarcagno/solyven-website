{"version":3,"file":"static/js/250.d19202d1.chunk.js","mappings":"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","sources":["components/FadeContent/FadeContent.js","pages/Sections/styles.ts","components/SpotlightCard/SpotlightCard.js","pages/Sections/Services.tsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\n\r\nconst FadeContent = ({\r\n                         children,\r\n                         blur = false,\r\n                         duration = 1000,\r\n                         easing = 'ease-out',\r\n                         delay = 0,\r\n                         threshold = 0.1,\r\n                         initialOpacity = 0,\r\n                         className = ''\r\n                     }) => {\r\n    const [inView, setInView] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!ref.current) return;\r\n\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    observer.unobserve(ref.current);\r\n                    setTimeout(() => {\r\n                        setInView(true);\r\n                    }, delay);\r\n                }\r\n            },\r\n            { threshold }\r\n        );\r\n\r\n        observer.observe(ref.current);\r\n\r\n        return () => observer.disconnect();\r\n    }, [threshold, delay]);\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={className}\r\n            style={{\r\n                opacity: inView ? 1 : initialOpacity,\r\n                transition: `opacity ${duration}ms ${easing}, filter ${duration}ms ${easing}`,\r\n                filter: blur ? (inView ? 'blur(0px)' : 'blur(10px)') : 'none'\r\n            }}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FadeContent;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutContainer = styled.div`\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: visible;\r\n\r\n  /* El título h6 usa automáticamente los estilos globales - no necesita override */\r\n\r\n  /* Padding superior en mobile - ahora mínimo ya que ContentSection maneja el espaciado */\r\n  @media (max-width: 768px) {\r\n    padding-top: 0.5rem; /* Mínimo ya que ContentSection tiene el padding principal */\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    padding-top: 0.25rem;\r\n  }\r\n\r\n  /* Para pantallas ultra pequeñas, ajustar el gap entre elementos */\r\n  @media only screen and (max-width: 375px) {\r\n    gap: 0.5rem;\r\n    padding-top: 0; /* Sin padding adicional para iPhone SE */\r\n  }\r\n\r\n  /* Estilos para el contenedor del título */\r\n  .about-title-container {\r\n    text-align: center;\r\n    margin-bottom: 1.5rem;\r\n\r\n    @media only screen and (max-width: 375px) {\r\n      margin-bottom: 0.75rem;\r\n    }\r\n  }\r\n`;\r\n\r\n/* ========================================\r\n   SERVICES SECTION STYLES\r\n   ======================================== */\r\nexport const ServicesContainer = styled.div`\r\n  width: 100%;\r\n  padding: 1rem; /* Padding para compensar hover effects */\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: visible;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0.75rem 0.5rem 0 0.5rem; /* Sin padding bottom, con top pequeño */\r\n    height: auto;\r\n    min-height: auto;\r\n\r\n    /* Forzar que comience desde arriba */\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    padding: 0.5rem 0.25rem 0 0.25rem;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    padding: 0.375rem 0.125rem 0 0.125rem;\r\n  }\r\n\r\n  /* Estilos para el contenedor del título */\r\n  .services-title-container {\r\n    text-align: center;\r\n    margin-bottom: 1.5rem;\r\n\r\n    @media (max-width: 768px) {\r\n      margin-top: 0;\r\n      margin-bottom: 1rem;\r\n      padding-top: 0;\r\n    }\r\n\r\n    @media only screen and (max-width: 375px) {\r\n      margin-bottom: 0.75rem;\r\n    }\r\n  }\r\n\r\n  /* Estilos para la descripción */\r\n  .services-description {\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n\r\n    .subtitle {\r\n      font-family: var(--font-subtitle);\r\n      font-size: var(--size-body);\r\n      color: var(--color-text-primary);\r\n      line-height: 1.6;\r\n      margin: 0 0 0.5rem 0;\r\n    }\r\n\r\n    .description {\r\n      font-family: var(--font-subtitle);\r\n      font-size: calc(var(--size-body) * 0.9);\r\n      color: rgba(255, 255, 255, 0.8);\r\n      line-height: 1.5;\r\n      margin: 0;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      margin-bottom: 1.25rem;\r\n\r\n      .subtitle {\r\n        font-size: 1.1rem; /* Más grande que var(--size-min-para) */\r\n        line-height: 1.4;\r\n      }\r\n\r\n      .description {\r\n        font-size: 0.95rem; /* Más legible en mobile */\r\n        line-height: 1.4;\r\n        color: rgba(255, 255, 255, 0.85); /* Mejor contraste */\r\n      }\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      .subtitle {\r\n        font-size: 1rem;\r\n      }\r\n\r\n      .description {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 375px) {\r\n      .subtitle {\r\n        font-size: 0.95rem;\r\n      }\r\n\r\n      .description {\r\n        font-size: 0.85rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ServicesGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 2rem;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  margin: 0 auto;\r\n\r\n  /* Pirámide invertida: 2 arriba, 1 abajo centrada */\r\n  .service-item:nth-child(3) {\r\n    grid-column: 1 / -1;\r\n    justify-self: center;\r\n    max-width: 500px;\r\n    width: 100%;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    gap: 1rem;\r\n    max-width: 350px;\r\n    padding: 0 0.5rem; /* Padding horizontal para evitar cortes */\r\n\r\n    /* En mobile todas las cards ocupan todo el ancho */\r\n    .service-item:nth-child(3) {\r\n      grid-column: 1;\r\n      max-width: none;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    gap: 0.75rem;\r\n    max-width: 320px;\r\n    padding: 0 0.25rem;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    gap: 0.5rem;\r\n    max-width: 300px;\r\n    padding: 0;\r\n  } /* Estilos para SpotlightCard */\r\n  .service-spotlight-card {\r\n    height: 100%;\r\n    border-radius: 0.75rem;\r\n    overflow: visible; /* Permitir que el hover se vea completo */\r\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    /* Removemos el transform de aquí para evitar conflictos con SpotlightCard CSS */\r\n  }\r\n`;\r\n\r\nexport const ServiceCard = styled.div`\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-height: 220px;\r\n  width: 100%;\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  position: relative;\r\n  gap: 1rem;\r\n\r\n  /* Cards más cuadradas/rectangulares como la referencia */\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 1rem;\r\n    min-height: 140px;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    padding: 0.75rem;\r\n    min-height: 120px;\r\n    gap: 0.375rem;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    padding: 0.625rem;\r\n    min-height: 110px;\r\n    gap: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceIcon = styled.div`\r\n  color: var(--color-secondary);\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n\r\n  svg {\r\n    width: 36px;\r\n    height: 36px;\r\n    stroke-width: 2;\r\n    filter: drop-shadow(0 2px 6px rgba(247, 88, 0, 0.3));\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    svg {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    svg {\r\n      width: 26px;\r\n      height: 26px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    svg {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ServiceTitle = styled.h3`\r\n  font-family: var(--font-title);\r\n  font-size: 1.1rem;\r\n  color: var(--color-text-primary);\r\n  margin: 0;\r\n  text-transform: uppercase;\r\n  line-height: 1.2;\r\n  flex-shrink: 0;\r\n  letter-spacing: 0.02em;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.95rem;\r\n    line-height: 1.1;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 0.85rem;\r\n    line-height: 1.1;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceDescription = styled.p`\r\n  font-family: var(--font-subtitle);\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.85);\r\n  line-height: 1.5;\r\n  margin: 0;\r\n  flex: 1;\r\n  display: block;\r\n  text-align: center;\r\n  overflow-wrap: break-word;\r\n  word-wrap: break-word;\r\n  hyphens: auto;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n    line-height: 1.3;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 0.75rem;\r\n    line-height: 1.25;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    font-size: 0.7rem;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\nexport const AboutTextContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  flex-shrink: 0;\r\n\r\n  p {\r\n    font-family: var(--font-subtitle);\r\n    font-size: var(--size-body);\r\n    color: var(--color-text-primary);\r\n    line-height: 1.6;\r\n    margin: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin-bottom: 0.8rem;\r\n\r\n    p {\r\n      font-size: 1.1rem; /* Más grande que var(--size-min-para) - igual que Services */\r\n      line-height: 1.4;\r\n      color: rgba(255, 255, 255, 0.85); /* Mejor contraste - igual que Services */\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    p {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    p {\r\n      font-size: 0.95rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BulletsContainer = styled.div`\r\n  /* Sin fondo glassy - contenedor limpio */\r\n  flex: 1;\r\n  min-height: 0;\r\n  padding: 0.5rem 0;\r\n\r\n  /* Adaptarse al espacio disponible del ContentBlock */\r\n  height: 100%;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n\r\n  /* Responsive padding para mobile */\r\n  @media (max-width: 768px) {\r\n    padding: 0.5rem 1rem; /* Un poco más de padding en mobile */\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    padding: 0.5rem 0.5rem; /* Menos padding en pantallas muy pequeñas */\r\n  }\r\n\r\n  /* Estilos personalizados para AnimatedList adaptados a nuestra web */\r\n  .about-bullets-list {\r\n    height: 100%;\r\n    width: 100% !important;\r\n    max-width: 600px !important; /* Limitar ancho principal */\r\n    margin: 0 auto !important; /* Centrar */\r\n    padding: 2rem 1rem 1rem 1rem; /* Top, right, bottom, left - compensar hover effects */\r\n\r\n    .scroll-list-container {\r\n      width: 100% !important;\r\n      max-width: 100% !important; /* Usar el ancho del contenedor padre */\r\n    }\r\n\r\n    .scroll-list {\r\n      max-height: 100%;\r\n      padding: 0.5rem; /* Padding interno para compensar hover effects */\r\n      overflow-y: auto;\r\n      overflow-x: visible; /* Permitir que los efectos de hover se vean */\r\n\r\n      /* Scrollbar personalizado */\r\n      &::-webkit-scrollbar {\r\n        width: 4px;\r\n      }\r\n\r\n      &::-webkit-scrollbar-track {\r\n        background: transparent;\r\n      }\r\n\r\n      &::-webkit-scrollbar-thumb {\r\n        background: rgba(255, 255, 255, 0.2);\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n\r\n    .item {\r\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));\r\n      border: 1px solid rgba(255, 255, 255, 0.1);\r\n      border-radius: 0.75rem;\r\n      padding: 1rem 1.25rem;\r\n      margin-bottom: 0.75rem;\r\n      backdrop-filter: blur(10px);\r\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n      &:hover {\r\n        background: linear-gradient(135deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.08));\r\n        border-color: rgba(255, 130, 92, 0.3);\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      &.selected {\r\n        background: linear-gradient(135deg, rgba(255, 130, 92, 0.2), rgba(255, 130, 92, 0.1));\r\n        border-color: rgba(255, 130, 92, 0.4);\r\n        transform: translateY(-1px);\r\n      }\r\n    }\r\n\r\n    .item-text {\r\n      color: var(--color-text-primary);\r\n      font-family: var(--font-base);\r\n      font-size: var(--size-body);\r\n      line-height: 1.5;\r\n      margin: 0;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    /* Estilos responsive para AnimatedList */\r\n    .about-bullets-list {\r\n      .item {\r\n        padding: 0.8rem 1rem;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      .item-text {\r\n        font-size: var(--size-min-para);\r\n        line-height: 1.4;\r\n      }\r\n    }\r\n\r\n    /* Estilos responsive para ScrollStack */\r\n    .about-scroll-stack {\r\n      height: 400px; /* Área visible también en mobile */\r\n\r\n      .scroll-stack-card.bullet-card {\r\n        padding: 0.75rem 1rem; /* Compacto en mobile */\r\n        margin-bottom: 0.6rem;\r\n\r\n        &::after {\r\n          top: 0.4rem;\r\n          right: 0.6rem;\r\n          font-size: 0.65rem;\r\n        }\r\n\r\n        p {\r\n          font-size: var(--size-min-para);\r\n          line-height: 1.4;\r\n          padding-right: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    padding: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const BulletItem = styled.div`\r\n  font-family: var(--font-base);\r\n  font-size: var(--size-body);\r\n  color: var(--color-text-primary);\r\n  padding: 0.75rem 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  padding-left: 1.5rem;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &:before {\r\n    content: \"•\";\r\n    color: var(--color-secondary);\r\n    font-weight: bold;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0.75rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: var(--size-min-para);\r\n    padding: 0.5rem 0;\r\n    padding-left: 1.2rem;\r\n\r\n    &:before {\r\n      top: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n","import { useRef } from \"react\";\r\nimport \"./SpotlightCard.css\";\r\n\r\nconst SpotlightCard = ({ children, className = \"\", spotlightColor = \"rgba(255, 255, 255, 0.25)\" }) => {\r\n  const divRef = useRef(null);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const rect = divRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    // Convertir a porcentajes para que funcione con el CSS\r\n    const xPercent = (x / rect.width) * 100;\r\n    const yPercent = (y / rect.height) * 100;\r\n\r\n    divRef.current.style.setProperty(\"--mouse-x\", `${xPercent}%`);\r\n    divRef.current.style.setProperty(\"--mouse-y\", `${yPercent}%`);\r\n  };\r\n\r\n  return (\r\n    <div ref={divRef} onMouseMove={handleMouseMove} className={`card-spotlight ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotlightCard;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport FadeContent from \"../../components/FadeContent/FadeContent\";\r\nimport SpotlightCard from \"../../components/SpotlightCard/SpotlightCard\";\r\nimport ServicesContentData from \"../../content/ServicesContent.json\";\r\nimport { ServicesContainer, ServicesGrid, ServiceCard, ServiceIcon, ServiceTitle, ServiceDescription } from \"./styles\";\r\n\r\n// Iconos simulados (puedes reemplazar con lucide-react o tus propios SVGs)\r\nconst IconComponents = {\r\n  ShieldCheck: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path\r\n        d=\"M12 2L3 7V12.09C3 16.81 6.72 21.09 12 22C17.28 21.09 21 16.81 21 12.09V7L12 2Z\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path d=\"M9 12L11 14L16 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    </svg>\r\n  ),\r\n  Monitor: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n    </svg>\r\n  ),\r\n  Package: () => (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <path\r\n        d=\"M21 16V8a2 2 0 0 0-1-1.73L12 2L4 6.27A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73L12 22l8-4.27A2 2 0 0 0 21 16z\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <polyline points=\"3.27,6.96 12,12.01 20.73,6.96\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n      <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n    </svg>\r\n  ),\r\n};\r\n\r\ninterface ServicesContentProps {\r\n  titleComponent?: React.ReactNode;\r\n}\r\n\r\nconst ServicesContent = ({ titleComponent }: ServicesContentProps) => {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [showFallback, setShowFallback] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let fallbackTimer: NodeJS.Timeout;\r\n    let forceLoadTimer: NodeJS.Timeout;\r\n\r\n    // Mostrar fallback inmediatamente después de 200ms si no hay fuentes cargadas\r\n    fallbackTimer = setTimeout(() => {\r\n      if (mounted && !fontsLoaded) {\r\n        setShowFallback(true);\r\n      }\r\n    }, 200);\r\n\r\n    // Forzar carga después de 2 segundos máximo\r\n    forceLoadTimer = setTimeout(() => {\r\n      if (mounted) {\r\n        setFontsLoaded(true);\r\n        setShowFallback(false);\r\n      }\r\n    }, 2000);\r\n\r\n    // Intentar detectar fuentes cargadas\r\n    const checkFonts = async () => {\r\n      try {\r\n        if (\"fonts\" in document) {\r\n          await document.fonts.ready;\r\n          if (mounted) {\r\n            setFontsLoaded(true);\r\n            setShowFallback(false);\r\n          }\r\n        } else {\r\n          // Fallback para navegadores antiguos\r\n          setTimeout(() => {\r\n            if (mounted) {\r\n              setFontsLoaded(true);\r\n              setShowFallback(false);\r\n            }\r\n          }, 1000);\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Font loading detection failed, using fallback:\", error);\r\n        if (mounted) {\r\n          setFontsLoaded(true);\r\n          setShowFallback(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkFonts();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      mounted = false;\r\n      clearTimeout(fallbackTimer);\r\n      clearTimeout(forceLoadTimer);\r\n    };\r\n  }, [fontsLoaded]);\r\n\r\n  // Intersection Observer para detectar cuando la sección es visible\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          // Forzar re-evaluación cuando la sección sea visible\r\n          if (!fontsLoaded && !showFallback) {\r\n            setShowFallback(true);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n        rootMargin: \"50px\",\r\n      }\r\n    );\r\n\r\n    if (containerRef.current) {\r\n      observer.observe(containerRef.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [fontsLoaded, showFallback]);\r\n\r\n  return (\r\n    <ServicesContainer ref={containerRef}>\r\n      {/* Título - siempre visible con diferentes estrategias */}\r\n      <div className=\"services-title-container\">\r\n        {/* Título animado si las fuentes están listas y hay titleComponent */}\r\n        {titleComponent && fontsLoaded && !showFallback && titleComponent}\r\n\r\n        {/* Fallback mientras se cargan las fuentes o si no hay titleComponent */}\r\n        {(showFallback || !titleComponent || (!fontsLoaded && !titleComponent)) && (\r\n          <h6\r\n            style={{\r\n              margin: 0,\r\n              opacity: fontsLoaded && titleComponent ? 0 : 1,\r\n              transition: \"opacity 0.3s ease\",\r\n            }}>\r\n            {ServicesContentData.title}\r\n          </h6>\r\n        )}\r\n      </div>\r\n\r\n      {/* Subtítulo y descripción */}\r\n      <FadeContent blur={true} duration={1000} easing=\"ease-out\" initialOpacity={0}>\r\n        <div className=\"services-description\">\r\n          <p className=\"subtitle\">{ServicesContentData.subtitle}</p>\r\n          <p className=\"description\">{ServicesContentData.description}</p>\r\n        </div>\r\n      </FadeContent>\r\n\r\n      {/* Grid de servicios con SpotlightCards */}\r\n      <ServicesGrid>\r\n        {ServicesContentData.services.map((service: any, index: number) => {\r\n          const IconComponent = IconComponents[service.icon as keyof typeof IconComponents];\r\n          return (\r\n            <SpotlightCard\r\n              key={index}\r\n              className=\"service-spotlight-card service-item\"\r\n              spotlightColor=\"var(--color-detail)\">\r\n              <ServiceCard>\r\n                <ServiceIcon>{IconComponent && <IconComponent />}</ServiceIcon>\r\n                <ServiceTitle>{service.title}</ServiceTitle>\r\n                <ServiceDescription>{service.description}</ServiceDescription>\r\n              </ServiceCard>\r\n            </SpotlightCard>\r\n          );\r\n        })}\r\n      </ServicesGrid>\r\n    </ServicesContainer>\r\n  );\r\n};\r\n\r\nexport default ServicesContent;\r\n"],"names":["_ref","children","blur","duration","easing","delay","threshold","initialOpacity","className","inView","setInView","useState","ref","useRef","useEffect","current","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","setTimeout","observe","disconnect","_jsx","style","opacity","transition","concat","filter","AboutContainer","styled","div","_templateObject","_taggedTemplateLiteral","ServicesContainer","_templateObject2","ServicesGrid","_templateObject3","ServiceCard","_templateObject4","ServiceIcon","_templateObject5","ServiceTitle","h3","_templateObject6","ServiceDescription","p","_templateObject7","AboutTextContainer","_templateObject8","BulletsContainer","_templateObject9","BulletItem","_templateObject10","spotlightColor","divRef","onMouseMove","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","xPercent","width","yPercent","height","setProperty","IconComponents","ShieldCheck","_jsxs","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Monitor","rx","ry","x1","y1","x2","y2","Package","points","titleComponent","fontsLoaded","setFontsLoaded","showFallback","setShowFallback","containerRef","fallbackTimer","forceLoadTimer","mounted","async","document","fonts","ready","error","console","warn","checkFonts","clearTimeout","rootMargin","margin","ServicesContentData","FadeContent","map","service","index","IconComponent","icon","SpotlightCard","title","description"],"sourceRoot":""}