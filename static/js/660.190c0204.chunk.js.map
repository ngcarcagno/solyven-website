{"version":3,"file":"static/js/660.190c0204.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/Backgrounds/FaultyTerminal/faultyTerminal.js","components/Backgrounds/DotGrid/DotGrid.js","components/HeroSection/HeroSection.tsx","components/HeroSection/index.tsx","components/Elements/SecurityCamera/DomeCamera.jsx","components/Elements/SecurityCamera/utils.ts","pages/Home/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ScrollSnapContainer = styled(\"div\")`\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  scroll-snap-type: y mandatory;\r\n  -webkit-overflow-scrolling: touch;\r\n  scroll-behavior: smooth;\r\n\r\n  /* Oculta scrollbars en algunos navegadores */\r\n  scrollbar-width: none; /* Firefox */\r\n  &::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari */\r\n  }\r\n`;\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  scroll-snap-align: start;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) => (direction === \"left\" ? \"row\" : \"row-reverse\")};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Montserrat Medium\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Renderer, Program, Mesh, Color, Triangle } from \"ogl\";\r\nimport { useEffect, useRef, useMemo, useCallback } from \"react\";\r\nimport \"./FaultyTerminal.css\";\r\n\r\nconst vertexShader = `\r\nattribute vec2 position;\r\nattribute vec2 uv;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = `\r\nprecision mediump float;\r\n\r\nvarying vec2 vUv;\r\n\r\nuniform float iTime;\r\nuniform vec3  iResolution;\r\nuniform float uScale;\r\n\r\nuniform vec2  uGridMul;\r\nuniform float uDigitSize;\r\nuniform float uScanlineIntensity;\r\nuniform float uGlitchAmount;\r\nuniform float uFlickerAmount;\r\nuniform float uNoiseAmp;\r\nuniform float uChromaticAberration;\r\nuniform float uDither;\r\nuniform float uCurvature;\r\nuniform vec3  uTint;\r\nuniform vec2  uMouse;\r\nuniform float uMouseStrength;\r\nuniform float uUseMouse;\r\nuniform float uPageLoadProgress;\r\nuniform float uUsePageLoadAnimation;\r\nuniform float uBrightness;\r\n\r\nfloat time;\r\n\r\nfloat hash21(vec2 p){\r\n  p = fract(p * 234.56);\r\n  p += dot(p, p + 34.56);\r\n  return fract(p.x * p.y);\r\n}\r\n\r\nfloat noise(vec2 p)\r\n{\r\n  return sin(p.x * 10.0) * sin(p.y * (3.0 + sin(time * 0.090909))) + 0.2; \r\n}\r\n\r\nmat2 rotate(float angle)\r\n{\r\n  float c = cos(angle);\r\n  float s = sin(angle);\r\n  return mat2(c, -s, s, c);\r\n}\r\n\r\nfloat fbm(vec2 p)\r\n{\r\n  p *= 1.1;\r\n  float f = 0.0;\r\n  float amp = 0.5 * uNoiseAmp;\r\n  \r\n  mat2 modify0 = rotate(time * 0.02);\r\n  f += amp * noise(p);\r\n  p = modify0 * p * 2.0;\r\n  amp *= 0.454545; // 1/2.2\r\n  \r\n  mat2 modify1 = rotate(time * 0.02);\r\n  f += amp * noise(p);\r\n  p = modify1 * p * 2.0;\r\n  amp *= 0.454545;\r\n  \r\n  mat2 modify2 = rotate(time * 0.08);\r\n  f += amp * noise(p);\r\n  \r\n  return f;\r\n}\r\n\r\nfloat pattern(vec2 p, out vec2 q, out vec2 r) {\r\n  vec2 offset1 = vec2(1.0);\r\n  vec2 offset0 = vec2(0.0);\r\n  mat2 rot01 = rotate(0.1 * time);\r\n  mat2 rot1 = rotate(0.1);\r\n  \r\n  q = vec2(fbm(p + offset1), fbm(rot01 * p + offset1));\r\n  r = vec2(fbm(rot1 * q + offset0), fbm(q + offset0));\r\n  return fbm(p + r);\r\n}\r\n\r\nfloat digit(vec2 p){\r\n    vec2 grid = uGridMul * 15.0;\r\n    vec2 s = floor(p * grid) / grid;\r\n    p = p * grid;\r\n    vec2 q, r;\r\n    float intensity = pattern(s * 0.1, q, r) * 1.3 - 0.03;\r\n    \r\n    if(uUseMouse > 0.5){\r\n        vec2 mouseWorld = uMouse * uScale;\r\n        float distToMouse = distance(s, mouseWorld);\r\n        float mouseInfluence = exp(-distToMouse * 8.0) * uMouseStrength * 10.0;\r\n        intensity += mouseInfluence;\r\n        \r\n        float ripple = sin(distToMouse * 20.0 - iTime * 5.0) * 0.1 * mouseInfluence;\r\n        intensity += ripple;\r\n    }\r\n    \r\n    if(uUsePageLoadAnimation > 0.5){\r\n        float cellRandom = fract(sin(dot(s, vec2(12.9898, 78.233))) * 43758.5453);\r\n        float cellDelay = cellRandom * 0.8;\r\n        float cellProgress = clamp((uPageLoadProgress - cellDelay) / 0.2, 0.0, 1.0);\r\n        \r\n        float fadeAlpha = smoothstep(0.0, 1.0, cellProgress);\r\n        intensity *= fadeAlpha;\r\n    }\r\n    \r\n    p = fract(p);\r\n    p *= uDigitSize;\r\n    \r\n    float px5 = p.x * 5.0;\r\n    float py5 = (1.0 - p.y) * 5.0;\r\n    float x = fract(px5);\r\n    float y = fract(py5);\r\n    \r\n    float i = floor(py5) - 2.0;\r\n    float j = floor(px5) - 2.0;\r\n    float n = i * i + j * j;\r\n    float f = n * 0.0625;\r\n    \r\n    float isOn = step(0.1, intensity - f);\r\n    float brightness = isOn * (0.2 + y * 0.8) * (0.75 + x * 0.25);\r\n    \r\n    return step(0.0, p.x) * step(p.x, 1.0) * step(0.0, p.y) * step(p.y, 1.0) * brightness;\r\n}\r\n\r\nfloat onOff(float a, float b, float c)\r\n{\r\n  return step(c, sin(iTime + a * cos(iTime * b))) * uFlickerAmount;\r\n}\r\n\r\nfloat displace(vec2 look)\r\n{\r\n    float y = look.y - mod(iTime * 0.25, 1.0);\r\n    float window = 1.0 / (1.0 + 50.0 * y * y);\r\n    return sin(look.y * 20.0 + iTime) * 0.0125 * onOff(4.0, 2.0, 0.8) * (1.0 + cos(iTime * 60.0)) * window;\r\n}\r\n\r\nvec3 getColor(vec2 p){\r\n    \r\n    float bar = step(mod(p.y + time * 20.0, 1.0), 0.2) * 0.4 + 1.0; // more efficient than ternary\r\n    bar *= uScanlineIntensity;\r\n    \r\n    float displacement = displace(p);\r\n    p.x += displacement;\r\n\r\n    if (uGlitchAmount != 1.0) {\r\n      float extra = displacement * (uGlitchAmount - 1.0);\r\n      p.x += extra;\r\n    }\r\n\r\n    float middle = digit(p);\r\n    \r\n    const float off = 0.002;\r\n    float sum = digit(p + vec2(-off, -off)) + digit(p + vec2(0.0, -off)) + digit(p + vec2(off, -off)) +\r\n                digit(p + vec2(-off, 0.0)) + digit(p + vec2(0.0, 0.0)) + digit(p + vec2(off, 0.0)) +\r\n                digit(p + vec2(-off, off)) + digit(p + vec2(0.0, off)) + digit(p + vec2(off, off));\r\n    \r\n    vec3 baseColor = vec3(0.9) * middle + sum * 0.1 * vec3(1.0) * bar;\r\n    return baseColor;\r\n}\r\n\r\nvec2 barrel(vec2 uv){\r\n  vec2 c = uv * 2.0 - 1.0;\r\n  float r2 = dot(c, c);\r\n  c *= 1.0 + uCurvature * r2;\r\n  return c * 0.5 + 0.5;\r\n}\r\n\r\nvoid main() {\r\n    time = iTime * 0.333333;\r\n    vec2 uv = vUv;\r\n\r\n    if(uCurvature != 0.0){\r\n      uv = barrel(uv);\r\n    }\r\n    \r\n    vec2 p = uv * uScale;\r\n    vec3 col = getColor(p);\r\n\r\n    if(uChromaticAberration != 0.0){\r\n      vec2 ca = vec2(uChromaticAberration) / iResolution.xy;\r\n      col.r = getColor(p + ca).r;\r\n      col.b = getColor(p - ca).b;\r\n    }\r\n\r\n    col *= uTint;\r\n    col *= uBrightness;\r\n\r\n    if(uDither > 0.0){\r\n      float rnd = hash21(gl_FragCoord.xy);\r\n      col += (rnd - 0.5) * (uDither * 0.003922);\r\n    }\r\n\r\n    gl_FragColor = vec4(col, 1.0);\r\n}\r\n`;\r\n\r\nfunction hexToRgb(hex) {\r\n  let h = hex.replace(\"#\", \"\").trim();\r\n  if (h.length === 3)\r\n    h = h\r\n      .split(\"\")\r\n      .map((c) => c + c)\r\n      .join(\"\");\r\n  const num = parseInt(h, 16);\r\n  return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\r\n}\r\n\r\nexport default function FaultyTerminal({\r\n  scale = 1,\r\n  gridMul = [2, 1],\r\n  digitSize = 1.5,\r\n  timeScale = 0.3,\r\n  pause = false,\r\n  scanlineIntensity = 0.3,\r\n  glitchAmount = 1,\r\n  flickerAmount = 1,\r\n  noiseAmp = 0,\r\n  chromaticAberration = 0,\r\n  dither = 0,\r\n  curvature = 0.2,\r\n  tint = \"#ffffff\",\r\n  mouseReact = true,\r\n  mouseStrength = 0.2,\r\n  dpr = Math.min(window.devicePixelRatio || 1, 2),\r\n  pageLoadAnimation = true,\r\n  brightness = 1,\r\n  className,\r\n  style,\r\n  backgroundColor = \"#000000\",\r\n  ...rest\r\n}) {\r\n  const containerRef = useRef(null);\r\n  const programRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const mouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const smoothMouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const frozenTimeRef = useRef(0);\r\n  const rafRef = useRef(0);\r\n  const loadAnimationStartRef = useRef(0);\r\n  const timeOffsetRef = useRef(Math.random() * 100);\r\n\r\n  const tintVec = useMemo(() => hexToRgb(tint), [tint]);\r\n\r\n  const ditherValue = useMemo(() => (typeof dither === \"boolean\" ? (dither ? 1 : 0) : dither), [dither]);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    const ctn = containerRef.current;\r\n    if (!ctn) return;\r\n    const rect = ctn.getBoundingClientRect();\r\n    const x = (e.clientX - rect.left) / rect.width;\r\n    const y = 1 - (e.clientY - rect.top) / rect.height;\r\n    mouseRef.current = { x, y };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const ctn = containerRef.current;\r\n    if (!ctn) return;\r\n\r\n    const renderer = new Renderer({ dpr });\r\n    rendererRef.current = renderer;\r\n    const gl = renderer.gl;\r\n\r\n    // Convierte el color hex a RGB\r\n    function hexToRgbArray(hex) {\r\n      let h = hex.replace(\"#\", \"\").trim();\r\n      if (h.length === 3)\r\n        h = h\r\n          .split(\"\")\r\n          .map((c) => c + c)\r\n          .join(\"\");\r\n      const num = parseInt(h, 16);\r\n      return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\r\n    }\r\n    const bgRgb = hexToRgbArray(backgroundColor);\r\n\r\n    gl.clearColor(bgRgb[0], bgRgb[1], bgRgb[2], 1); // <-- usa el color de fondo\r\n\r\n    const geometry = new Triangle(gl);\r\n\r\n    const program = new Program(gl, {\r\n      vertex: vertexShader,\r\n      fragment: fragmentShader,\r\n      uniforms: {\r\n        iTime: { value: 0 },\r\n        iResolution: {\r\n          value: new Color(gl.canvas.width, gl.canvas.height, gl.canvas.width / gl.canvas.height),\r\n        },\r\n        uScale: { value: scale },\r\n\r\n        uGridMul: { value: new Float32Array(gridMul) },\r\n        uDigitSize: { value: digitSize },\r\n        uScanlineIntensity: { value: scanlineIntensity },\r\n        uGlitchAmount: { value: glitchAmount },\r\n        uFlickerAmount: { value: flickerAmount },\r\n        uNoiseAmp: { value: noiseAmp },\r\n        uChromaticAberration: { value: chromaticAberration },\r\n        uDither: { value: ditherValue },\r\n        uCurvature: { value: curvature },\r\n        uTint: { value: new Color(tintVec[0], tintVec[1], tintVec[2]) },\r\n        uMouse: {\r\n          value: new Float32Array([smoothMouseRef.current.x, smoothMouseRef.current.y]),\r\n        },\r\n        uMouseStrength: { value: mouseStrength },\r\n        uUseMouse: { value: mouseReact ? 1 : 0 },\r\n        uPageLoadProgress: { value: pageLoadAnimation ? 0 : 1 },\r\n        uUsePageLoadAnimation: { value: pageLoadAnimation ? 1 : 0 },\r\n        uBrightness: { value: brightness },\r\n      },\r\n    });\r\n    programRef.current = program;\r\n\r\n    const mesh = new Mesh(gl, { geometry, program });\r\n\r\n    function resize() {\r\n      if (!ctn || !renderer) return;\r\n      renderer.setSize(ctn.offsetWidth, ctn.offsetHeight);\r\n      program.uniforms.iResolution.value = new Color(\r\n        gl.canvas.width,\r\n        gl.canvas.height,\r\n        gl.canvas.width / gl.canvas.height\r\n      );\r\n    }\r\n\r\n    const resizeObserver = new ResizeObserver(() => resize());\r\n    resizeObserver.observe(ctn);\r\n    resize();\r\n\r\n    const update = (t) => {\r\n      rafRef.current = requestAnimationFrame(update);\r\n\r\n      if (pageLoadAnimation && loadAnimationStartRef.current === 0) {\r\n        loadAnimationStartRef.current = t;\r\n      }\r\n\r\n      if (!pause) {\r\n        const elapsed = (t * 0.001 + timeOffsetRef.current) * timeScale;\r\n        program.uniforms.iTime.value = elapsed;\r\n        frozenTimeRef.current = elapsed;\r\n      } else {\r\n        program.uniforms.iTime.value = frozenTimeRef.current;\r\n      }\r\n\r\n      if (pageLoadAnimation && loadAnimationStartRef.current > 0) {\r\n        const animationDuration = 2000;\r\n        const animationElapsed = t - loadAnimationStartRef.current;\r\n        const progress = Math.min(animationElapsed / animationDuration, 1);\r\n        program.uniforms.uPageLoadProgress.value = progress;\r\n      }\r\n\r\n      if (mouseReact) {\r\n        const dampingFactor = 0.08;\r\n        const smoothMouse = smoothMouseRef.current;\r\n        const mouse = mouseRef.current;\r\n        smoothMouse.x += (mouse.x - smoothMouse.x) * dampingFactor;\r\n        smoothMouse.y += (mouse.y - smoothMouse.y) * dampingFactor;\r\n\r\n        const mouseUniform = program.uniforms.uMouse.value;\r\n        mouseUniform[0] = smoothMouse.x;\r\n        mouseUniform[1] = smoothMouse.y;\r\n      }\r\n\r\n      renderer.render({ scene: mesh });\r\n    };\r\n    rafRef.current = requestAnimationFrame(update);\r\n    ctn.appendChild(gl.canvas);\r\n\r\n    if (mouseReact) ctn.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(rafRef.current);\r\n      resizeObserver.disconnect();\r\n      if (mouseReact) ctn.removeEventListener(\"mousemove\", handleMouseMove);\r\n      if (gl.canvas.parentElement === ctn) ctn.removeChild(gl.canvas);\r\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\r\n      loadAnimationStartRef.current = 0;\r\n      timeOffsetRef.current = Math.random() * 100;\r\n    };\r\n  }, [\r\n    dpr,\r\n    pause,\r\n    timeScale,\r\n    scale,\r\n    gridMul,\r\n    digitSize,\r\n    scanlineIntensity,\r\n    glitchAmount,\r\n    flickerAmount,\r\n    noiseAmp,\r\n    chromaticAberration,\r\n    ditherValue,\r\n    curvature,\r\n    tintVec,\r\n    mouseReact,\r\n    mouseStrength,\r\n    pageLoadAnimation,\r\n    brightness,\r\n    backgroundColor,\r\n    handleMouseMove,\r\n  ]);\r\n\r\n  return <div ref={containerRef} className={`faulty-terminal-container ${className}`} style={style} {...rest} />;\r\n}\r\n","\"use client\";\r\nimport { useRef, useEffect, useCallback, useMemo } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\r\n\r\nimport \"./DotGrid.css\";\r\n\r\ngsap.registerPlugin(InertiaPlugin);\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastCall = 0;\r\n  return function (...args) {\r\n    const now = performance.now();\r\n    if (now - lastCall >= limit) {\r\n      lastCall = now;\r\n      func.apply(this, args);\r\n    }\r\n  };\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  const m = hex.match(/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i);\r\n  if (!m) return { r: 0, g: 0, b: 0 };\r\n  return {\r\n    r: parseInt(m[1], 16),\r\n    g: parseInt(m[2], 16),\r\n    b: parseInt(m[3], 16),\r\n  };\r\n}\r\n\r\nconst DotGrid = ({\r\n  dotSize = 16,\r\n  gap = 32,\r\n  baseColor = \"#5227FF\",\r\n  activeColor = \"#5227FF\",\r\n  proximity = 150,\r\n  speedTrigger = 100,\r\n  shockRadius = 250,\r\n  shockStrength = 5,\r\n  maxSpeed = 5000,\r\n  resistance = 750,\r\n  returnDuration = 1.5,\r\n  className = \"\",\r\n  style,\r\n}) => {\r\n  const wrapperRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const dotsRef = useRef([]);\r\n  const pointerRef = useRef({\r\n    x: 0,\r\n    y: 0,\r\n    vx: 0,\r\n    vy: 0,\r\n    speed: 0,\r\n    lastTime: 0,\r\n    lastX: 0,\r\n    lastY: 0,\r\n  });\r\n\r\n  const baseRgb = useMemo(() => hexToRgb(baseColor), [baseColor]);\r\n  const activeRgb = useMemo(() => hexToRgb(activeColor), [activeColor]);\r\n\r\n  const circlePath = useMemo(() => {\r\n    if (typeof window === \"undefined\" || !window.Path2D) return null;\r\n\r\n    const p = new window.Path2D();\r\n    p.arc(0, 0, dotSize / 2, 0, Math.PI * 2);\r\n    return p;\r\n  }, [dotSize]);\r\n\r\n  const buildGrid = useCallback(() => {\r\n    const wrap = wrapperRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!wrap || !canvas) return;\r\n\r\n    const { width, height } = wrap.getBoundingClientRect();\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    canvas.width = width * dpr;\r\n    canvas.height = height * dpr;\r\n    canvas.style.width = `${width}px`;\r\n    canvas.style.height = `${height}px`;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) ctx.scale(dpr, dpr);\r\n\r\n    const cols = Math.floor((width + gap) / (dotSize + gap));\r\n    const rows = Math.floor((height + gap) / (dotSize + gap));\r\n    const cell = dotSize + gap;\r\n\r\n    const gridW = cell * cols - gap;\r\n    const gridH = cell * rows - gap;\r\n\r\n    const extraX = width - gridW;\r\n    const extraY = height - gridH;\r\n\r\n    const startX = extraX / 2 + dotSize / 2;\r\n    const startY = extraY / 2 + dotSize / 2;\r\n\r\n    const dots = [];\r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < cols; x++) {\r\n        const cx = startX + x * cell;\r\n        const cy = startY + y * cell;\r\n        dots.push({ cx, cy, xOffset: 0, yOffset: 0, _inertiaApplied: false });\r\n      }\r\n    }\r\n    dotsRef.current = dots;\r\n  }, [dotSize, gap]);\r\n\r\n  useEffect(() => {\r\n    if (!circlePath) return;\r\n\r\n    let rafId;\r\n    const proxSq = proximity * proximity;\r\n\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const { x: px, y: py } = pointerRef.current;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const ox = dot.cx + dot.xOffset;\r\n        const oy = dot.cy + dot.yOffset;\r\n        const dx = dot.cx - px;\r\n        const dy = dot.cy - py;\r\n        const dsq = dx * dx + dy * dy;\r\n\r\n        let style = baseColor;\r\n        if (dsq <= proxSq) {\r\n          const dist = Math.sqrt(dsq);\r\n          const t = 1 - dist / proximity;\r\n          const r = Math.round(baseRgb.r + (activeRgb.r - baseRgb.r) * t);\r\n          const g = Math.round(baseRgb.g + (activeRgb.g - baseRgb.g) * t);\r\n          const b = Math.round(baseRgb.b + (activeRgb.b - baseRgb.b) * t);\r\n          style = `rgb(${r},${g},${b})`;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(ox, oy);\r\n        ctx.fillStyle = style;\r\n        ctx.fill(circlePath);\r\n        ctx.restore();\r\n      }\r\n\r\n      rafId = requestAnimationFrame(draw);\r\n    };\r\n\r\n    draw();\r\n    return () => cancelAnimationFrame(rafId);\r\n  }, [proximity, baseColor, activeRgb, baseRgb, circlePath]);\r\n\r\n  useEffect(() => {\r\n    buildGrid();\r\n    let ro = null;\r\n    if (\"ResizeObserver\" in window) {\r\n      ro = new ResizeObserver(buildGrid);\r\n      wrapperRef.current && ro.observe(wrapperRef.current);\r\n    } else {\r\n      window.addEventListener(\"resize\", buildGrid);\r\n    }\r\n    return () => {\r\n      if (ro) ro.disconnect();\r\n      else window.removeEventListener(\"resize\", buildGrid);\r\n    };\r\n  }, [buildGrid]);\r\n\r\n  useEffect(() => {\r\n    const onMove = (e) => {\r\n      const now = performance.now();\r\n      const pr = pointerRef.current;\r\n      const dt = pr.lastTime ? now - pr.lastTime : 16;\r\n      const dx = e.clientX - pr.lastX;\r\n      const dy = e.clientY - pr.lastY;\r\n      let vx = (dx / dt) * 1000;\r\n      let vy = (dy / dt) * 1000;\r\n      let speed = Math.hypot(vx, vy);\r\n      if (speed > maxSpeed) {\r\n        const scale = maxSpeed / speed;\r\n        vx *= scale;\r\n        vy *= scale;\r\n        speed = maxSpeed;\r\n      }\r\n      pr.lastTime = now;\r\n      pr.lastX = e.clientX;\r\n      pr.lastY = e.clientY;\r\n      pr.vx = vx;\r\n      pr.vy = vy;\r\n      pr.speed = speed;\r\n\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      pr.x = e.clientX - rect.left;\r\n      pr.y = e.clientY - rect.top;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - pr.x, dot.cy - pr.y);\r\n        if (speed > speedTrigger && dist < proximity && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const pushX = dot.cx - pr.x + vx * 0.005;\r\n          const pushY = dot.cy - pr.y + vy * 0.005;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const onClick = (e) => {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const cx = e.clientX - rect.left;\r\n      const cy = e.clientY - rect.top;\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - cx, dot.cy - cy);\r\n        if (dist < shockRadius && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const falloff = Math.max(0, 1 - dist / shockRadius);\r\n          const pushX = (dot.cx - cx) * shockStrength * falloff;\r\n          const pushY = (dot.cy - cy) * shockStrength * falloff;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const throttledMove = throttle(onMove, 50);\r\n    window.addEventListener(\"mousemove\", throttledMove, { passive: true });\r\n    window.addEventListener(\"click\", onClick);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", throttledMove);\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [maxSpeed, speedTrigger, proximity, resistance, returnDuration, shockRadius, shockStrength]);\r\n\r\n  return (\r\n    <section className={`dot-grid ${className}`} style={style}>\r\n      <div ref={wrapperRef} className=\"dot-grid__wrap\">\r\n        <canvas ref={canvasRef} className=\"dot-grid__canvas\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DotGrid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeroWrapper = styled.section`\r\n  position: relative;\r\n  scroll-snap-align: start;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const HeroBackground = styled.div`\r\n  position: absolute;\r\n  inset: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 0;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport const HeroContent = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import FaultyTerminalBackground from \"../Backgrounds/FaultyTerminal/faultyTerminal\";\r\nimport DotGridBackground from \"../Backgrounds/DotGrid/DotGrid\";\r\nimport { HeroWrapper, HeroBackground, HeroContent } from \"./HeroSection\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface HeroSectionProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const HeroSectionFaultyTerminal = ({ children }: HeroSectionProps) => (\r\n  <HeroWrapper>\r\n    <HeroBackground>\r\n      <FaultyTerminalBackground\r\n        className=\"\"\r\n        tint=\"#333333\"\r\n        backgroundColor=\"#000000ff\"\r\n        scale={0.7}\r\n        digitSize={2}\r\n        noiseAmp={1}\r\n        brightness={0.6}\r\n        scanlineIntensity={0.5}\r\n        curvature={0.2}\r\n        mouseReact={true}\r\n        mouseStrength={2}\r\n        pageLoadAnimation={true}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </HeroBackground>\r\n    <HeroContent>{children}</HeroContent>\r\n  </HeroWrapper>\r\n);\r\n\r\nexport const HeroSectionDotGrid = ({ children }: HeroSectionProps) => (\r\n  <HeroWrapper>\r\n    <HeroBackground>\r\n      <DotGridBackground\r\n        className=\"\"\r\n        dotSize={10}\r\n        gap={15}\r\n        baseColor=\"#33333338\"\r\n        activeColor=\"#5F0807\"\r\n        proximity={120}\r\n        shockRadius={250}\r\n        shockStrength={5}\r\n        resistance={750}\r\n        returnDuration={1.5}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </HeroBackground>\r\n    <HeroContent>{children}</HeroContent>\r\n  </HeroWrapper>\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport { darken, lighten } from \"./utils\";\r\n\r\nconst DomeCamera = ({\r\n  cameraColor = \"#2a2a2a\",\r\n  lensColor = \"#000000\",\r\n  statusColor = \"#00ff40\",\r\n  label = \"Cámara Dome PTZ\",\r\n  showLaser = true,\r\n  mounted = true, // Si está montada en pared/techo\r\n}) => {\r\n  const cameraLensRef = useRef(null);\r\n  const statusLightRef = useRef(null);\r\n  const lensInnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!cameraLensRef.current || !lensInnerRef.current) return;\r\n\r\n      // Obtén el centro de la cámara\r\n      const rect = cameraLensRef.current.getBoundingClientRect();\r\n      const centerX = rect.left + rect.width / 2;\r\n      const centerY = rect.top + rect.height / 2;\r\n\r\n      // Offset del mouse respecto al centro\r\n      const offsetX = e.clientX - centerX;\r\n      const offsetY = e.clientY - centerY;\r\n\r\n      // Máximo desplazamiento en px\r\n      const maxMove = 8;\r\n\r\n      // Normaliza el movimiento\r\n      const moveX = Math.max(-maxMove, Math.min(maxMove, offsetX / 8));\r\n      const moveY = Math.max(-maxMove, Math.min(maxMove, offsetY / 8));\r\n\r\n      // Aplica el movimiento a la pupila\r\n      lensInnerRef.current.style.transform = `translate(-50%, -50%) translate(${moveX}px, ${moveY}px)`;\r\n\r\n      // Efecto de parpadeo aleatorio\r\n      if (Math.random() > 0.995 && statusLightRef.current) {\r\n        statusLightRef.current.style.animation = \"none\";\r\n        setTimeout(() => {\r\n          if (statusLightRef.current) {\r\n            statusLightRef.current.style.animation = \"pulse 2s infinite\";\r\n          }\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    // Efecto de enfoque aleatorio\r\n    const focusInterval = setInterval(() => {\r\n      if (lensInnerRef.current) {\r\n        lensInnerRef.current.style.transition = \"all 0.5s ease\";\r\n        const size = 25 + Math.random() * 5;\r\n        lensInnerRef.current.style.width = `${size}px`;\r\n        lensInnerRef.current.style.height = `${size}px`;\r\n\r\n        setTimeout(() => {\r\n          if (lensInnerRef.current) {\r\n            lensInnerRef.current.style.width = \"25px\";\r\n            lensInnerRef.current.style.height = \"25px\";\r\n          }\r\n        }, 500);\r\n      }\r\n    }, 3000);\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      clearInterval(focusInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <CameraContainer>\r\n      {mounted && <MountingBracket />}\r\n      <DomeCameraWrapper>\r\n        <CameraDome cameraColor={cameraColor}>\r\n          <CameraLens ref={cameraLensRef} lensColor={lensColor}>\r\n            <LensGlass>\r\n              <LensReflection />\r\n              <LensInner ref={lensInnerRef} />\r\n            </LensGlass>\r\n          </CameraLens>\r\n          <StatusLights>\r\n            <CameraStatus ref={statusLightRef} statusColor={statusColor} />\r\n            <InfraredLight />\r\n            <InfraredLight />\r\n          </StatusLights>\r\n          {showLaser && <ScanEffect />}\r\n        </CameraDome>\r\n        <CameraLabel>{label}</CameraLabel>\r\n      </DomeCameraWrapper>\r\n    </CameraContainer>\r\n  );\r\n};\r\n\r\n// Animaciones\r\nconst scanAnimation = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst pulseAnimation = keyframes`\r\n  0% { opacity: 0.3; }\r\n  50% { opacity: 1; }\r\n  100% { opacity: 0.3; }\r\n`;\r\n\r\nconst infraredPulse = keyframes`\r\n  0% { opacity: 0.1; }\r\n  50% { opacity: 0.3; }\r\n  100% { opacity: 0.1; }\r\n`;\r\n\r\n// Componentes estilizados\r\nconst CameraContainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 400px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    height: 500px;\r\n  }\r\n`;\r\n\r\nconst MountingBracket = styled.div`\r\n  width: 120px;\r\n  height: 20px;\r\n  background: linear-gradient(to bottom, #1a1a1a, #0a0a0a);\r\n  border-radius: 3px 3px 0 0;\r\n  margin-bottom: -5px;\r\n  position: relative;\r\n  z-index: 2;\r\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.5);\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -5px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 30px;\r\n    height: 5px;\r\n    background: #333;\r\n    border-radius: 0 0 3px 3px;\r\n  }\r\n`;\r\n\r\nconst DomeCameraWrapper = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  margin-bottom: 20px;\r\n  perspective: 500px;\r\n`;\r\n\r\nconst CameraDome = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  background: ${({ cameraColor }) => cameraColor};\r\n  border-radius: 50%;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.6), inset 0 -6px 18px ${({ cameraColor }) => darken(cameraColor, 0.3)},\r\n    inset 0 6px 18px ${({ cameraColor }) => lighten(cameraColor, 0.1)}, 0 0 35px rgba(161, 161, 161, 0.5);\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 10%;\r\n    right: 10%;\r\n    bottom: 10%;\r\n    border: 2px solid rgba(255, 255, 255, 0.05);\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst CameraLens = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 50%;\r\n  height: 50%;\r\n  background: ${({ lensColor }) => lensColor};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 0 0 5px rgba(50, 50, 50, 0.8), inset 0 0 25px rgba(0, 0, 0, 0.9);\r\n  transition: transform 0.1s ease;\r\n  transform-style: preserve-3d;\r\n  z-index: 2;\r\n`;\r\n\r\nconst LensGlass = styled.div`\r\n  width: 85%;\r\n  height: 85%;\r\n  background: radial-gradient(circle at 30% 30%, #3b4359 0%, #0e121b 90%);\r\n  border-radius: 50%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst LensReflection = styled.div`\r\n  position: absolute;\r\n  width: 15px;\r\n  height: 15px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-radius: 50%;\r\n  top: 20%;\r\n  right: 20%;\r\n`;\r\n\r\nconst LensInner = styled.div`\r\n  position: absolute;\r\n  width: 35%;\r\n  height: 35%;\r\n  background: radial-gradient(circle, #0a0e17 10%, #1e2538 70%);\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.3s ease-out;\r\n`;\r\n\r\nconst StatusLights = styled.div`\r\n  position: absolute;\r\n  bottom: 15px;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst CameraStatus = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background: ${({ statusColor }) => statusColor};\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 8px ${({ statusColor }) => statusColor};\r\n  animation: pulse 2s infinite;\r\n\r\n  @keyframes pulse {\r\n    0% {\r\n      opacity: 0.3;\r\n    }\r\n    50% {\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      opacity: 0.3;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfraredLight = styled.div`\r\n  width: 6px;\r\n  height: 6px;\r\n  background: #ff0037;\r\n  border-radius: 50%;\r\n  opacity: 0.2;\r\n  animation: ${infraredPulse} 1.5s infinite;\r\n\r\n  &:nth-child(2) {\r\n    animation-delay: 0.5s;\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    animation-delay: 1s;\r\n  }\r\n`;\r\n\r\nconst CameraLabel = styled.div`\r\n  color: #c3d4ec;\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst ScanEffect = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(to bottom, transparent, rgba(59, 130, 246, 0.6), transparent);\r\n    transform-origin: center;\r\n    animation: ${scanAnimation} 4s linear infinite;\r\n  }\r\n`;\r\n\r\nexport default DomeCamera;\r\n","export function darken(hex: string, amount: number): string {\r\n  let c = hex.replace(\"#\", \"\");\r\n  if (c.length === 3)\r\n    c = c\r\n      .split(\"\")\r\n      .map((x) => x + x)\r\n      .join(\"\");\r\n  let num = parseInt(c, 16);\r\n  let r = Math.max(0, ((num >> 16) & 255) - Math.round(255 * amount));\r\n  let g = Math.max(0, ((num >> 8) & 255) - Math.round(255 * amount));\r\n  let b = Math.max(0, (num & 255) - Math.round(255 * amount));\r\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n}\r\n\r\nexport function lighten(hex: string, amount: number): string {\r\n  let c = hex.replace(\"#\", \"\");\r\n  if (c.length === 3)\r\n    c = c\r\n      .split(\"\")\r\n      .map((x) => x + x)\r\n      .join(\"\");\r\n  let num = parseInt(c, 16);\r\n  let r = Math.min(255, ((num >> 16) & 255) + Math.round(255 * amount));\r\n  let g = Math.min(255, ((num >> 8) & 255) + Math.round(255 * amount));\r\n  let b = Math.min(255, (num & 255) + Math.round(255 * amount));\r\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n}\r\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport { ScrollSnapContainer } from \"../../components/ContentBlock/styles\";\r\nimport { HeroSectionFaultyTerminal, HeroSectionDotGrid } from \"../../components/HeroSection\";\r\nimport SecurityCameraAnimated from \"../../components/Elements/SecurityCamera/SecurityCameraAnimated\";\r\nimport DomeCamera from \"../../components/Elements/SecurityCamera/DomeCamera\";\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() =>\r\n  import(\"../../components/ContentBlock\").then((module) => ({\r\n    default: module.default as React.ComponentType<any>,\r\n  }))\r\n);\r\n\r\nconst Home = () => {\r\n  return (\r\n    <ScrollSnapContainer>\r\n      <ScrollToTop />\r\n      <HeroSectionFaultyTerminal>\r\n        <ContentBlock\r\n          direction=\"right\"\r\n          title={IntroContent.title}\r\n          content={IntroContent.text}\r\n          button={IntroContent.button}\r\n          icon={\r\n            <DomeCamera\r\n              cameraColor=\"#333333\"\r\n              lensColor=\"#000000ff\"\r\n              statusColor=\"#00ff40\"\r\n              label=\"\"\r\n              showLaser={false}\r\n              mounted={false}\r\n            />\r\n          }\r\n          id=\"intro\"\r\n        />\r\n      </HeroSectionFaultyTerminal>\r\n      <HeroSectionDotGrid>\r\n        <MiddleBlock\r\n          title={MiddleBlockContent.title}\r\n          content={MiddleBlockContent.text}\r\n          button={MiddleBlockContent.button}\r\n        />\r\n      </HeroSectionDotGrid>\r\n\r\n      <HeroSectionDotGrid>\r\n        <ContentBlock\r\n          direction=\"left\"\r\n          title={AboutContent.title}\r\n          content={AboutContent.text}\r\n          section={AboutContent.section}\r\n          icon=\"graphs.svg\"\r\n          id=\"about\"\r\n        />\r\n      </HeroSectionDotGrid>\r\n      <ContentBlock\r\n        direction=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"product-launch.svg\"\r\n        id=\"mission\"\r\n      />\r\n      <ContentBlock\r\n        direction=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"waving.svg\"\r\n        id=\"product\"\r\n      />\r\n      <Contact title={ContactContent.title} content={ContactContent.text} id=\"contact\" />\r\n    </ScrollSnapContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["ScrollSnapContainer","styled","ContentSection","Content","StyledRow","Row","_ref","direction","ContentWrapper","ServiceWrapper","MinTitle","MinPara","ButtonWrapper","FaultyTerminal","scale","gridMul","digitSize","timeScale","pause","scanlineIntensity","glitchAmount","flickerAmount","noiseAmp","chromaticAberration","dither","curvature","tint","mouseReact","mouseStrength","dpr","Math","min","window","devicePixelRatio","pageLoadAnimation","brightness","className","style","backgroundColor","rest","containerRef","useRef","programRef","rendererRef","mouseRef","x","y","smoothMouseRef","frozenTimeRef","rafRef","loadAnimationStartRef","timeOffsetRef","random","tintVec","useMemo","hex","h","replace","trim","length","split","map","c","join","num","parseInt","hexToRgb","ditherValue","handleMouseMove","useCallback","e","ctn","current","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","useEffect","renderer","Renderer","gl","bgRgb","hexToRgbArray","clearColor","geometry","Triangle","program","Program","vertex","fragment","uniforms","iTime","value","iResolution","Color","canvas","uScale","uGridMul","Float32Array","uDigitSize","uScanlineIntensity","uGlitchAmount","uFlickerAmount","uNoiseAmp","uChromaticAberration","uDither","uCurvature","uTint","uMouse","uMouseStrength","uUseMouse","uPageLoadProgress","uUsePageLoadAnimation","uBrightness","mesh","Mesh","resize","setSize","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","update","t","requestAnimationFrame","elapsed","animationDuration","animationElapsed","progress","dampingFactor","smoothMouse","mouse","mouseUniform","render","scene","appendChild","addEventListener","_gl$getExtension","cancelAnimationFrame","disconnect","removeEventListener","parentElement","removeChild","getExtension","loseContext","_jsx","ref","gsap","registerPlugin","InertiaPlugin","throttle","func","limit","lastCall","now","performance","_len","arguments","args","Array","_key","apply","this","m","match","r","g","b","dotSize","gap","baseColor","activeColor","proximity","speedTrigger","shockRadius","shockStrength","maxSpeed","resistance","returnDuration","wrapperRef","canvasRef","dotsRef","pointerRef","vx","vy","speed","lastTime","lastX","lastY","baseRgb","activeRgb","circlePath","Path2D","p","arc","PI","buildGrid","wrap","ctx","getContext","cols","floor","rows","cell","startX","startY","dots","cx","cy","push","xOffset","yOffset","_inertiaApplied","rafId","proxSq","draw","clearRect","px","py","dot","ox","oy","dx","dy","dsq","sqrt","round","save","translate","fillStyle","fill","restore","ro","onClick","dist","hypot","killTweensOf","falloff","max","pushX","pushY","to","inertia","onComplete","duration","ease","throttledMove","pr","dt","passive","children","HeroWrapper","section","HeroBackground","div","HeroContent","HeroSectionFaultyTerminal","_jsxs","FaultyTerminalBackground","HeroSectionDotGrid","_ref2","DotGridBackground","scanAnimation","keyframes","infraredPulse","CameraContainer","MountingBracket","DomeCameraWrapper","CameraDome","cameraColor","_ref3","amount","toString","slice","darken","_ref4","lighten","CameraLens","_ref5","lensColor","LensGlass","LensReflection","LensInner","StatusLights","CameraStatus","_ref6","statusColor","_ref7","InfraredLight","CameraLabel","ScanEffect","label","showLaser","mounted","cameraLensRef","statusLightRef","lensInnerRef","centerX","centerY","offsetX","offsetY","moveX","moveY","transform","animation","setTimeout","focusInterval","setInterval","transition","size","document","clearInterval","Contact","lazy","MiddleBlock","ScrollToTop","ContentBlock","then","module","default","Home","title","IntroContent","content","button","icon","DomeCamera","id","MiddleBlockContent","AboutContent","MissionContent","ProductContent","ContactContent"],"sourceRoot":""}