{"version":3,"file":"static/js/416.d8a4f11c.chunk.js","mappings":"kNAEO,MAAMA,GAAqBC,EAAAA,EAAAA,IAAO,UAAPA,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mQActCC,GAAUH,EAAAA,EAAAA,IAAO,IAAPA,CAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yCAIrBG,GAAiBL,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2G,aCT3C,MA6BA,EA7BoBK,IAAmD,IAAlD,MAAEC,EAAK,QAAEC,EAAO,OAAEC,GAA0BH,EAQ/D,OACEI,EAAAA,EAAAA,KAACZ,EAAkB,CAAAa,UACjBD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CAACC,UAAU,KAAKC,aAAW,EAAAH,UAC/BD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAQN,UAClCD,EAAAA,EAAAA,KAACN,EAAc,CAAAO,UACbO,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGZ,SAAA,EAClCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKJ,KACLG,EAAAA,EAAAA,KAACR,EAAO,CAAAS,SAAEH,IACTC,IACCC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,KAAMC,OAhBjCC,EAgB0C,eAf1CC,SAASC,eAAeF,GAChCG,eAAe,CACrBC,SAAU,WAHIJ,KAgBqD,EAAAjB,SACtDF,cAOM,C","sources":["components/MiddleBlock/styles.tsx","components/MiddleBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MiddleBlockSection = styled(\"section\")`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  scroll-snap-align: start;\r\n  padding: 7.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    padding: 5.5rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  max-width: 570px;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { MiddleBlockSection, Content, ContentWrapper } from \"./styles\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  content: string;\r\n  button: string;\r\n}\r\n\r\nconst MiddleBlock = ({ title, content, button }: MiddleBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MiddleBlockSection>\r\n      <Slide direction=\"up\" triggerOnce>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <ContentWrapper>\r\n            <Col lg={24} md={24} sm={24} xs={24}>\r\n              <h6>{title}</h6>\r\n              <Content>{content}</Content>\r\n              {button && (\r\n                <Button name=\"submit\" onClick={() => scrollTo(\"mission\")}>\r\n                  {button}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </ContentWrapper>\r\n        </Row>\r\n      </Slide>\r\n    </MiddleBlockSection>\r\n  );\r\n};\r\n\r\nexport default MiddleBlock;\r\n"],"names":["MiddleBlockSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","_ref","title","content","button","_jsx","children","Slide","direction","triggerOnce","Row","justify","align","_jsxs","Col","lg","md","sm","xs","Button","name","onClick","scrollTo","id","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}