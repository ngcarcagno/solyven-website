{"version":3,"file":"static/js/660.d83d74a9.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/Backgrounds/FaultyTerminal/faultyTerminal.js","components/Backgrounds/DotGrid/DotGrid.js","components/HeroSection/HeroSection.tsx","components/HeroSection/index.tsx","components/Elements/SecurityCamera/DomeCamera.jsx","components/Elements/SecurityCamera/utils.ts","pages/Home/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ScrollSnapContainer = styled(\"div\")`\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  scroll-snap-type: y mandatory;\r\n  -webkit-overflow-scrolling: touch;\r\n  scroll-behavior: smooth;\r\n\r\n  /* Oculta scrollbars en algunos navegadores */\r\n  scrollbar-width: none; /* Firefox */\r\n  &::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari */\r\n  }\r\n`;\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  scroll-snap-align: start;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) => (direction === \"left\" ? \"row\" : \"row-reverse\")};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Montserrat Medium\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Renderer, Program, Mesh, Color, Triangle } from \"ogl\";\r\nimport { useEffect, useRef, useMemo, useCallback } from \"react\";\r\nimport \"./FaultyTerminal.css\";\r\n\r\nconst vertexShader = `\r\nattribute vec2 position;\r\nattribute vec2 uv;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = `\r\nprecision mediump float;\r\n\r\nvarying vec2 vUv;\r\n\r\nuniform float iTime;\r\nuniform vec3  iResolution;\r\nuniform float uScale;\r\n\r\nuniform vec2  uGridMul;\r\nuniform float uDigitSize;\r\nuniform float uScanlineIntensity;\r\nuniform float uGlitchAmount;\r\nuniform float uFlickerAmount;\r\nuniform float uNoiseAmp;\r\nuniform float uChromaticAberration;\r\nuniform float uDither;\r\nuniform float uCurvature;\r\nuniform vec3  uTint;\r\nuniform vec2  uMouse;\r\nuniform float uMouseStrength;\r\nuniform float uUseMouse;\r\nuniform float uPageLoadProgress;\r\nuniform float uUsePageLoadAnimation;\r\nuniform float uBrightness;\r\n\r\nfloat time;\r\n\r\nfloat hash21(vec2 p){\r\n  p = fract(p * 234.56);\r\n  p += dot(p, p + 34.56);\r\n  return fract(p.x * p.y);\r\n}\r\n\r\nfloat noise(vec2 p)\r\n{\r\n  return sin(p.x * 10.0) * sin(p.y * (3.0 + sin(time * 0.090909))) + 0.2; \r\n}\r\n\r\nmat2 rotate(float angle)\r\n{\r\n  float c = cos(angle);\r\n  float s = sin(angle);\r\n  return mat2(c, -s, s, c);\r\n}\r\n\r\nfloat fbm(vec2 p)\r\n{\r\n  p *= 1.1;\r\n  float f = 0.0;\r\n  float amp = 0.5 * uNoiseAmp;\r\n  \r\n  mat2 modify0 = rotate(time * 0.02);\r\n  f += amp * noise(p);\r\n  p = modify0 * p * 2.0;\r\n  amp *= 0.454545; // 1/2.2\r\n  \r\n  mat2 modify1 = rotate(time * 0.02);\r\n  f += amp * noise(p);\r\n  p = modify1 * p * 2.0;\r\n  amp *= 0.454545;\r\n  \r\n  mat2 modify2 = rotate(time * 0.08);\r\n  f += amp * noise(p);\r\n  \r\n  return f;\r\n}\r\n\r\nfloat pattern(vec2 p, out vec2 q, out vec2 r) {\r\n  vec2 offset1 = vec2(1.0);\r\n  vec2 offset0 = vec2(0.0);\r\n  mat2 rot01 = rotate(0.1 * time);\r\n  mat2 rot1 = rotate(0.1);\r\n  \r\n  q = vec2(fbm(p + offset1), fbm(rot01 * p + offset1));\r\n  r = vec2(fbm(rot1 * q + offset0), fbm(q + offset0));\r\n  return fbm(p + r);\r\n}\r\n\r\nfloat digit(vec2 p){\r\n    vec2 grid = uGridMul * 15.0;\r\n    vec2 s = floor(p * grid) / grid;\r\n    p = p * grid;\r\n    vec2 q, r;\r\n    float intensity = pattern(s * 0.1, q, r) * 1.3 - 0.03;\r\n    \r\n    if(uUseMouse > 0.5){\r\n        vec2 mouseWorld = uMouse * uScale;\r\n        float distToMouse = distance(s, mouseWorld);\r\n        float mouseInfluence = exp(-distToMouse * 8.0) * uMouseStrength * 10.0;\r\n        intensity += mouseInfluence;\r\n        \r\n        float ripple = sin(distToMouse * 20.0 - iTime * 5.0) * 0.1 * mouseInfluence;\r\n        intensity += ripple;\r\n    }\r\n    \r\n    if(uUsePageLoadAnimation > 0.5){\r\n        float cellRandom = fract(sin(dot(s, vec2(12.9898, 78.233))) * 43758.5453);\r\n        float cellDelay = cellRandom * 0.8;\r\n        float cellProgress = clamp((uPageLoadProgress - cellDelay) / 0.2, 0.0, 1.0);\r\n        \r\n        float fadeAlpha = smoothstep(0.0, 1.0, cellProgress);\r\n        intensity *= fadeAlpha;\r\n    }\r\n    \r\n    p = fract(p);\r\n    p *= uDigitSize;\r\n    \r\n    float px5 = p.x * 5.0;\r\n    float py5 = (1.0 - p.y) * 5.0;\r\n    float x = fract(px5);\r\n    float y = fract(py5);\r\n    \r\n    float i = floor(py5) - 2.0;\r\n    float j = floor(px5) - 2.0;\r\n    float n = i * i + j * j;\r\n    float f = n * 0.0625;\r\n    \r\n    float isOn = step(0.1, intensity - f);\r\n    float brightness = isOn * (0.2 + y * 0.8) * (0.75 + x * 0.25);\r\n    \r\n    return step(0.0, p.x) * step(p.x, 1.0) * step(0.0, p.y) * step(p.y, 1.0) * brightness;\r\n}\r\n\r\nfloat onOff(float a, float b, float c)\r\n{\r\n  return step(c, sin(iTime + a * cos(iTime * b))) * uFlickerAmount;\r\n}\r\n\r\nfloat displace(vec2 look)\r\n{\r\n    float y = look.y - mod(iTime * 0.25, 1.0);\r\n    float window = 1.0 / (1.0 + 50.0 * y * y);\r\n    return sin(look.y * 20.0 + iTime) * 0.0125 * onOff(4.0, 2.0, 0.8) * (1.0 + cos(iTime * 60.0)) * window;\r\n}\r\n\r\nvec3 getColor(vec2 p){\r\n    \r\n    float bar = step(mod(p.y + time * 20.0, 1.0), 0.2) * 0.4 + 1.0; // more efficient than ternary\r\n    bar *= uScanlineIntensity;\r\n    \r\n    float displacement = displace(p);\r\n    p.x += displacement;\r\n\r\n    if (uGlitchAmount != 1.0) {\r\n      float extra = displacement * (uGlitchAmount - 1.0);\r\n      p.x += extra;\r\n    }\r\n\r\n    float middle = digit(p);\r\n    \r\n    const float off = 0.002;\r\n    float sum = digit(p + vec2(-off, -off)) + digit(p + vec2(0.0, -off)) + digit(p + vec2(off, -off)) +\r\n                digit(p + vec2(-off, 0.0)) + digit(p + vec2(0.0, 0.0)) + digit(p + vec2(off, 0.0)) +\r\n                digit(p + vec2(-off, off)) + digit(p + vec2(0.0, off)) + digit(p + vec2(off, off));\r\n    \r\n    vec3 baseColor = vec3(0.9) * middle + sum * 0.1 * vec3(1.0) * bar;\r\n    return baseColor;\r\n}\r\n\r\nvec2 barrel(vec2 uv){\r\n  vec2 c = uv * 2.0 - 1.0;\r\n  float r2 = dot(c, c);\r\n  c *= 1.0 + uCurvature * r2;\r\n  return c * 0.5 + 0.5;\r\n}\r\n\r\nvoid main() {\r\n    time = iTime * 0.333333;\r\n    vec2 uv = vUv;\r\n\r\n    if(uCurvature != 0.0){\r\n      uv = barrel(uv);\r\n    }\r\n    \r\n    vec2 p = uv * uScale;\r\n    vec3 col = getColor(p);\r\n\r\n    if(uChromaticAberration != 0.0){\r\n      vec2 ca = vec2(uChromaticAberration) / iResolution.xy;\r\n      col.r = getColor(p + ca).r;\r\n      col.b = getColor(p - ca).b;\r\n    }\r\n\r\n    col *= uTint;\r\n    col *= uBrightness;\r\n\r\n    if(uDither > 0.0){\r\n      float rnd = hash21(gl_FragCoord.xy);\r\n      col += (rnd - 0.5) * (uDither * 0.003922);\r\n    }\r\n\r\n    gl_FragColor = vec4(col, 1.0);\r\n}\r\n`;\r\n\r\nfunction hexToRgb(hex) {\r\n  let h = hex.replace(\"#\", \"\").trim();\r\n  if (h.length === 3)\r\n    h = h\r\n      .split(\"\")\r\n      .map((c) => c + c)\r\n      .join(\"\");\r\n  const num = parseInt(h, 16);\r\n  return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\r\n}\r\n\r\nexport default function FaultyTerminal({\r\n  scale = 1,\r\n  gridMul = [2, 1],\r\n  digitSize = 1.5,\r\n  timeScale = 0.3,\r\n  pause = false,\r\n  scanlineIntensity = 0.3,\r\n  glitchAmount = 1,\r\n  flickerAmount = 1,\r\n  noiseAmp = 0,\r\n  chromaticAberration = 0,\r\n  dither = 0,\r\n  curvature = 0.2,\r\n  tint = \"#ffffff\",\r\n  mouseReact = true,\r\n  mouseStrength = 0.2,\r\n  dpr = Math.min(window.devicePixelRatio || 1, 2),\r\n  pageLoadAnimation = true,\r\n  brightness = 1,\r\n  className,\r\n  style,\r\n  backgroundColor = \"#000000\",\r\n  ...rest\r\n}) {\r\n  const containerRef = useRef(null);\r\n  const programRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const mouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const smoothMouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const frozenTimeRef = useRef(0);\r\n  const rafRef = useRef(0);\r\n  const loadAnimationStartRef = useRef(0);\r\n  const timeOffsetRef = useRef(Math.random() * 100);\r\n\r\n  const tintVec = useMemo(() => hexToRgb(tint), [tint]);\r\n\r\n  const ditherValue = useMemo(() => (typeof dither === \"boolean\" ? (dither ? 1 : 0) : dither), [dither]);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    const ctn = containerRef.current;\r\n    if (!ctn) return;\r\n    const rect = ctn.getBoundingClientRect();\r\n    const x = (e.clientX - rect.left) / rect.width;\r\n    const y = 1 - (e.clientY - rect.top) / rect.height;\r\n    mouseRef.current = { x, y };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const ctn = containerRef.current;\r\n    if (!ctn) return;\r\n\r\n    const renderer = new Renderer({ dpr });\r\n    rendererRef.current = renderer;\r\n    const gl = renderer.gl;\r\n\r\n    // Convierte el color hex a RGB\r\n    function hexToRgbArray(hex) {\r\n      let h = hex.replace(\"#\", \"\").trim();\r\n      if (h.length === 3)\r\n        h = h\r\n          .split(\"\")\r\n          .map((c) => c + c)\r\n          .join(\"\");\r\n      const num = parseInt(h, 16);\r\n      return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\r\n    }\r\n    const bgRgb = hexToRgbArray(backgroundColor);\r\n\r\n    gl.clearColor(bgRgb[0], bgRgb[1], bgRgb[2], 1); // <-- usa el color de fondo\r\n\r\n    const geometry = new Triangle(gl);\r\n\r\n    const program = new Program(gl, {\r\n      vertex: vertexShader,\r\n      fragment: fragmentShader,\r\n      uniforms: {\r\n        iTime: { value: 0 },\r\n        iResolution: {\r\n          value: new Color(gl.canvas.width, gl.canvas.height, gl.canvas.width / gl.canvas.height),\r\n        },\r\n        uScale: { value: scale },\r\n\r\n        uGridMul: { value: new Float32Array(gridMul) },\r\n        uDigitSize: { value: digitSize },\r\n        uScanlineIntensity: { value: scanlineIntensity },\r\n        uGlitchAmount: { value: glitchAmount },\r\n        uFlickerAmount: { value: flickerAmount },\r\n        uNoiseAmp: { value: noiseAmp },\r\n        uChromaticAberration: { value: chromaticAberration },\r\n        uDither: { value: ditherValue },\r\n        uCurvature: { value: curvature },\r\n        uTint: { value: new Color(tintVec[0], tintVec[1], tintVec[2]) },\r\n        uMouse: {\r\n          value: new Float32Array([smoothMouseRef.current.x, smoothMouseRef.current.y]),\r\n        },\r\n        uMouseStrength: { value: mouseStrength },\r\n        uUseMouse: { value: mouseReact ? 1 : 0 },\r\n        uPageLoadProgress: { value: pageLoadAnimation ? 0 : 1 },\r\n        uUsePageLoadAnimation: { value: pageLoadAnimation ? 1 : 0 },\r\n        uBrightness: { value: brightness },\r\n      },\r\n    });\r\n    programRef.current = program;\r\n\r\n    const mesh = new Mesh(gl, { geometry, program });\r\n\r\n    function resize() {\r\n      if (!ctn || !renderer) return;\r\n      renderer.setSize(ctn.offsetWidth, ctn.offsetHeight);\r\n      program.uniforms.iResolution.value = new Color(\r\n        gl.canvas.width,\r\n        gl.canvas.height,\r\n        gl.canvas.width / gl.canvas.height\r\n      );\r\n    }\r\n\r\n    const resizeObserver = new ResizeObserver(() => resize());\r\n    resizeObserver.observe(ctn);\r\n    resize();\r\n\r\n    const update = (t) => {\r\n      rafRef.current = requestAnimationFrame(update);\r\n\r\n      if (pageLoadAnimation && loadAnimationStartRef.current === 0) {\r\n        loadAnimationStartRef.current = t;\r\n      }\r\n\r\n      if (!pause) {\r\n        const elapsed = (t * 0.001 + timeOffsetRef.current) * timeScale;\r\n        program.uniforms.iTime.value = elapsed;\r\n        frozenTimeRef.current = elapsed;\r\n      } else {\r\n        program.uniforms.iTime.value = frozenTimeRef.current;\r\n      }\r\n\r\n      if (pageLoadAnimation && loadAnimationStartRef.current > 0) {\r\n        const animationDuration = 2000;\r\n        const animationElapsed = t - loadAnimationStartRef.current;\r\n        const progress = Math.min(animationElapsed / animationDuration, 1);\r\n        program.uniforms.uPageLoadProgress.value = progress;\r\n      }\r\n\r\n      if (mouseReact) {\r\n        const dampingFactor = 0.08;\r\n        const smoothMouse = smoothMouseRef.current;\r\n        const mouse = mouseRef.current;\r\n        smoothMouse.x += (mouse.x - smoothMouse.x) * dampingFactor;\r\n        smoothMouse.y += (mouse.y - smoothMouse.y) * dampingFactor;\r\n\r\n        const mouseUniform = program.uniforms.uMouse.value;\r\n        mouseUniform[0] = smoothMouse.x;\r\n        mouseUniform[1] = smoothMouse.y;\r\n      }\r\n\r\n      renderer.render({ scene: mesh });\r\n    };\r\n    rafRef.current = requestAnimationFrame(update);\r\n    ctn.appendChild(gl.canvas);\r\n\r\n    if (mouseReact) ctn.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(rafRef.current);\r\n      resizeObserver.disconnect();\r\n      if (mouseReact) ctn.removeEventListener(\"mousemove\", handleMouseMove);\r\n      if (gl.canvas.parentElement === ctn) ctn.removeChild(gl.canvas);\r\n      gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\r\n      loadAnimationStartRef.current = 0;\r\n      timeOffsetRef.current = Math.random() * 100;\r\n    };\r\n  }, [\r\n    dpr,\r\n    pause,\r\n    timeScale,\r\n    scale,\r\n    gridMul,\r\n    digitSize,\r\n    scanlineIntensity,\r\n    glitchAmount,\r\n    flickerAmount,\r\n    noiseAmp,\r\n    chromaticAberration,\r\n    ditherValue,\r\n    curvature,\r\n    tintVec,\r\n    mouseReact,\r\n    mouseStrength,\r\n    pageLoadAnimation,\r\n    brightness,\r\n    backgroundColor,\r\n    handleMouseMove,\r\n  ]);\r\n\r\n  return <div ref={containerRef} className={`faulty-terminal-container ${className}`} style={style} {...rest} />;\r\n}\r\n","\"use client\";\r\nimport { useRef, useEffect, useCallback, useMemo } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\r\n\r\nimport \"./DotGrid.css\";\r\n\r\ngsap.registerPlugin(InertiaPlugin);\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastCall = 0;\r\n  return function (...args) {\r\n    const now = performance.now();\r\n    if (now - lastCall >= limit) {\r\n      lastCall = now;\r\n      func.apply(this, args);\r\n    }\r\n  };\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  const m = hex.match(/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i);\r\n  if (!m) return { r: 0, g: 0, b: 0 };\r\n  return {\r\n    r: parseInt(m[1], 16),\r\n    g: parseInt(m[2], 16),\r\n    b: parseInt(m[3], 16),\r\n  };\r\n}\r\n\r\nconst DotGrid = ({\r\n  dotSize = 16,\r\n  gap = 32,\r\n  baseColor = \"#5227FF\",\r\n  activeColor = \"#5227FF\",\r\n  proximity = 150,\r\n  speedTrigger = 100,\r\n  shockRadius = 250,\r\n  shockStrength = 5,\r\n  maxSpeed = 5000,\r\n  resistance = 750,\r\n  returnDuration = 1.5,\r\n  className = \"\",\r\n  style,\r\n}) => {\r\n  const wrapperRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const dotsRef = useRef([]);\r\n  const pointerRef = useRef({\r\n    x: 0,\r\n    y: 0,\r\n    vx: 0,\r\n    vy: 0,\r\n    speed: 0,\r\n    lastTime: 0,\r\n    lastX: 0,\r\n    lastY: 0,\r\n  });\r\n\r\n  const baseRgb = useMemo(() => hexToRgb(baseColor), [baseColor]);\r\n  const activeRgb = useMemo(() => hexToRgb(activeColor), [activeColor]);\r\n\r\n  const circlePath = useMemo(() => {\r\n    if (typeof window === \"undefined\" || !window.Path2D) return null;\r\n\r\n    const p = new window.Path2D();\r\n    p.arc(0, 0, dotSize / 2, 0, Math.PI * 2);\r\n    return p;\r\n  }, [dotSize]);\r\n\r\n  const buildGrid = useCallback(() => {\r\n    const wrap = wrapperRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!wrap || !canvas) return;\r\n\r\n    const { width, height } = wrap.getBoundingClientRect();\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    canvas.width = width * dpr;\r\n    canvas.height = height * dpr;\r\n    canvas.style.width = `${width}px`;\r\n    canvas.style.height = `${height}px`;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) ctx.scale(dpr, dpr);\r\n\r\n    const cols = Math.floor((width + gap) / (dotSize + gap));\r\n    const rows = Math.floor((height + gap) / (dotSize + gap));\r\n    const cell = dotSize + gap;\r\n\r\n    const gridW = cell * cols - gap;\r\n    const gridH = cell * rows - gap;\r\n\r\n    const extraX = width - gridW;\r\n    const extraY = height - gridH;\r\n\r\n    const startX = extraX / 2 + dotSize / 2;\r\n    const startY = extraY / 2 + dotSize / 2;\r\n\r\n    const dots = [];\r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < cols; x++) {\r\n        const cx = startX + x * cell;\r\n        const cy = startY + y * cell;\r\n        dots.push({ cx, cy, xOffset: 0, yOffset: 0, _inertiaApplied: false });\r\n      }\r\n    }\r\n    dotsRef.current = dots;\r\n  }, [dotSize, gap]);\r\n\r\n  useEffect(() => {\r\n    if (!circlePath) return;\r\n\r\n    let rafId;\r\n    const proxSq = proximity * proximity;\r\n\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const { x: px, y: py } = pointerRef.current;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const ox = dot.cx + dot.xOffset;\r\n        const oy = dot.cy + dot.yOffset;\r\n        const dx = dot.cx - px;\r\n        const dy = dot.cy - py;\r\n        const dsq = dx * dx + dy * dy;\r\n\r\n        let style = baseColor;\r\n        if (dsq <= proxSq) {\r\n          const dist = Math.sqrt(dsq);\r\n          const t = 1 - dist / proximity;\r\n          const r = Math.round(baseRgb.r + (activeRgb.r - baseRgb.r) * t);\r\n          const g = Math.round(baseRgb.g + (activeRgb.g - baseRgb.g) * t);\r\n          const b = Math.round(baseRgb.b + (activeRgb.b - baseRgb.b) * t);\r\n          style = `rgb(${r},${g},${b})`;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(ox, oy);\r\n        ctx.fillStyle = style;\r\n        ctx.fill(circlePath);\r\n        ctx.restore();\r\n      }\r\n\r\n      rafId = requestAnimationFrame(draw);\r\n    };\r\n\r\n    draw();\r\n    return () => cancelAnimationFrame(rafId);\r\n  }, [proximity, baseColor, activeRgb, baseRgb, circlePath]);\r\n\r\n  useEffect(() => {\r\n    buildGrid();\r\n    let ro = null;\r\n    if (\"ResizeObserver\" in window) {\r\n      ro = new ResizeObserver(buildGrid);\r\n      wrapperRef.current && ro.observe(wrapperRef.current);\r\n    } else {\r\n      window.addEventListener(\"resize\", buildGrid);\r\n    }\r\n    return () => {\r\n      if (ro) ro.disconnect();\r\n      else window.removeEventListener(\"resize\", buildGrid);\r\n    };\r\n  }, [buildGrid]);\r\n\r\n  useEffect(() => {\r\n    const onMove = (e) => {\r\n      const now = performance.now();\r\n      const pr = pointerRef.current;\r\n      const dt = pr.lastTime ? now - pr.lastTime : 16;\r\n      const dx = e.clientX - pr.lastX;\r\n      const dy = e.clientY - pr.lastY;\r\n      let vx = (dx / dt) * 1000;\r\n      let vy = (dy / dt) * 1000;\r\n      let speed = Math.hypot(vx, vy);\r\n      if (speed > maxSpeed) {\r\n        const scale = maxSpeed / speed;\r\n        vx *= scale;\r\n        vy *= scale;\r\n        speed = maxSpeed;\r\n      }\r\n      pr.lastTime = now;\r\n      pr.lastX = e.clientX;\r\n      pr.lastY = e.clientY;\r\n      pr.vx = vx;\r\n      pr.vy = vy;\r\n      pr.speed = speed;\r\n\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      pr.x = e.clientX - rect.left;\r\n      pr.y = e.clientY - rect.top;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - pr.x, dot.cy - pr.y);\r\n        if (speed > speedTrigger && dist < proximity && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const pushX = dot.cx - pr.x + vx * 0.005;\r\n          const pushY = dot.cy - pr.y + vy * 0.005;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const onClick = (e) => {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const cx = e.clientX - rect.left;\r\n      const cy = e.clientY - rect.top;\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - cx, dot.cy - cy);\r\n        if (dist < shockRadius && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const falloff = Math.max(0, 1 - dist / shockRadius);\r\n          const pushX = (dot.cx - cx) * shockStrength * falloff;\r\n          const pushY = (dot.cy - cy) * shockStrength * falloff;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const throttledMove = throttle(onMove, 50);\r\n    window.addEventListener(\"mousemove\", throttledMove, { passive: true });\r\n    window.addEventListener(\"click\", onClick);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", throttledMove);\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [maxSpeed, speedTrigger, proximity, resistance, returnDuration, shockRadius, shockStrength]);\r\n\r\n  return (\r\n    <section className={`dot-grid ${className}`} style={style}>\r\n      <div ref={wrapperRef} className=\"dot-grid__wrap\">\r\n        <canvas ref={canvasRef} className=\"dot-grid__canvas\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DotGrid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeroWrapper = styled.section`\r\n  position: relative;\r\n  scroll-snap-align: start;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const HeroBackground = styled.div`\r\n  position: absolute;\r\n  inset: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 0;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport const HeroContent = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import FaultyTerminalBackground from \"../Backgrounds/FaultyTerminal/faultyTerminal\";\r\nimport DotGridBackground from \"../Backgrounds/DotGrid/DotGrid\";\r\nimport { HeroWrapper, HeroBackground, HeroContent } from \"./HeroSection\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface HeroSectionProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const HeroSectionFaultyTerminal = ({ children }: HeroSectionProps) => (\r\n  <HeroWrapper>\r\n    <HeroBackground>\r\n      <FaultyTerminalBackground\r\n        className=\"\"\r\n        tint=\"#333333\"\r\n        backgroundColor=\"#000000ff\"\r\n        scale={0.7}\r\n        digitSize={2}\r\n        noiseAmp={1}\r\n        brightness={0.6}\r\n        scanlineIntensity={0.5}\r\n        curvature={0.2}\r\n        mouseReact={true}\r\n        mouseStrength={2}\r\n        pageLoadAnimation={true}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </HeroBackground>\r\n    <HeroContent>{children}</HeroContent>\r\n  </HeroWrapper>\r\n);\r\n\r\nexport const HeroSectionDotGrid = ({ children }: HeroSectionProps) => (\r\n  <HeroWrapper>\r\n    <HeroBackground>\r\n      <DotGridBackground\r\n        className=\"\"\r\n        dotSize={10}\r\n        gap={15}\r\n        baseColor=\"#33333338\"\r\n        activeColor=\"#5F0807\"\r\n        proximity={120}\r\n        shockRadius={250}\r\n        shockStrength={5}\r\n        resistance={750}\r\n        returnDuration={1.5}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </HeroBackground>\r\n    <HeroContent>{children}</HeroContent>\r\n  </HeroWrapper>\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { darken, lighten } from \"./utils\";\r\n\r\nconst DomeCamera = ({\r\n  cameraColor = \"#2a2a2a\",\r\n  lensColor = \"#000000\",\r\n  statusColor = \"#00ff40\",\r\n  label = \"Cámara Dome PTZ\",\r\n  showLaser = true,\r\n  mounted = true, // Si está montada en pared/techo\r\n}) => {\r\n  const cameraLensRef = useRef(null);\r\n  const statusLightRef = useRef(null);\r\n  const lensInnerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!cameraLensRef.current || !lensInnerRef.current) return;\r\n\r\n      // Obtén el centro de la cámara\r\n      const rect = cameraLensRef.current.getBoundingClientRect();\r\n      const centerX = rect.left + rect.width / 2;\r\n      const centerY = rect.top + rect.height / 2;\r\n\r\n      // Offset del mouse respecto al centro\r\n      const offsetX = e.clientX - centerX;\r\n      const offsetY = e.clientY - centerY;\r\n\r\n      // Máximo desplazamiento en px\r\n      const maxMove = 8;\r\n\r\n      // Normaliza el movimiento\r\n      const moveX = Math.max(-maxMove, Math.min(maxMove, offsetX / 8));\r\n      const moveY = Math.max(-maxMove, Math.min(maxMove, offsetY / 8));\r\n\r\n      // Aplica el movimiento a la pupila\r\n      lensInnerRef.current.style.transform = `translate(-50%, -50%) translate(${moveX}px, ${moveY}px)`;\r\n\r\n      // Efecto de parpadeo aleatorio\r\n      if (Math.random() > 0.995 && statusLightRef.current) {\r\n        statusLightRef.current.style.animation = \"none\";\r\n        setTimeout(() => {\r\n          if (statusLightRef.current) {\r\n            statusLightRef.current.style.animation = \"pulse 2s infinite\";\r\n          }\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    // Efecto de enfoque aleatorio\r\n    const focusInterval = setInterval(() => {\r\n      if (lensInnerRef.current) {\r\n        lensInnerRef.current.style.transition = \"all 0.5s ease\";\r\n        const size = 25 + Math.random() * 5;\r\n        lensInnerRef.current.style.width = `${size}px`;\r\n        lensInnerRef.current.style.height = `${size}px`;\r\n\r\n        setTimeout(() => {\r\n          if (lensInnerRef.current) {\r\n            lensInnerRef.current.style.width = \"25px\";\r\n            lensInnerRef.current.style.height = \"25px\";\r\n          }\r\n        }, 500);\r\n      }\r\n    }, 3000);\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      clearInterval(focusInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <CameraContainer>\r\n      {mounted && <MountingBracket />}\r\n      <DomeCameraWrapper>\r\n        <CameraDome cameraColor={cameraColor}>\r\n          <CameraLens ref={cameraLensRef} lensColor={lensColor}>\r\n            <LensGlass>\r\n              <LensReflection />\r\n              <LensInner ref={lensInnerRef} />\r\n            </LensGlass>\r\n          </CameraLens>\r\n          <StatusLights>\r\n            <CameraStatus ref={statusLightRef} statusColor={statusColor} />\r\n            <InfraredLight />\r\n            <InfraredLight />\r\n          </StatusLights>\r\n          {showLaser && <ScanEffect />}\r\n        </CameraDome>\r\n        <CameraLabel>{label}</CameraLabel>\r\n      </DomeCameraWrapper>\r\n    </CameraContainer>\r\n  );\r\n};\r\n\r\n// Animaciones\r\nconst scanAnimation = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst infraredPulse = keyframes`\r\n  0% { opacity: 0.1; }\r\n  50% { opacity: 0.3; }\r\n  100% { opacity: 0.1; }\r\n`;\r\n\r\n// Componentes estilizados\r\nconst CameraContainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 400px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    height: 500px;\r\n  }\r\n`;\r\n\r\nconst MountingBracket = styled.div`\r\n  width: 120px;\r\n  height: 20px;\r\n  background: linear-gradient(to bottom, #1a1a1a, #0a0a0a);\r\n  border-radius: 3px 3px 0 0;\r\n  margin-bottom: -5px;\r\n  position: relative;\r\n  z-index: 2;\r\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.5);\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: -5px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 30px;\r\n    height: 5px;\r\n    background: #333;\r\n    border-radius: 0 0 3px 3px;\r\n  }\r\n`;\r\n\r\nconst DomeCameraWrapper = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 200px;\r\n  margin-bottom: 20px;\r\n  perspective: 500px;\r\n`;\r\n\r\nconst CameraDome = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  background: ${({ cameraColor }) => cameraColor};\r\n  border-radius: 50%;\r\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.6), inset 0 -6px 18px ${({ cameraColor }) => darken(cameraColor, 0.3)},\r\n    inset 0 6px 18px ${({ cameraColor }) => lighten(cameraColor, 0.1)}, 0 0 35px rgba(161, 161, 161, 0.5);\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 10%;\r\n    right: 10%;\r\n    bottom: 10%;\r\n    border: 2px solid rgba(255, 255, 255, 0.05);\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst CameraLens = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 50%;\r\n  height: 50%;\r\n  background: ${({ lensColor }) => lensColor};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 0 0 5px rgba(50, 50, 50, 0.8), inset 0 0 25px rgba(0, 0, 0, 0.9);\r\n  transition: transform 0.1s ease;\r\n  transform-style: preserve-3d;\r\n  z-index: 2;\r\n`;\r\n\r\nconst LensGlass = styled.div`\r\n  width: 85%;\r\n  height: 85%;\r\n  background: radial-gradient(circle at 30% 30%, #3b4359 0%, #0e121b 90%);\r\n  border-radius: 50%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst LensReflection = styled.div`\r\n  position: absolute;\r\n  width: 15px;\r\n  height: 15px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-radius: 50%;\r\n  top: 20%;\r\n  right: 20%;\r\n`;\r\n\r\nconst LensInner = styled.div`\r\n  position: absolute;\r\n  width: 35%;\r\n  height: 35%;\r\n  background: radial-gradient(circle, #0a0e17 10%, #1e2538 70%);\r\n  border-radius: 50%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.3s ease-out;\r\n`;\r\n\r\nconst StatusLights = styled.div`\r\n  position: absolute;\r\n  bottom: 15px;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst CameraStatus = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background: ${({ statusColor }) => statusColor};\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 8px ${({ statusColor }) => statusColor};\r\n  animation: pulse 2s infinite;\r\n\r\n  @keyframes pulse {\r\n    0% {\r\n      opacity: 0.3;\r\n    }\r\n    50% {\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      opacity: 0.3;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfraredLight = styled.div`\r\n  width: 6px;\r\n  height: 6px;\r\n  background: #ff0037;\r\n  border-radius: 50%;\r\n  opacity: 0.2;\r\n  animation: ${infraredPulse} 1.5s infinite;\r\n\r\n  &:nth-child(2) {\r\n    animation-delay: 0.5s;\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    animation-delay: 1s;\r\n  }\r\n`;\r\n\r\nconst CameraLabel = styled.div`\r\n  color: #c3d4ec;\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst ScanEffect = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    width: 2px;\r\n    height: 100%;\r\n    background: linear-gradient(to bottom, transparent, rgba(59, 130, 246, 0.6), transparent);\r\n    transform-origin: center;\r\n    animation: ${scanAnimation} 4s linear infinite;\r\n  }\r\n`;\r\n\r\nexport default DomeCamera;\r\n","export function darken(hex: string, amount: number): string {\r\n  let c = hex.replace(\"#\", \"\");\r\n  if (c.length === 3)\r\n    c = c\r\n      .split(\"\")\r\n      .map((x) => x + x)\r\n      .join(\"\");\r\n  let num = parseInt(c, 16);\r\n  let r = Math.max(0, ((num >> 16) & 255) - Math.round(255 * amount));\r\n  let g = Math.max(0, ((num >> 8) & 255) - Math.round(255 * amount));\r\n  let b = Math.max(0, (num & 255) - Math.round(255 * amount));\r\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n}\r\n\r\nexport function lighten(hex: string, amount: number): string {\r\n  let c = hex.replace(\"#\", \"\");\r\n  if (c.length === 3)\r\n    c = c\r\n      .split(\"\")\r\n      .map((x) => x + x)\r\n      .join(\"\");\r\n  let num = parseInt(c, 16);\r\n  let r = Math.min(255, ((num >> 16) & 255) + Math.round(255 * amount));\r\n  let g = Math.min(255, ((num >> 8) & 255) + Math.round(255 * amount));\r\n  let b = Math.min(255, (num & 255) + Math.round(255 * amount));\r\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n}\r\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport { ScrollSnapContainer } from \"../../components/ContentBlock/styles\";\r\nimport { HeroSectionFaultyTerminal, HeroSectionDotGrid } from \"../../components/HeroSection\";\r\nimport DomeCamera from \"../../components/Elements/SecurityCamera/DomeCamera\";\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() =>\r\n  import(\"../../components/ContentBlock\").then((module) => ({\r\n    default: module.default as React.ComponentType<any>,\r\n  }))\r\n);\r\n\r\nconst Home = () => {\r\n  return (\r\n    <ScrollSnapContainer>\r\n      <ScrollToTop />\r\n      <HeroSectionFaultyTerminal>\r\n        <ContentBlock\r\n          direction=\"right\"\r\n          title={IntroContent.title}\r\n          content={IntroContent.text}\r\n          button={IntroContent.button}\r\n          icon={\r\n            <DomeCamera\r\n              cameraColor=\"#333333\"\r\n              lensColor=\"#000000ff\"\r\n              statusColor=\"#00ff40\"\r\n              label=\"\"\r\n              showLaser={false}\r\n              mounted={false}\r\n            />\r\n          }\r\n          id=\"intro\"\r\n        />\r\n      </HeroSectionFaultyTerminal>\r\n      <HeroSectionDotGrid>\r\n        <MiddleBlock\r\n          title={MiddleBlockContent.title}\r\n          content={MiddleBlockContent.text}\r\n          button={MiddleBlockContent.button}\r\n        />\r\n      </HeroSectionDotGrid>\r\n\r\n      <HeroSectionDotGrid>\r\n        <ContentBlock\r\n          direction=\"left\"\r\n          title={AboutContent.title}\r\n          content={AboutContent.text}\r\n          section={AboutContent.section}\r\n          icon=\"graphs.svg\"\r\n          id=\"about\"\r\n        />\r\n      </HeroSectionDotGrid>\r\n      <ContentBlock\r\n        direction=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"product-launch.svg\"\r\n        id=\"mission\"\r\n      />\r\n      <ContentBlock\r\n        direction=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"waving.svg\"\r\n        id=\"product\"\r\n      />\r\n      <Contact title={ContactContent.title} content={ContactContent.text} id=\"contact\" />\r\n    </ScrollSnapContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["ScrollSnapContainer","styled","_templateObject","_taggedTemplateLiteral","ContentSection","_templateObject2","Content","_templateObject3","StyledRow","Row","_templateObject4","_ref","direction","ContentWrapper","_templateObject5","ServiceWrapper","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ButtonWrapper","_templateObject9","FaultyTerminal","scale","gridMul","digitSize","timeScale","pause","scanlineIntensity","glitchAmount","flickerAmount","noiseAmp","chromaticAberration","dither","curvature","tint","mouseReact","mouseStrength","dpr","Math","min","window","devicePixelRatio","pageLoadAnimation","brightness","className","style","backgroundColor","rest","_objectWithoutProperties","_excluded","containerRef","useRef","programRef","rendererRef","mouseRef","x","y","smoothMouseRef","frozenTimeRef","rafRef","loadAnimationStartRef","timeOffsetRef","random","tintVec","useMemo","hex","h","replace","trim","length","split","map","c","join","num","parseInt","hexToRgb","ditherValue","handleMouseMove","useCallback","e","ctn","current","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","useEffect","renderer","Renderer","gl","bgRgb","hexToRgbArray","clearColor","geometry","Triangle","program","Program","vertex","fragment","uniforms","iTime","value","iResolution","Color","canvas","uScale","uGridMul","Float32Array","uDigitSize","uScanlineIntensity","uGlitchAmount","uFlickerAmount","uNoiseAmp","uChromaticAberration","uDither","uCurvature","uTint","uMouse","uMouseStrength","uUseMouse","uPageLoadProgress","uUsePageLoadAnimation","uBrightness","mesh","Mesh","resize","setSize","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","update","t","requestAnimationFrame","elapsed","animationDuration","animationElapsed","progress","dampingFactor","smoothMouse","mouse","mouseUniform","render","scene","appendChild","addEventListener","_gl$getExtension","cancelAnimationFrame","disconnect","removeEventListener","parentElement","removeChild","getExtension","loseContext","_jsx","_objectSpread","ref","concat","gsap","registerPlugin","InertiaPlugin","throttle","func","limit","lastCall","now","performance","_len","arguments","args","Array","_key","apply","this","m","match","r","g","b","dotSize","gap","baseColor","activeColor","proximity","speedTrigger","shockRadius","shockStrength","maxSpeed","resistance","returnDuration","wrapperRef","canvasRef","dotsRef","pointerRef","vx","vy","speed","lastTime","lastX","lastY","baseRgb","activeRgb","circlePath","Path2D","p","arc","PI","buildGrid","wrap","ctx","getContext","cols","floor","rows","cell","startX","startY","dots","cx","cy","push","xOffset","yOffset","_inertiaApplied","rafId","proxSq","draw","clearRect","px","py","dot","ox","oy","dx","dy","dsq","sqrt","round","save","translate","fillStyle","fill","restore","ro","onClick","dist","hypot","killTweensOf","falloff","max","pushX","pushY","to","inertia","onComplete","duration","ease","throttledMove","pr","dt","passive","children","HeroWrapper","section","HeroBackground","div","HeroContent","HeroSectionFaultyTerminal","_jsxs","FaultyTerminalBackground","HeroSectionDotGrid","_ref2","DotGridBackground","scanAnimation","keyframes","infraredPulse","CameraContainer","MountingBracket","DomeCameraWrapper","CameraDome","cameraColor","_ref3","amount","toString","slice","darken","_ref4","lighten","CameraLens","_ref5","lensColor","LensGlass","LensReflection","LensInner","_templateObject10","StatusLights","_templateObject11","CameraStatus","_templateObject12","_ref6","statusColor","_ref7","InfraredLight","_templateObject13","CameraLabel","_templateObject14","ScanEffect","_templateObject15","label","showLaser","mounted","cameraLensRef","statusLightRef","lensInnerRef","centerX","centerY","offsetX","offsetY","moveX","moveY","transform","animation","setTimeout","focusInterval","setInterval","transition","size","document","clearInterval","Contact","lazy","MiddleBlock","ScrollToTop","ContentBlock","then","module","default","Home","title","IntroContent","content","button","icon","DomeCamera","id","MiddleBlockContent","AboutContent","MissionContent","ProductContent","ContactContent"],"sourceRoot":""}