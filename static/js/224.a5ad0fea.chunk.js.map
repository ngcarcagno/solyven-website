{"version":3,"file":"static/js/224.a5ad0fea.chunk.js","mappings":"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","sources":["components/DomeGallery/DomeGallery.js"],"sourcesContent":["import { useEffect, useMemo, useRef, useCallback } from \"react\";\r\nimport { useGesture } from \"@use-gesture/react\";\r\nimport \"./DomeGallery.css\";\r\n\r\nconst DEFAULT_IMAGES = [\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1755331039789-7e5680e26e8f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Abstract art\",\r\n  },\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1755569309049-98410b94f66d?q=80&w=772&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Modern sculpture\",\r\n  },\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1755497595318-7e5e3523854f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Digital artwork\",\r\n  },\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1755353985163-c2a0fe5ac3d8?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Contemporary art\",\r\n  },\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1745965976680-d00be7dc0377?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Geometric pattern\",\r\n  },\r\n  {\r\n    src: \"https://images.unsplash.com/photo-1752588975228-21f44630bb3c?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n    alt: \"Textured surface\",\r\n  },\r\n  { src: \"https://pbs.twimg.com/media/Gyla7NnXMAAXSo_?format=jpg&name=large\", alt: \"Social media image\" },\r\n];\r\n\r\nconst DEFAULTS = {\r\n  maxVerticalRotationDeg: 5,\r\n  dragSensitivity: 20,\r\n  enlargeTransitionMs: 300,\r\n  segments: 35,\r\n};\r\n\r\nconst clamp = (v, min, max) => Math.min(Math.max(v, min), max);\r\nconst normalizeAngle = (d) => ((d % 360) + 360) % 360;\r\nconst wrapAngleSigned = (deg) => {\r\n  const a = (((deg + 180) % 360) + 360) % 360;\r\n  return a - 180;\r\n};\r\nconst getDataNumber = (el, name, fallback) => {\r\n  const attr = el.dataset[name] ?? el.getAttribute(`data-${name}`);\r\n  const n = attr == null ? NaN : parseFloat(attr);\r\n  return Number.isFinite(n) ? n : fallback;\r\n};\r\n\r\nfunction buildItems(pool, seg) {\r\n  const xCols = Array.from({ length: seg }, (_, i) => -37 + i * 2);\r\n  const evenYs = [-4, -2, 0, 2, 4];\r\n  const oddYs = [-3, -1, 1, 3, 5];\r\n\r\n  const coords = xCols.flatMap((x, c) => {\r\n    const ys = c % 2 === 0 ? evenYs : oddYs;\r\n    return ys.map((y) => ({ x, y, sizeX: 2, sizeY: 2 }));\r\n  });\r\n\r\n  const totalSlots = coords.length;\r\n  if (pool.length === 0) {\r\n    return coords.map((c) => ({ ...c, src: \"\", alt: \"\" }));\r\n  }\r\n  if (pool.length > totalSlots) {\r\n    console.warn(\r\n      `[DomeGallery] Provided image count (${pool.length}) exceeds available tiles (${totalSlots}). Some images will not be shown.`\r\n    );\r\n  }\r\n\r\n  const normalizedImages = pool.map((image) => {\r\n    if (typeof image === \"string\") {\r\n      return { src: image, alt: \"\" };\r\n    }\r\n    return { src: image.src || \"\", alt: image.alt || \"\" };\r\n  });\r\n\r\n  const usedImages = Array.from({ length: totalSlots }, (_, i) => normalizedImages[i % normalizedImages.length]);\r\n\r\n  for (let i = 1; i < usedImages.length; i++) {\r\n    if (usedImages[i].src === usedImages[i - 1].src) {\r\n      for (let j = i + 1; j < usedImages.length; j++) {\r\n        if (usedImages[j].src !== usedImages[i].src) {\r\n          const tmp = usedImages[i];\r\n          usedImages[i] = usedImages[j];\r\n          usedImages[j] = tmp;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return coords.map((c, i) => ({\r\n    ...c,\r\n    src: usedImages[i].src,\r\n    alt: usedImages[i].alt,\r\n  }));\r\n}\r\n\r\nfunction computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments) {\r\n  const unit = 360 / segments / 2;\r\n  const rotateY = unit * (offsetX + (sizeX - 1) / 2);\r\n  const rotateX = unit * (offsetY - (sizeY - 1) / 2);\r\n  return { rotateX, rotateY };\r\n}\r\n\r\nexport default function DomeGallery({\r\n  images = DEFAULT_IMAGES,\r\n  fit = 0.5,\r\n  fitBasis = \"auto\",\r\n  minRadius = 600,\r\n  maxRadius = Infinity,\r\n  padFactor = 0.25,\r\n  // overlay color used by decorative gradients; default to transparent to avoid purple backdrop\r\n  overlayBlurColor = \"transparent\",\r\n  maxVerticalRotationDeg = DEFAULTS.maxVerticalRotationDeg,\r\n  dragSensitivity = DEFAULTS.dragSensitivity,\r\n  enlargeTransitionMs = DEFAULTS.enlargeTransitionMs,\r\n  segments = DEFAULTS.segments,\r\n  dragDampening = 2,\r\n  openedImageWidth = \"250px\",\r\n  openedImageHeight = \"350px\",\r\n  imageBorderRadius = \"30px\",\r\n  openedImageBorderRadius = \"30px\",\r\n  grayscale = true,\r\n}) {\r\n  const rootRef = useRef(null);\r\n  const mainRef = useRef(null);\r\n  const sphereRef = useRef(null);\r\n  const frameRef = useRef(null);\r\n  const viewerRef = useRef(null);\r\n  const scrimRef = useRef(null);\r\n  const focusedElRef = useRef(null);\r\n  const originalTilePositionRef = useRef(null);\r\n\r\n  const rotationRef = useRef({ x: 0, y: 0 });\r\n  const startRotRef = useRef({ x: 0, y: 0 });\r\n  const startPosRef = useRef(null);\r\n  const draggingRef = useRef(false);\r\n  const movedRef = useRef(false);\r\n  const inertiaRAF = useRef(null);\r\n  const openingRef = useRef(false);\r\n  const openStartedAtRef = useRef(0);\r\n  const lastDragEndAt = useRef(0);\r\n\r\n  const scrollLockedRef = useRef(false);\r\n  const lockScroll = useCallback(() => {\r\n    if (scrollLockedRef.current) return;\r\n    scrollLockedRef.current = true;\r\n    document.body.classList.add(\"dg-scroll-lock\");\r\n  }, []);\r\n  const unlockScroll = useCallback(() => {\r\n    if (!scrollLockedRef.current) return;\r\n    if (rootRef.current?.getAttribute(\"data-enlarging\") === \"true\") return;\r\n    scrollLockedRef.current = false;\r\n    document.body.classList.remove(\"dg-scroll-lock\");\r\n  }, []);\r\n\r\n  const items = useMemo(() => buildItems(images, segments), [images, segments]);\r\n\r\n  const applyTransform = (xDeg, yDeg) => {\r\n    const el = sphereRef.current;\r\n    if (el) {\r\n      el.style.transform = `translateZ(calc(var(--radius) * -1)) rotateX(${xDeg}deg) rotateY(${yDeg}deg)`;\r\n    }\r\n  };\r\n\r\n  const lockedRadiusRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const root = rootRef.current;\r\n    if (!root) return;\r\n    const ro = new ResizeObserver((entries) => {\r\n      const cr = entries[0].contentRect;\r\n      const w = Math.max(1, cr.width),\r\n        h = Math.max(1, cr.height);\r\n      const minDim = Math.min(w, h),\r\n        maxDim = Math.max(w, h),\r\n        aspect = w / h;\r\n      let basis;\r\n      switch (fitBasis) {\r\n        case \"min\":\r\n          basis = minDim;\r\n          break;\r\n        case \"max\":\r\n          basis = maxDim;\r\n          break;\r\n        case \"width\":\r\n          basis = w;\r\n          break;\r\n        case \"height\":\r\n          basis = h;\r\n          break;\r\n        default:\r\n          basis = aspect >= 1.3 ? w : minDim;\r\n      }\r\n      let radius = basis * fit;\r\n      const heightGuard = h * 1.35;\r\n      radius = Math.min(radius, heightGuard);\r\n      radius = clamp(radius, minRadius, maxRadius);\r\n      lockedRadiusRef.current = Math.round(radius);\r\n\r\n      const viewerPad = Math.max(8, Math.round(minDim * padFactor));\r\n      root.style.setProperty(\"--radius\", `${lockedRadiusRef.current}px`);\r\n      root.style.setProperty(\"--viewer-pad\", `${viewerPad}px`);\r\n      root.style.setProperty(\"--overlay-blur-color\", overlayBlurColor);\r\n      root.style.setProperty(\"--tile-radius\", imageBorderRadius);\r\n      root.style.setProperty(\"--enlarge-radius\", openedImageBorderRadius);\r\n      root.style.setProperty(\"--image-filter\", grayscale ? \"grayscale(1)\" : \"none\");\r\n      applyTransform(rotationRef.current.x, rotationRef.current.y);\r\n\r\n      const enlargedOverlay = viewerRef.current?.querySelector(\".enlarge\");\r\n      if (enlargedOverlay && frameRef.current && mainRef.current) {\r\n        const frameR = frameRef.current.getBoundingClientRect();\r\n        const mainR = mainRef.current.getBoundingClientRect();\r\n\r\n        const hasCustomSize = openedImageWidth && openedImageHeight;\r\n        if (hasCustomSize) {\r\n          const tempDiv = document.createElement(\"div\");\r\n          tempDiv.style.cssText = `position: absolute; width: ${openedImageWidth}; height: ${openedImageHeight}; visibility: hidden;`;\r\n          document.body.appendChild(tempDiv);\r\n          const tempRect = tempDiv.getBoundingClientRect();\r\n          document.body.removeChild(tempDiv);\r\n\r\n          const centeredLeft = frameR.left - mainR.left + (frameR.width - tempRect.width) / 2;\r\n          const centeredTop = frameR.top - mainR.top + (frameR.height - tempRect.height) / 2;\r\n\r\n          enlargedOverlay.style.left = `${centeredLeft}px`;\r\n          enlargedOverlay.style.top = `${centeredTop}px`;\r\n        } else {\r\n          enlargedOverlay.style.left = `${frameR.left - mainR.left}px`;\r\n          enlargedOverlay.style.top = `${frameR.top - mainR.top}px`;\r\n          enlargedOverlay.style.width = `${frameR.width}px`;\r\n          enlargedOverlay.style.height = `${frameR.height}px`;\r\n        }\r\n      }\r\n    });\r\n    ro.observe(root);\r\n    return () => ro.disconnect();\r\n  }, [\r\n    fit,\r\n    fitBasis,\r\n    minRadius,\r\n    maxRadius,\r\n    padFactor,\r\n    overlayBlurColor,\r\n    grayscale,\r\n    imageBorderRadius,\r\n    openedImageBorderRadius,\r\n    openedImageWidth,\r\n    openedImageHeight,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    applyTransform(rotationRef.current.x, rotationRef.current.y);\r\n  }, []);\r\n\r\n  const stopInertia = useCallback(() => {\r\n    if (inertiaRAF.current) {\r\n      cancelAnimationFrame(inertiaRAF.current);\r\n      inertiaRAF.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const startInertia = useCallback(\r\n    (vx, vy) => {\r\n      const MAX_V = 1.4;\r\n      let vX = clamp(vx, -MAX_V, MAX_V) * 80;\r\n      let vY = clamp(vy, -MAX_V, MAX_V) * 80;\r\n      let frames = 0;\r\n      const d = clamp(dragDampening ?? 0.6, 0, 1);\r\n      const frictionMul = 0.94 + 0.055 * d;\r\n      const stopThreshold = 0.015 - 0.01 * d;\r\n      const maxFrames = Math.round(90 + 270 * d);\r\n      const step = () => {\r\n        vX *= frictionMul;\r\n        vY *= frictionMul;\r\n        if (Math.abs(vX) < stopThreshold && Math.abs(vY) < stopThreshold) {\r\n          inertiaRAF.current = null;\r\n          return;\r\n        }\r\n        if (++frames > maxFrames) {\r\n          inertiaRAF.current = null;\r\n          return;\r\n        }\r\n        const nextX = clamp(rotationRef.current.x - vY / 200, -maxVerticalRotationDeg, maxVerticalRotationDeg);\r\n        const nextY = wrapAngleSigned(rotationRef.current.y + vX / 200);\r\n        rotationRef.current = { x: nextX, y: nextY };\r\n        applyTransform(nextX, nextY);\r\n        inertiaRAF.current = requestAnimationFrame(step);\r\n      };\r\n      stopInertia();\r\n      inertiaRAF.current = requestAnimationFrame(step);\r\n    },\r\n    [dragDampening, maxVerticalRotationDeg, stopInertia]\r\n  );\r\n\r\n  useGesture(\r\n    {\r\n      onDragStart: ({ event }) => {\r\n        if (focusedElRef.current) return;\r\n        stopInertia();\r\n        const evt = event;\r\n        draggingRef.current = true;\r\n        movedRef.current = false;\r\n        startRotRef.current = { ...rotationRef.current };\r\n        startPosRef.current = { x: evt.clientX, y: evt.clientY };\r\n      },\r\n      onDrag: ({ event, last, velocity = [0, 0], direction = [0, 0], movement }) => {\r\n        if (focusedElRef.current || !draggingRef.current || !startPosRef.current) return;\r\n        const evt = event;\r\n        const dxTotal = evt.clientX - startPosRef.current.x;\r\n        const dyTotal = evt.clientY - startPosRef.current.y;\r\n        if (!movedRef.current) {\r\n          const dist2 = dxTotal * dxTotal + dyTotal * dyTotal;\r\n          if (dist2 > 16) movedRef.current = true;\r\n        }\r\n        const nextX = clamp(\r\n          startRotRef.current.x - dyTotal / dragSensitivity,\r\n          -maxVerticalRotationDeg,\r\n          maxVerticalRotationDeg\r\n        );\r\n        const nextY = wrapAngleSigned(startRotRef.current.y + dxTotal / dragSensitivity);\r\n        if (rotationRef.current.x !== nextX || rotationRef.current.y !== nextY) {\r\n          rotationRef.current = { x: nextX, y: nextY };\r\n          applyTransform(nextX, nextY);\r\n        }\r\n        if (last) {\r\n          draggingRef.current = false;\r\n          let [vMagX, vMagY] = velocity;\r\n          const [dirX, dirY] = direction;\r\n          let vx = vMagX * dirX;\r\n          let vy = vMagY * dirY;\r\n          if (Math.abs(vx) < 0.001 && Math.abs(vy) < 0.001 && Array.isArray(movement)) {\r\n            const [mx, my] = movement;\r\n            vx = clamp((mx / dragSensitivity) * 0.02, -1.2, 1.2);\r\n            vy = clamp((my / dragSensitivity) * 0.02, -1.2, 1.2);\r\n          }\r\n          if (Math.abs(vx) > 0.005 || Math.abs(vy) > 0.005) startInertia(vx, vy);\r\n          if (movedRef.current) lastDragEndAt.current = performance.now();\r\n          movedRef.current = false;\r\n        }\r\n      },\r\n    },\r\n    { target: mainRef, eventOptions: { passive: true } }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const scrim = scrimRef.current;\r\n    if (!scrim) return;\r\n    const close = () => {\r\n      if (performance.now() - openStartedAtRef.current < 250) return;\r\n      const el = focusedElRef.current;\r\n      if (!el) return;\r\n      const parent = el.parentElement;\r\n      const overlay = viewerRef.current?.querySelector(\".enlarge\");\r\n      if (!overlay) return;\r\n      const refDiv = parent.querySelector(\".item__image--reference\");\r\n      const originalPos = originalTilePositionRef.current;\r\n      if (!originalPos) {\r\n        overlay.remove();\r\n        if (refDiv) refDiv.remove();\r\n        parent.style.setProperty(\"--rot-y-delta\", \"0deg\");\r\n        parent.style.setProperty(\"--rot-x-delta\", \"0deg\");\r\n        el.style.visibility = \"\";\r\n        el.style.zIndex = 0;\r\n        focusedElRef.current = null;\r\n        rootRef.current?.removeAttribute(\"data-enlarging\");\r\n        openingRef.current = false;\r\n        unlockScroll();\r\n        return;\r\n      }\r\n      const currentRect = overlay.getBoundingClientRect();\r\n      const rootRect = rootRef.current.getBoundingClientRect();\r\n      const originalPosRelativeToRoot = {\r\n        left: originalPos.left - rootRect.left,\r\n        top: originalPos.top - rootRect.top,\r\n        width: originalPos.width,\r\n        height: originalPos.height,\r\n      };\r\n      const overlayRelativeToRoot = {\r\n        left: currentRect.left - rootRect.left,\r\n        top: currentRect.top - rootRect.top,\r\n        width: currentRect.width,\r\n        height: currentRect.height,\r\n      };\r\n      const animatingOverlay = document.createElement(\"div\");\r\n      animatingOverlay.className = \"enlarge-closing\";\r\n      animatingOverlay.style.cssText = `position:absolute;left:${overlayRelativeToRoot.left}px;top:${overlayRelativeToRoot.top}px;width:${overlayRelativeToRoot.width}px;height:${overlayRelativeToRoot.height}px;z-index:9999;border-radius: var(--enlarge-radius, 32px);overflow:hidden;box-shadow:0 10px 30px rgba(0,0,0,.35);transition:all ${enlargeTransitionMs}ms ease-out;pointer-events:none;margin:0;transform:none;`;\r\n      const originalImg = overlay.querySelector(\"img\");\r\n      if (originalImg) {\r\n        const img = originalImg.cloneNode();\r\n        img.style.cssText = \"width:100%;height:100%;object-fit:cover;\";\r\n        animatingOverlay.appendChild(img);\r\n      }\r\n      overlay.remove();\r\n      rootRef.current.appendChild(animatingOverlay);\r\n      void animatingOverlay.getBoundingClientRect();\r\n      requestAnimationFrame(() => {\r\n        animatingOverlay.style.left = originalPosRelativeToRoot.left + \"px\";\r\n        animatingOverlay.style.top = originalPosRelativeToRoot.top + \"px\";\r\n        animatingOverlay.style.width = originalPosRelativeToRoot.width + \"px\";\r\n        animatingOverlay.style.height = originalPosRelativeToRoot.height + \"px\";\r\n        animatingOverlay.style.opacity = \"0\";\r\n      });\r\n      const cleanup = () => {\r\n        animatingOverlay.remove();\r\n        originalTilePositionRef.current = null;\r\n        if (refDiv) refDiv.remove();\r\n        parent.style.transition = \"none\";\r\n        el.style.transition = \"none\";\r\n        parent.style.setProperty(\"--rot-y-delta\", \"0deg\");\r\n        parent.style.setProperty(\"--rot-x-delta\", \"0deg\");\r\n        requestAnimationFrame(() => {\r\n          el.style.visibility = \"\";\r\n          el.style.opacity = \"0\";\r\n          el.style.zIndex = 0;\r\n          focusedElRef.current = null;\r\n          rootRef.current?.removeAttribute(\"data-enlarging\");\r\n          requestAnimationFrame(() => {\r\n            parent.style.transition = \"\";\r\n            el.style.transition = \"opacity 300ms ease-out\";\r\n            requestAnimationFrame(() => {\r\n              el.style.opacity = \"1\";\r\n              setTimeout(() => {\r\n                el.style.transition = \"\";\r\n                el.style.opacity = \"\";\r\n                openingRef.current = false;\r\n                if (!draggingRef.current && rootRef.current?.getAttribute(\"data-enlarging\") !== \"true\")\r\n                  document.body.classList.remove(\"dg-scroll-lock\");\r\n              }, 300);\r\n            });\r\n          });\r\n        });\r\n      };\r\n      animatingOverlay.addEventListener(\"transitionend\", cleanup, { once: true });\r\n    };\r\n    scrim.addEventListener(\"click\", close);\r\n    const onKey = (e) => {\r\n      if (e.key === \"Escape\") close();\r\n    };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => {\r\n      scrim.removeEventListener(\"click\", close);\r\n      window.removeEventListener(\"keydown\", onKey);\r\n    };\r\n  }, [enlargeTransitionMs, unlockScroll]);\r\n\r\n  const openItemFromElement = useCallback(\r\n    (el) => {\r\n      if (openingRef.current) return;\r\n      openingRef.current = true;\r\n      openStartedAtRef.current = performance.now();\r\n      lockScroll();\r\n      const parent = el.parentElement;\r\n      focusedElRef.current = el;\r\n      el.setAttribute(\"data-focused\", \"true\");\r\n      const offsetX = getDataNumber(parent, \"offsetX\", 0);\r\n      const offsetY = getDataNumber(parent, \"offsetY\", 0);\r\n      const sizeX = getDataNumber(parent, \"sizeX\", 2);\r\n      const sizeY = getDataNumber(parent, \"sizeY\", 2);\r\n      const parentRot = computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments);\r\n      const parentY = normalizeAngle(parentRot.rotateY);\r\n      const globalY = normalizeAngle(rotationRef.current.y);\r\n      let rotY = -(parentY + globalY) % 360;\r\n      if (rotY < -180) rotY += 360;\r\n      const rotX = -parentRot.rotateX - rotationRef.current.x;\r\n      parent.style.setProperty(\"--rot-y-delta\", `${rotY}deg`);\r\n      parent.style.setProperty(\"--rot-x-delta\", `${rotX}deg`);\r\n      const refDiv = document.createElement(\"div\");\r\n      refDiv.className = \"item__image item__image--reference\";\r\n      refDiv.style.opacity = \"0\";\r\n      refDiv.style.transform = `rotateX(${-parentRot.rotateX}deg) rotateY(${-parentRot.rotateY}deg)`;\r\n      parent.appendChild(refDiv);\r\n      const tileR = refDiv.getBoundingClientRect();\r\n      const mainR = mainRef.current.getBoundingClientRect();\r\n      const frameR = frameRef.current.getBoundingClientRect();\r\n      originalTilePositionRef.current = { left: tileR.left, top: tileR.top, width: tileR.width, height: tileR.height };\r\n      el.style.visibility = \"hidden\";\r\n      el.style.zIndex = 0;\r\n      const overlay = document.createElement(\"div\");\r\n      overlay.className = \"enlarge\";\r\n      overlay.style.position = \"absolute\";\r\n      overlay.style.left = frameR.left - mainR.left + \"px\";\r\n      overlay.style.top = frameR.top - mainR.top + \"px\";\r\n      overlay.style.width = frameR.width + \"px\";\r\n      overlay.style.height = frameR.height + \"px\";\r\n      overlay.style.opacity = \"0\";\r\n      overlay.style.zIndex = \"30\";\r\n      overlay.style.willChange = \"transform, opacity\";\r\n      overlay.style.transformOrigin = \"top left\";\r\n      overlay.style.transition = `transform ${enlargeTransitionMs}ms ease, opacity ${enlargeTransitionMs}ms ease`;\r\n      const rawSrc = parent.dataset.src || el.querySelector(\"img\")?.src || \"\";\r\n      const img = document.createElement(\"img\");\r\n      img.src = rawSrc;\r\n      overlay.appendChild(img);\r\n      viewerRef.current.appendChild(overlay);\r\n      const tx0 = tileR.left - frameR.left;\r\n      const ty0 = tileR.top - frameR.top;\r\n      const sx0 = tileR.width / frameR.width;\r\n      const sy0 = tileR.height / frameR.height;\r\n      overlay.style.transform = `translate(${tx0}px, ${ty0}px) scale(${sx0}, ${sy0})`;\r\n      requestAnimationFrame(() => {\r\n        overlay.style.opacity = \"1\";\r\n        overlay.style.transform = \"translate(0px, 0px) scale(1,1)\";\r\n        rootRef.current?.setAttribute(\"data-enlarging\", \"true\");\r\n      });\r\n      const wantsResize = openedImageWidth || openedImageHeight;\r\n      if (wantsResize) {\r\n        const onFirstEnd = (ev) => {\r\n          if (ev.propertyName !== \"transform\") return;\r\n          overlay.removeEventListener(\"transitionend\", onFirstEnd);\r\n          const prevTransition = overlay.style.transition;\r\n          overlay.style.transition = \"none\";\r\n          const tempWidth = openedImageWidth || `${frameR.width}px`;\r\n          const tempHeight = openedImageHeight || `${frameR.height}px`;\r\n          overlay.style.width = tempWidth;\r\n          overlay.style.height = tempHeight;\r\n          const newRect = overlay.getBoundingClientRect();\r\n          overlay.style.width = frameR.width + \"px\";\r\n          overlay.style.height = frameR.height + \"px\";\r\n          void overlay.offsetWidth;\r\n          overlay.style.transition = `left ${enlargeTransitionMs}ms ease, top ${enlargeTransitionMs}ms ease, width ${enlargeTransitionMs}ms ease, height ${enlargeTransitionMs}ms ease`;\r\n          const centeredLeft = frameR.left - mainR.left + (frameR.width - newRect.width) / 2;\r\n          const centeredTop = frameR.top - mainR.top + (frameR.height - newRect.height) / 2;\r\n          requestAnimationFrame(() => {\r\n            overlay.style.left = `${centeredLeft}px`;\r\n            overlay.style.top = `${centeredTop}px`;\r\n            overlay.style.width = tempWidth;\r\n            overlay.style.height = tempHeight;\r\n          });\r\n          const cleanupSecond = () => {\r\n            overlay.removeEventListener(\"transitionend\", cleanupSecond);\r\n            overlay.style.transition = prevTransition;\r\n          };\r\n          overlay.addEventListener(\"transitionend\", cleanupSecond, { once: true });\r\n        };\r\n        overlay.addEventListener(\"transitionend\", onFirstEnd);\r\n      }\r\n    },\r\n    [enlargeTransitionMs, lockScroll, openedImageHeight, openedImageWidth, segments]\r\n  );\r\n\r\n  const onTileClick = useCallback(\r\n    (e) => {\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  const onTilePointerUp = useCallback(\r\n    (e) => {\r\n      if (e.pointerType !== \"touch\") return;\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  const onTileTouchEnd = useCallback(\r\n    (e) => {\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      document.body.classList.remove(\"dg-scroll-lock\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      className=\"sphere-root\"\r\n      style={{\r\n        \"--segments-x\": segments,\r\n        \"--segments-y\": segments,\r\n        \"--overlay-blur-color\": overlayBlurColor,\r\n        \"--tile-radius\": imageBorderRadius,\r\n        \"--enlarge-radius\": openedImageBorderRadius,\r\n        \"--image-filter\": grayscale ? \"grayscale(1)\" : \"none\",\r\n      }}>\r\n      <main ref={mainRef} className=\"sphere-main\">\r\n        <div className=\"stage\">\r\n          <div ref={sphereRef} className=\"sphere\">\r\n            {items.map((it, i) => (\r\n              <div\r\n                key={`${it.x},${it.y},${i}`}\r\n                className=\"item\"\r\n                data-src={it.src}\r\n                data-offset-x={it.x}\r\n                data-offset-y={it.y}\r\n                data-size-x={it.sizeX}\r\n                data-size-y={it.sizeY}\r\n                style={{\r\n                  \"--offset-x\": it.x,\r\n                  \"--offset-y\": it.y,\r\n                  \"--item-size-x\": it.sizeX,\r\n                  \"--item-size-y\": it.sizeY,\r\n                }}>\r\n                <div\r\n                  className=\"item__image\"\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                  aria-label={it.alt || \"Open image\"}\r\n                  onClick={onTileClick}\r\n                  onPointerUp={onTilePointerUp}\r\n                  onTouchEnd={onTileTouchEnd}>\r\n                  <img src={it.src} draggable={false} alt={it.alt} />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"overlay\" />\r\n        <div className=\"overlay overlay--blur\" />\r\n        <div className=\"edge-fade edge-fade--top\" />\r\n        <div className=\"edge-fade edge-fade--bottom\" />\r\n\r\n        <div className=\"viewer\" ref={viewerRef}>\r\n          <div ref={scrimRef} className=\"scrim\" />\r\n          <div ref={frameRef} className=\"frame\" />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["DEFAULT_IMAGES","src","alt","DEFAULTS","maxVerticalRotationDeg","dragSensitivity","enlargeTransitionMs","segments","clamp","v","min","max","Math","normalizeAngle","d","wrapAngleSigned","deg","getDataNumber","el","name","fallback","_el$dataset$name","attr","dataset","getAttribute","concat","n","NaN","parseFloat","Number","isFinite","DomeGallery","_ref","images","fit","fitBasis","minRadius","maxRadius","Infinity","padFactor","overlayBlurColor","dragDampening","openedImageWidth","openedImageHeight","imageBorderRadius","openedImageBorderRadius","grayscale","rootRef","useRef","mainRef","sphereRef","frameRef","viewerRef","scrimRef","focusedElRef","originalTilePositionRef","rotationRef","x","y","startRotRef","startPosRef","draggingRef","movedRef","inertiaRAF","openingRef","openStartedAtRef","lastDragEndAt","scrollLockedRef","lockScroll","useCallback","current","document","body","classList","add","unlockScroll","_rootRef$current","remove","items","useMemo","pool","seg","xCols","Array","from","length","_","i","evenYs","oddYs","coords","flatMap","c","map","sizeX","sizeY","totalSlots","_objectSpread","console","warn","normalizedImages","image","usedImages","j","tmp","buildItems","applyTransform","xDeg","yDeg","style","transform","lockedRadiusRef","useEffect","root","ro","ResizeObserver","entries","_viewerRef$current","cr","contentRect","w","width","h","height","minDim","maxDim","aspect","basis","radius","heightGuard","round","viewerPad","setProperty","enlargedOverlay","querySelector","frameR","getBoundingClientRect","mainR","tempDiv","createElement","cssText","appendChild","tempRect","removeChild","centeredLeft","left","centeredTop","top","observe","disconnect","stopInertia","cancelAnimationFrame","startInertia","vx","vy","MAX_V","vX","vY","frames","frictionMul","stopThreshold","maxFrames","step","abs","nextX","nextY","requestAnimationFrame","useGesture","onDragStart","_ref2","event","evt","clientX","clientY","onDrag","_ref3","last","velocity","direction","movement","dxTotal","dyTotal","vMagX","vMagY","dirX","dirY","isArray","mx","my","performance","now","target","eventOptions","passive","scrim","close","_viewerRef$current2","parent","parentElement","overlay","refDiv","originalPos","_rootRef$current2","visibility","zIndex","removeAttribute","currentRect","rootRect","originalPosRelativeToRoot","overlayRelativeToRoot","animatingOverlay","className","originalImg","img","cloneNode","opacity","addEventListener","cleanup","transition","_rootRef$current3","setTimeout","_rootRef$current4","once","onKey","e","key","window","removeEventListener","openItemFromElement","_el$querySelector","setAttribute","parentRot","offsetX","offsetY","unit","rotateX","rotateY","computeItemBaseRotation","rotY","rotX","tileR","position","willChange","transformOrigin","rawSrc","tx0","ty0","sx0","sy0","_rootRef$current5","onFirstEnd","ev","propertyName","prevTransition","tempWidth","tempHeight","newRect","offsetWidth","cleanupSecond","onTileClick","currentTarget","onTilePointerUp","pointerType","onTileTouchEnd","_jsx","ref","children","_jsxs","it","role","tabIndex","onClick","onPointerUp","onTouchEnd","draggable"],"sourceRoot":""}