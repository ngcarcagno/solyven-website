{"version":3,"file":"static/js/756.69f9070b.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/Backgrounds/DotGrid/DotGrid.js","components/Backgrounds/GridDistortion/GridDistortion.js","components/BackgroundWrapper/BackgroundWrapper.tsx","components/BackgroundWrapper/index.tsx","pages/Home/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ScrollSnapContainer = styled(\"div\")`\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  scroll-snap-type: y mandatory;\r\n  -webkit-overflow-scrolling: touch;\r\n  scroll-behavior: smooth;\r\n\r\n  /* Oculta scrollbars en algunos navegadores */\r\n  scrollbar-width: none; /* Firefox */\r\n  &::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari */\r\n  }\r\n`;\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  min-height: var(--content-min-height);\r\n  scroll-snap-align: start;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: var(--content-padding);\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: var(--content-padding-mobile);\r\n  }\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : direction === \"right\" ? \"row-reverse\" : \"column\"};\r\n\r\n  ${({ direction }: { direction: string }) =>\r\n    direction === \"center\" &&\r\n    `\r\n      text-align: center;\r\n    `}\r\n`;\r\n\r\n/* ========================================\r\n   WRAPPER DEL CONTENIDO\r\n   Contiene: título principal (h6), contenido (p), botones/servicios\r\n   \r\n   NOTA IMPORTANTE: El título principal (h6) se estiliza \r\n   GLOBALMENTE en src/styles/styles.ts líneas 115-130\r\n   No tiene estilos específicos aquí.\r\n   ======================================== */\r\nexport const ContentWrapper = styled(\"div\")<{ $centered?: boolean }>`\r\n  position: relative;\r\n  max-width: ${({ $centered }) => ($centered ? \"570px\" : \"var(--content-wrapper-max-width)\")};\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: ${({ $centered }) => ($centered ? \"100%\" : \"var(--content-wrapper-max-width)\")};\r\n  }\r\n`;\r\n\r\n/* ========================================\r\n   SERVICE SECTIONS (cuando direction no es \"right\")\r\n   ======================================== */\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\n/* ========================================\r\n   PÁRRAFO PRINCIPAL DEL CONTENIDO\r\n   Aparece debajo del título principal (h6)\r\n   ======================================== */\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  font-size: var(--size-body);\r\n  color: var(--color-text-primary);\r\n`;\r\n\r\n/* ========================================\r\n   TÍTULOS PEQUEÑOS DE SERVICIOS\r\n   Solo para elementos dentro de ServiceWrapper\r\n   ======================================== */\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: var(--size-min-title);\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: var(--color-text-primary);\r\n  font-family: var(--font-base);\r\n`;\r\n\r\n/* ========================================\r\n   PÁRRAFOS PEQUEÑOS DE SERVICIOS\r\n   Solo para elementos dentro de ServiceWrapper\r\n   ======================================== */\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: var(--size-min-para);\r\n  color: var(--color-text-primary);\r\n`;\r\n\r\n/* ========================================\r\n   WRAPPER DE BOTONES\r\n   Solo aparece cuando direction === \"right\"\r\n   Comportamiento:\r\n   - Normal: space-between con max-width 80%\r\n   - Centrado: center con max-width 100% y gap\r\n   ======================================== */\r\nexport const ButtonWrapper = styled(\"div\")<{ $centered?: boolean }>`\r\n  display: flex;\r\n  justify-content: ${({ $centered }) => ($centered ? \"center\" : \"space-between\")};\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: ${({ $centered }) => ($centered ? \"100%\" : \"80%\")};\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: ${({ $centered }) => ($centered ? \"0\" : \"20px\")};\r\n  }\r\n\r\n  ${({ $centered }) =>\r\n    $centered &&\r\n    `\r\n    gap: 20px;\r\n    align-items: center;\r\n  `}\r\n`;\r\n","\"use client\";\r\nimport { useRef, useEffect, useCallback, useMemo } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\r\n\r\nimport \"./DotGrid.css\";\r\n\r\ngsap.registerPlugin(InertiaPlugin);\r\n\r\nconst throttle = (func, limit) => {\r\n  let lastCall = 0;\r\n  return function (...args) {\r\n    const now = performance.now();\r\n    if (now - lastCall >= limit) {\r\n      lastCall = now;\r\n      func.apply(this, args);\r\n    }\r\n  };\r\n};\r\n\r\nfunction hexToRgb(hex) {\r\n  const m = hex.match(/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i);\r\n  if (!m) return { r: 0, g: 0, b: 0 };\r\n  return {\r\n    r: parseInt(m[1], 16),\r\n    g: parseInt(m[2], 16),\r\n    b: parseInt(m[3], 16),\r\n  };\r\n}\r\n\r\nconst DotGrid = ({\r\n  dotSize = 16,\r\n  gap = 32,\r\n  baseColor = \"#5227FF\",\r\n  activeColor = \"#5227FF\",\r\n  proximity = 150,\r\n  speedTrigger = 100,\r\n  shockRadius = 250,\r\n  shockStrength = 5,\r\n  maxSpeed = 5000,\r\n  resistance = 750,\r\n  returnDuration = 1.5,\r\n  className = \"\",\r\n  style,\r\n}) => {\r\n  const wrapperRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const dotsRef = useRef([]);\r\n  const pointerRef = useRef({\r\n    x: 0,\r\n    y: 0,\r\n    vx: 0,\r\n    vy: 0,\r\n    speed: 0,\r\n    lastTime: 0,\r\n    lastX: 0,\r\n    lastY: 0,\r\n  });\r\n\r\n  const baseRgb = useMemo(() => hexToRgb(baseColor), [baseColor]);\r\n  const activeRgb = useMemo(() => hexToRgb(activeColor), [activeColor]);\r\n\r\n  const circlePath = useMemo(() => {\r\n    if (typeof window === \"undefined\" || !window.Path2D) return null;\r\n\r\n    const p = new window.Path2D();\r\n    p.arc(0, 0, dotSize / 2, 0, Math.PI * 2);\r\n    return p;\r\n  }, [dotSize]);\r\n\r\n  const buildGrid = useCallback(() => {\r\n    const wrap = wrapperRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (!wrap || !canvas) return;\r\n\r\n    const { width, height } = wrap.getBoundingClientRect();\r\n    const dpr = window.devicePixelRatio || 1;\r\n\r\n    canvas.width = width * dpr;\r\n    canvas.height = height * dpr;\r\n    canvas.style.width = `${width}px`;\r\n    canvas.style.height = `${height}px`;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx) ctx.scale(dpr, dpr);\r\n\r\n    const cols = Math.floor((width + gap) / (dotSize + gap));\r\n    const rows = Math.floor((height + gap) / (dotSize + gap));\r\n    const cell = dotSize + gap;\r\n\r\n    const gridW = cell * cols - gap;\r\n    const gridH = cell * rows - gap;\r\n\r\n    const extraX = width - gridW;\r\n    const extraY = height - gridH;\r\n\r\n    const startX = extraX / 2 + dotSize / 2;\r\n    const startY = extraY / 2 + dotSize / 2;\r\n\r\n    const dots = [];\r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < cols; x++) {\r\n        const cx = startX + x * cell;\r\n        const cy = startY + y * cell;\r\n        dots.push({ cx, cy, xOffset: 0, yOffset: 0, _inertiaApplied: false });\r\n      }\r\n    }\r\n    dotsRef.current = dots;\r\n  }, [dotSize, gap]);\r\n\r\n  useEffect(() => {\r\n    if (!circlePath) return;\r\n\r\n    let rafId;\r\n    const proxSq = proximity * proximity;\r\n\r\n    const draw = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const { x: px, y: py } = pointerRef.current;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const ox = dot.cx + dot.xOffset;\r\n        const oy = dot.cy + dot.yOffset;\r\n        const dx = dot.cx - px;\r\n        const dy = dot.cy - py;\r\n        const dsq = dx * dx + dy * dy;\r\n\r\n        let style = baseColor;\r\n        if (dsq <= proxSq) {\r\n          const dist = Math.sqrt(dsq);\r\n          const t = 1 - dist / proximity;\r\n          const r = Math.round(baseRgb.r + (activeRgb.r - baseRgb.r) * t);\r\n          const g = Math.round(baseRgb.g + (activeRgb.g - baseRgb.g) * t);\r\n          const b = Math.round(baseRgb.b + (activeRgb.b - baseRgb.b) * t);\r\n          style = `rgb(${r},${g},${b})`;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(ox, oy);\r\n        ctx.fillStyle = style;\r\n        ctx.fill(circlePath);\r\n        ctx.restore();\r\n      }\r\n\r\n      rafId = requestAnimationFrame(draw);\r\n    };\r\n\r\n    draw();\r\n    return () => cancelAnimationFrame(rafId);\r\n  }, [proximity, baseColor, activeRgb, baseRgb, circlePath]);\r\n\r\n  useEffect(() => {\r\n    buildGrid();\r\n    let ro = null;\r\n    if (\"ResizeObserver\" in window) {\r\n      ro = new ResizeObserver(buildGrid);\r\n      wrapperRef.current && ro.observe(wrapperRef.current);\r\n    } else {\r\n      window.addEventListener(\"resize\", buildGrid);\r\n    }\r\n    return () => {\r\n      if (ro) ro.disconnect();\r\n      else window.removeEventListener(\"resize\", buildGrid);\r\n    };\r\n  }, [buildGrid]);\r\n\r\n  useEffect(() => {\r\n    const onMove = (e) => {\r\n      const now = performance.now();\r\n      const pr = pointerRef.current;\r\n      const dt = pr.lastTime ? now - pr.lastTime : 16;\r\n      const dx = e.clientX - pr.lastX;\r\n      const dy = e.clientY - pr.lastY;\r\n      let vx = (dx / dt) * 1000;\r\n      let vy = (dy / dt) * 1000;\r\n      let speed = Math.hypot(vx, vy);\r\n      if (speed > maxSpeed) {\r\n        const scale = maxSpeed / speed;\r\n        vx *= scale;\r\n        vy *= scale;\r\n        speed = maxSpeed;\r\n      }\r\n      pr.lastTime = now;\r\n      pr.lastX = e.clientX;\r\n      pr.lastY = e.clientY;\r\n      pr.vx = vx;\r\n      pr.vy = vy;\r\n      pr.speed = speed;\r\n\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      pr.x = e.clientX - rect.left;\r\n      pr.y = e.clientY - rect.top;\r\n\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - pr.x, dot.cy - pr.y);\r\n        if (speed > speedTrigger && dist < proximity && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const pushX = dot.cx - pr.x + vx * 0.005;\r\n          const pushY = dot.cy - pr.y + vy * 0.005;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const onClick = (e) => {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const cx = e.clientX - rect.left;\r\n      const cy = e.clientY - rect.top;\r\n      for (const dot of dotsRef.current) {\r\n        const dist = Math.hypot(dot.cx - cx, dot.cy - cy);\r\n        if (dist < shockRadius && !dot._inertiaApplied) {\r\n          dot._inertiaApplied = true;\r\n          gsap.killTweensOf(dot);\r\n          const falloff = Math.max(0, 1 - dist / shockRadius);\r\n          const pushX = (dot.cx - cx) * shockStrength * falloff;\r\n          const pushY = (dot.cy - cy) * shockStrength * falloff;\r\n          gsap.to(dot, {\r\n            inertia: { xOffset: pushX, yOffset: pushY, resistance },\r\n            onComplete: () => {\r\n              gsap.to(dot, {\r\n                xOffset: 0,\r\n                yOffset: 0,\r\n                duration: returnDuration,\r\n                ease: \"elastic.out(1,0.75)\",\r\n              });\r\n              dot._inertiaApplied = false;\r\n            },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const throttledMove = throttle(onMove, 50);\r\n    window.addEventListener(\"mousemove\", throttledMove, { passive: true });\r\n    window.addEventListener(\"click\", onClick);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", throttledMove);\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [maxSpeed, speedTrigger, proximity, resistance, returnDuration, shockRadius, shockStrength]);\r\n\r\n  return (\r\n    <section className={`dot-grid ${className}`} style={style}>\r\n      <div ref={wrapperRef} className=\"dot-grid__wrap\">\r\n        <canvas ref={canvasRef} className=\"dot-grid__canvas\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DotGrid;\r\n","import { useRef, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport \"./GridDistortion.css\";\r\n\r\nconst vertexShader = `\r\nuniform float time;\r\nvarying vec2 vUv;\r\nvarying vec3 vPosition;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  vPosition = position;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}`;\r\n\r\nconst fragmentShader = `\r\nuniform sampler2D uDataTexture;\r\nuniform sampler2D uTexture;\r\nuniform vec4 resolution;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vec2 uv = vUv;\r\n  vec4 offset = texture2D(uDataTexture, vUv);\r\n  gl_FragColor = texture2D(uTexture, uv - 0.02 * offset.rg);\r\n}`;\r\n\r\nconst GridDistortion = ({ grid = 15, mouse = 0.1, strength = 0.15, relaxation = 0.9, imageSrc, className = \"\" }) => {\r\n  const containerRef = useRef(null);\r\n  const sceneRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const planeRef = useRef(null);\r\n  const imageAspectRef = useRef(1);\r\n  const animationIdRef = useRef(null);\r\n  const resizeObserverRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    const container = containerRef.current;\r\n\r\n    const scene = new THREE.Scene();\r\n    sceneRef.current = scene;\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n    });\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    renderer.setClearColor(0x000000, 0);\r\n    rendererRef.current = renderer;\r\n\r\n    container.innerHTML = \"\";\r\n    container.appendChild(renderer.domElement);\r\n\r\n    const camera = new THREE.OrthographicCamera(0, 0, 0, 0, -1000, 1000);\r\n    camera.position.z = 2;\r\n    cameraRef.current = camera;\r\n\r\n    const uniforms = {\r\n      time: { value: 0 },\r\n      resolution: { value: new THREE.Vector4() },\r\n      uTexture: { value: null },\r\n      uDataTexture: { value: null },\r\n    };\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(imageSrc, (texture) => {\r\n      texture.minFilter = THREE.LinearFilter;\r\n      texture.magFilter = THREE.LinearFilter;\r\n      texture.wrapS = THREE.ClampToEdgeWrapping;\r\n      texture.wrapT = THREE.ClampToEdgeWrapping;\r\n      imageAspectRef.current = texture.image.width / texture.image.height;\r\n      uniforms.uTexture.value = texture;\r\n      handleResize();\r\n    });\r\n\r\n    const size = grid;\r\n    const data = new Float32Array(4 * size * size);\r\n    for (let i = 0; i < size * size; i++) {\r\n      data[i * 4] = Math.random() * 255 - 125;\r\n      data[i * 4 + 1] = Math.random() * 255 - 125;\r\n    }\r\n\r\n    const dataTexture = new THREE.DataTexture(data, size, size, THREE.RGBAFormat, THREE.FloatType);\r\n    dataTexture.needsUpdate = true;\r\n    uniforms.uDataTexture.value = dataTexture;\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n      side: THREE.DoubleSide,\r\n      uniforms,\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: true,\r\n    });\r\n\r\n    const geometry = new THREE.PlaneGeometry(1, 1, size - 1, size - 1);\r\n    const plane = new THREE.Mesh(geometry, material);\r\n    planeRef.current = plane;\r\n    scene.add(plane);\r\n\r\n    const handleResize = () => {\r\n      if (!container || !renderer || !camera) return;\r\n\r\n      const rect = container.getBoundingClientRect();\r\n      const width = rect.width;\r\n      const height = rect.height;\r\n\r\n      if (width === 0 || height === 0) return;\r\n\r\n      const containerAspect = width / height;\r\n\r\n      renderer.setSize(width, height);\r\n\r\n      if (plane) {\r\n        plane.scale.set(containerAspect, 1, 1);\r\n      }\r\n\r\n      const frustumHeight = 1;\r\n      const frustumWidth = frustumHeight * containerAspect;\r\n      camera.left = -frustumWidth / 2;\r\n      camera.right = frustumWidth / 2;\r\n      camera.top = frustumHeight / 2;\r\n      camera.bottom = -frustumHeight / 2;\r\n      camera.updateProjectionMatrix();\r\n\r\n      uniforms.resolution.value.set(width, height, 1, 1);\r\n    };\r\n\r\n    if (window.ResizeObserver) {\r\n      const resizeObserver = new ResizeObserver(() => {\r\n        handleResize();\r\n      });\r\n      resizeObserver.observe(container);\r\n      resizeObserverRef.current = resizeObserver;\r\n    } else {\r\n      window.addEventListener(\"resize\", handleResize);\r\n    }\r\n\r\n    const mouseState = {\r\n      x: 0,\r\n      y: 0,\r\n      prevX: 0,\r\n      prevY: 0,\r\n      vX: 0,\r\n      vY: 0,\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n      const rect = container.getBoundingClientRect();\r\n      const x = (e.clientX - rect.left) / rect.width;\r\n      const y = 1 - (e.clientY - rect.top) / rect.height;\r\n      mouseState.vX = x - mouseState.prevX;\r\n      mouseState.vY = y - mouseState.prevY;\r\n      Object.assign(mouseState, { x, y, prevX: x, prevY: y });\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      if (dataTexture) {\r\n        dataTexture.needsUpdate = true;\r\n      }\r\n      Object.assign(mouseState, {\r\n        x: 0,\r\n        y: 0,\r\n        prevX: 0,\r\n        prevY: 0,\r\n        vX: 0,\r\n        vY: 0,\r\n      });\r\n    };\r\n\r\n    container.addEventListener(\"mousemove\", handleMouseMove);\r\n    container.addEventListener(\"mouseleave\", handleMouseLeave);\r\n\r\n    handleResize();\r\n\r\n    const animate = () => {\r\n      animationIdRef.current = requestAnimationFrame(animate);\r\n\r\n      if (!renderer || !scene || !camera) return;\r\n\r\n      uniforms.time.value += 0.05;\r\n\r\n      const data = dataTexture.image.data;\r\n      for (let i = 0; i < size * size; i++) {\r\n        data[i * 4] *= relaxation;\r\n        data[i * 4 + 1] *= relaxation;\r\n      }\r\n\r\n      const gridMouseX = size * mouseState.x;\r\n      const gridMouseY = size * mouseState.y;\r\n      const maxDist = size * mouse;\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        for (let j = 0; j < size; j++) {\r\n          const distSq = Math.pow(gridMouseX - i, 2) + Math.pow(gridMouseY - j, 2);\r\n          if (distSq < maxDist * maxDist) {\r\n            const index = 4 * (i + size * j);\r\n            const power = Math.min(maxDist / Math.sqrt(distSq), 10);\r\n            data[index] += strength * 100 * mouseState.vX * power;\r\n            data[index + 1] -= strength * 100 * mouseState.vY * power;\r\n          }\r\n        }\r\n      }\r\n\r\n      dataTexture.needsUpdate = true;\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      if (animationIdRef.current) {\r\n        cancelAnimationFrame(animationIdRef.current);\r\n      }\r\n\r\n      if (resizeObserverRef.current) {\r\n        resizeObserverRef.current.disconnect();\r\n      } else {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n      }\r\n\r\n      container.removeEventListener(\"mousemove\", handleMouseMove);\r\n      container.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n\r\n      if (renderer) {\r\n        renderer.dispose();\r\n        if (container.contains(renderer.domElement)) {\r\n          container.removeChild(renderer.domElement);\r\n        }\r\n      }\r\n\r\n      if (geometry) geometry.dispose();\r\n      if (material) material.dispose();\r\n      if (dataTexture) dataTexture.dispose();\r\n      if (uniforms.uTexture.value) uniforms.uTexture.value.dispose();\r\n\r\n      sceneRef.current = null;\r\n      rendererRef.current = null;\r\n      cameraRef.current = null;\r\n      planeRef.current = null;\r\n    };\r\n  }, [grid, mouse, strength, relaxation, imageSrc]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`distortion-container ${className}`}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        minWidth: \"0\",\r\n        minHeight: \"0\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GridDistortion;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BackgroundWrapper = styled.section`\r\n  position: relative;\r\n  scroll-snap-align: start;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  padding: 0 1rem; /* Agregar padding horizontal */\r\n`;\r\n\r\nexport const BackgroundContainer = styled.div`\r\n  position: absolute;\r\n  inset: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 0;\r\n  /* pointer-events: none; - Removido para permitir interacción con GridDistortion */\r\n`;\r\n\r\nexport const BackgroundContent = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  pointer-events: none; /* El contenedor no interfiere */\r\n\r\n  /* Pero los elementos interactivos sí deben ser clickeables */\r\n  * {\r\n    pointer-events: auto;\r\n  }\r\n`;\r\n","import FaultyTerminalBackground from \"../Backgrounds/FaultyTerminal/faultyTerminal\";\r\nimport DotGridBackground from \"../Backgrounds/DotGrid/DotGrid\";\r\nimport GridDistortionBackground from \"../Backgrounds/GridDistortion/GridDistortion\";\r\nimport { BackgroundWrapper, BackgroundContainer, BackgroundContent } from \"./BackgroundWrapper\";\r\nimport { ReactNode } from \"react\";\r\n\r\n// BackgroundSecurity ahora está integrado en BackgroundGridDistortion con className=\"security-distortion\"\r\n\r\ninterface BackgroundWrapperProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const BackgroundFaultyTerminal = ({ children }: BackgroundWrapperProps) => (\r\n  <BackgroundWrapper>\r\n    <BackgroundContainer>\r\n      <FaultyTerminalBackground\r\n        className=\"\"\r\n        tint=\"#5F0807\"\r\n        scale={2}\r\n        digitSize={3}\r\n        noiseAmp={1}\r\n        brightness={0.6}\r\n        scanlineIntensity={0.5}\r\n        curvature={0.2}\r\n        mouseReact={true}\r\n        mouseStrength={2}\r\n        pageLoadAnimation={true}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </BackgroundContainer>\r\n    <BackgroundContent>{children}</BackgroundContent>\r\n  </BackgroundWrapper>\r\n);\r\n\r\nexport const BackgroundDotGrid = ({ children }: BackgroundWrapperProps) => (\r\n  <BackgroundWrapper>\r\n    <BackgroundContainer>\r\n      <DotGridBackground\r\n        className=\"\"\r\n        dotSize={5}\r\n        gap={50}\r\n        baseColor=\"#333333\"\r\n        activeColor=\"#F75800\"\r\n        proximity={120}\r\n        shockRadius={250}\r\n        shockStrength={7}\r\n        resistance={750}\r\n        returnDuration={1.5}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n    </BackgroundContainer>\r\n    <BackgroundContent>{children}</BackgroundContent>\r\n  </BackgroundWrapper>\r\n);\r\n\r\nexport const BackgroundGridDistortion = ({ children }: BackgroundWrapperProps) => (\r\n  <BackgroundWrapper>\r\n    <BackgroundContainer>\r\n      <GridDistortionBackground\r\n        imageSrc={`${process.env.PUBLIC_URL}/img/png/HeroBackground.png`}\r\n        grid={30}\r\n        mouse={0.1}\r\n        strength={0.4}\r\n        relaxation={0.9}\r\n        className=\"security-distortion\"\r\n      />\r\n    </BackgroundContainer>\r\n    <BackgroundContent className=\"security-background\">{children}</BackgroundContent>\r\n  </BackgroundWrapper>\r\n);\r\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport { ScrollSnapContainer } from \"../../components/ContentBlock/styles\";\r\nimport {\r\n  BackgroundFaultyTerminal,\r\n  BackgroundDotGrid,\r\n  BackgroundGridDistortion,\r\n} from \"../../components/BackgroundWrapper\";\r\nimport DomeCamera from \"../../components/Elements/SecurityCamera/DomeCamera\";\r\nimport { WhatsAppWidget } from \"react-whatsapp-widget\";\r\nimport \"react-whatsapp-widget/dist/index.css\";\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() =>\r\n  import(\"../../components/ContentBlock\").then((module) => ({\r\n    default: module.default as React.ComponentType<any>,\r\n  }))\r\n);\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <ScrollSnapContainer>\r\n        <ScrollToTop />\r\n        {/* Intro Section - Security Control Room Background */}\r\n        <BackgroundGridDistortion>\r\n          <ContentBlock\r\n            direction=\"center\"\r\n            title={IntroContent.title}\r\n            content={IntroContent.text}\r\n            button={IntroContent.button}\r\n            id=\"intro\"\r\n          />\r\n        </BackgroundGridDistortion>\r\n\r\n        {/* Middle Block Section */}\r\n        <BackgroundDotGrid>\r\n          <MiddleBlock\r\n            title={MiddleBlockContent.title}\r\n            content={MiddleBlockContent.text}\r\n            button={MiddleBlockContent.button}\r\n          />\r\n        </BackgroundDotGrid>\r\n\r\n        {/* About Section */}\r\n        <BackgroundDotGrid>\r\n          <ContentBlock\r\n            direction=\"left\"\r\n            title={AboutContent.title}\r\n            content={AboutContent.text}\r\n            section={AboutContent.section}\r\n            icon=\"graphs.svg\"\r\n            id=\"about\"\r\n          />\r\n        </BackgroundDotGrid>\r\n\r\n        {/* Mission Section */}\r\n        <BackgroundDotGrid>\r\n          <ContentBlock\r\n            direction=\"right\"\r\n            title={MissionContent.title}\r\n            content={MissionContent.text}\r\n            icon=\"product-launch.svg\"\r\n            id=\"mission\"\r\n          />\r\n        </BackgroundDotGrid>\r\n\r\n        {/* Product Section */}\r\n        <BackgroundDotGrid>\r\n          <ContentBlock\r\n            direction=\"left\"\r\n            title={ProductContent.title}\r\n            content={ProductContent.text}\r\n            icon=\"waving.svg\"\r\n            id=\"product\"\r\n          />\r\n        </BackgroundDotGrid>\r\n\r\n        {/* Contact Section */}\r\n        <BackgroundDotGrid>\r\n          <Contact title={ContactContent.title} content={ContactContent.text} id=\"contact\" />\r\n        </BackgroundDotGrid>\r\n      </ScrollSnapContainer>\r\n\r\n      {/* WhatsApp Widget - Outside ScrollSnapContainer to avoid z-index issues */}\r\n      <div style={{ position: \"fixed\", bottom: \"20px\", right: \"20px\", zIndex: 9999, pointerEvents: \"all\" }}>\r\n        <WhatsAppWidget\r\n          phoneNumber=\"+5491169369090\"\r\n          companyName=\"Solyven Seguridad\"\r\n          replyTimeText=\"Usualmente responde en minutos\"\r\n          message=\"Hola 👋 ¿Necesitás un presupuesto?\"\r\n          sendButtonText=\"Enviar\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["ScrollSnapContainer","styled","_templateObject","_taggedTemplateLiteral","ContentSection","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","_ref2","ContentWrapper","_templateObject4","_ref3","$centered","_ref4","ServiceWrapper","_templateObject5","Content","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ButtonWrapper","_templateObject9","_ref5","_ref6","_ref7","_ref8","gsap","registerPlugin","InertiaPlugin","throttle","func","limit","lastCall","now","performance","_len","arguments","length","args","Array","_key","apply","this","hexToRgb","hex","m","match","r","parseInt","g","b","dotSize","gap","baseColor","activeColor","proximity","speedTrigger","shockRadius","shockStrength","maxSpeed","resistance","returnDuration","className","style","wrapperRef","useRef","canvasRef","dotsRef","pointerRef","x","y","vx","vy","speed","lastTime","lastX","lastY","baseRgb","useMemo","activeRgb","circlePath","window","Path2D","p","arc","Math","PI","buildGrid","useCallback","wrap","current","canvas","width","height","getBoundingClientRect","dpr","devicePixelRatio","concat","ctx","getContext","scale","cols","floor","rows","cell","startX","startY","dots","cx","cy","push","xOffset","yOffset","_inertiaApplied","useEffect","rafId","proxSq","draw","clearRect","px","py","dot","ox","oy","dx","dy","dsq","t","sqrt","round","save","translate","fillStyle","fill","restore","requestAnimationFrame","cancelAnimationFrame","ro","ResizeObserver","observe","addEventListener","disconnect","removeEventListener","onClick","e","rect","clientX","left","clientY","top","dist","hypot","killTweensOf","falloff","max","pushX","pushY","to","inertia","onComplete","duration","ease","throttledMove","pr","dt","passive","_jsx","children","ref","grid","mouse","strength","relaxation","imageSrc","containerRef","sceneRef","rendererRef","cameraRef","planeRef","imageAspectRef","animationIdRef","resizeObserverRef","container","scene","THREE","renderer","antialias","alpha","powerPreference","setPixelRatio","min","setClearColor","innerHTML","appendChild","domElement","camera","position","z","uniforms","time","value","resolution","uTexture","uDataTexture","load","texture","minFilter","magFilter","wrapS","wrapT","image","handleResize","size","data","Float32Array","i","random","dataTexture","needsUpdate","material","side","vertexShader","fragmentShader","transparent","geometry","plane","add","containerAspect","setSize","set","frustumWidth","right","frustumHeight","bottom","updateProjectionMatrix","resizeObserver","mouseState","prevX","prevY","vX","vY","handleMouseMove","Object","assign","handleMouseLeave","animate","gridMouseX","gridMouseY","maxDist","j","distSq","pow","index","power","render","dispose","contains","removeChild","minWidth","minHeight","BackgroundWrapper","section","BackgroundContainer","div","BackgroundContent","BackgroundDotGrid","_jsxs","DotGridBackground","BackgroundGridDistortion","GridDistortionBackground","process","Contact","lazy","MiddleBlock","ScrollToTop","ContentBlock","then","module","default","Home","_Fragment","title","IntroContent","content","button","id","MiddleBlockContent","AboutContent","icon","MissionContent","ProductContent","ContactContent","zIndex","pointerEvents","WhatsAppWidget","phoneNumber","companyName","replyTimeText","message","sendButtonText"],"sourceRoot":""}